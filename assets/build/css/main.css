/*!*************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/scss/main.scss ***!
  \*************************************************************************************************************/
/*---------------------------------
		Colors Variables
-----------------------------------*/
/*---------------------------------
		Colors Variables
-----------------------------------*/
/*---------------------------------
		Opacity
-----------------------------------*/
/*---------------------------------
		Gradient
-----------------------------------*/
/*---------------------------------
		Element Colors
-----------------------------------*/
/*---------------------------------
		Border Colors
-----------------------------------*/
/*----------------
		Font
------------------*/
/*---------------------------------
		Body Text Font Sizes
-----------------------------------*/
/**
 * Add font scale with media query as per configuration on $body-text
 * Ex: @include body-text( h1 );
 * This will add font-size and line-height with different breakpoints.
 */
/* Entry meta */
.updated:not(.published) {
  display: none;
}

/* Pagination */
.page-numbers.current > span {
  background-color: #76e3c0;
  color: #fff;
}

.category-btn:nth-child(0) {
  background: rgba(196, 200, 6, 0.3);
}
.category-btn:nth-child(1) {
  background: rgba(235, 202, 19, 0.3);
}
.category-btn:nth-child(2) {
  background: rgba(18, 92, 135, 0.3);
}
.category-btn:nth-child(3) {
  background: rgba(79, 172, 140, 0.3);
}
.category-btn:nth-child(4) {
  background: rgba(69, 156, 3, 0.3);
}

.category-link {
  color: black;
}

/*---------------------------
		Accessiblity
---------------------------*/
/* Text meant only for screen readers. */
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  left: -999em;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  word-wrap: normal;
}
.screen-reader-text:focus {
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto;
  clip-path: none;
  display: block;
  font-size: 1em;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000; /* Above WP toolbar. */
}

/*---------------------------
		Alignments
---------------------------*/
.left {
  float: left;
}

.right {
  float: right;
}

.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-center {
  text-align: center;
}
.text-justify {
  text-align: justify;
}

/*---------------------------
		Others
---------------------------*/
.hide {
  display: none;
}

.hidden {
  visibility: hidden;
}

.visible {
  visibility: visible;
}

html {
  box-sizing: border-box;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

/* stylelint-disable */
*,
*:before,
*:after {
  /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
  box-sizing: inherit;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

/* stylelint-enable */
body {
  margin: 0;
  font-family: "Lato", sans-serif;
  font-size: 16px;
  line-height: 1.43;
  background: #ffffff;
  color: #414042;
}
@media (min-width: 64em) {
  body {
    font-size: 18px;
    line-height: 1.43;
  }
}
body.mce-content-body {
  font-family: inherit;
  margin: 15px;
}

blockquote,
q,
blockquote.wp-block-quote {
  quotes: "" "";
  border-left: 4px solid #eeeeee;
  font-style: italic;
  margin: 0 0 30px 30px;
  padding-left: 16px;
  background: transparent;
  text-align: left;
  /* stylelint-disable */
  /* stylelint-enable */
}
blockquote p,
q p,
blockquote.wp-block-quote p {
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
}
blockquote cite,
blockquote .wp-block-quote__citation,
q cite,
q .wp-block-quote__citation,
blockquote.wp-block-quote cite,
blockquote.wp-block-quote .wp-block-quote__citation {
  display: block;
  font-size: 16px;
  font-weight: 700;
  margin-top: 12px;
  text-transform: uppercase;
}
blockquote p:last-of-type,
q p:last-of-type,
blockquote.wp-block-quote p:last-of-type {
  margin-bottom: 0;
}
blockquote.is-large, blockquote.is-style-large,
q.is-large,
q.is-style-large,
blockquote.wp-block-quote.is-large,
blockquote.wp-block-quote.is-style-large {
  margin: 0 auto;
}

/* Pull Quote
--------------------------------------------- */
.wp-block-pullquote {
  border: none;
  padding: 0;
  vertical-align: middle;
}
.wp-block-pullquote blockquote {
  border-left: 0;
  border-top: 8px solid #eeeeee;
  border-bottom: 8px solid #eeeeee;
  padding: 16px 0;
  text-align: center;
  max-width: 50%;
  margin: 0 auto;
}
.wp-block-pullquote.alignleft blockquote, .wp-block-pullquote.alignright blockquote {
  max-width: 100%;
}
.wp-block-pullquote img {
  height: auto;
  max-width: 100%;
  vertical-align: middle;
}

/* Image Support
--------------------------------------------- */
.wp-block-image.size-medium img, .wp-block-image.size-thumbnail img, .wp-block-image.is-resized img {
  width: auto;
}
.wp-block-image figcaption {
  text-align: left;
  padding: 10px 0;
}

figure {
  max-width: 100%;
}

a {
  cursor: pointer;
  color: #0192cc;
  text-decoration: none;
  transition: 0.3s;
}
a:focus {
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
a:hover,
a a:active {
  color: #355180;
  text-decoration: underline;
  outline: 0;
}

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
h1 {
  font-size: 31.5px;
  line-height: 1.27;
}

h2 {
  font-size: 31.5px;
  line-height: 1.27;
}

h3 {
  font-size: 24.5px;
  line-height: 1.64;
}

h4 {
  font-size: 17.5px;
  line-height: 1.142;
}

h5 {
  font-size: 14px;
  line-height: 1.43;
}

h6 {
  font-size: 11.9px;
  line-height: 1.681;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 10px 0;
  text-rendering: optimizelegibility;
}

/* Button
--------------------------------------------- */
.wp-block-button .wp-block-button__link {
  border-radius: 0;
  font-weight: 700;
  font-size: 16px;
  line-height: 18px;
  padding: 20px 24px;
}
.wp-block-button .wp-block-button__link:hover {
  background: #cccccc;
  text-decoration: none;
}

/*---------------------------
		Lists
---------------------------*/
ul,
ol {
  margin: 0 0 18px 0;
}
ul.no-bullet,
ul.no-bullet ul,
ul.no-bullet ol,
ol.no-bullet,
ol.no-bullet ul,
ol.no-bullet ol {
  margin: 0;
  padding: 0;
  list-style: none;
}

ul {
  padding: 0;
  margin: 0 0 10px 25px;
}
@media (min-width: 48em) {
  ul {
    margin: 0 0 5px 0;
  }
}

li > ul,
li > ol {
  margin-bottom: 0;
  margin-left: 18px;
}

dt {
  font-weight: 700;
}

dd {
  margin: 0 24px 24px;
}

p:empty {
  display: none;
}

li > ul,
li > ol {
  margin-bottom: 0;
}

/*------------------------------------*\
    #TABLE
\*------------------------------------*/
table {
  max-width: 100%;
  background-color: transparent;
  border-collapse: collapse;
  border-spacing: 0;
}
@media (min-width: 48em) {
  table {
    max-width: 350px;
  }
}

/*------------------------------------*\
    Form Fields
\*------------------------------------*/
input,
button,
select,
textarea {
  font-family: "Lato", sans-serif;
}

select,
textarea,
input[type=text],
input[type=password],
input[type=datetime],
input[type=datetime-local],
input[type=date],
input[type=month],
input[type=time],
input[type=week],
input[type=number],
input[type=email],
input[type=url],
input[type=search],
input[type=tel],
input[type=color],
.uneditable-input {
  display: inline-block;
  height: 20px;
  width: 206px;
  padding: 14px 6px; /* adjusting border-box difference on live site */
  height: 100%;
  line-height: 1.43;
  color: #555555;
  vertical-align: middle;
  border-radius: 4px;
  background-color: #ffffff;
  border: 1px solid #cccccc;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  transition: border linear 0.2s, box-shadow linear 0.2s;
}

textarea {
  height: auto;
  padding: 4px 6px;
  max-width: 100%;
  outline: none;
  overflow: auto;
}

select {
  box-shadow: none;
  transition: none;
  width: 220px;
  padding: 0 6px;
}

select,
input[type=file] {
  height: 30px;
  line-height: 2.15;
}

button {
  margin: 0;
}

label {
  display: block;
  margin-bottom: 5px;
}

label,
input,
button,
select,
textarea {
  font-size: 16px;
  line-height: 1.43;
  font-weight: 400;
}
@media (min-width: 64em) {
  label,
  input,
  button,
  select,
  textarea {
    font-size: 18px;
    line-height: 1.43;
  }
}

label,
select,
button,
input[type=button],
input[type=reset],
input[type=submit],
input[type=radio],
input[type=checkbox] {
  cursor: pointer;
}

input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-cancel-button {
  -webkit-appearance: none;
}

/*------------------------------------*\
    #OTHER
\*------------------------------------*/
pre {
  display: block;
  padding: 9.5px;
  margin: 0 0 10px;
  font-size: 13px;
  line-height: 1.54;
  word-break: break-all;
  word-wrap: break-word;
  white-space: pre-wrap;
  background-color: #e2eaee;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 4px;
  font-family: "Lato", sans-serif, monospace;
}

code {
  padding: 2px 4px;
  color: #d14;
  white-space: nowrap;
  background-color: #f7f7f9;
  border: 1px solid #e1e1e8;
  font-family: "Lato", sans-serif, monospace;
  font-size: 12px;
  border-radius: 3px;
}

/* Separator
--------------------------------------------- */
.wp-block-separator,
hr {
  width: 100%;
  margin: 20px 0;
  border: 0;
  border-top: 1px solid #eeeeee;
  border-bottom: 1px solid #ffffff;
  box-sizing: content-box;
}
.wp-block-separator:not(.is-style-dots),
hr:not(.is-style-dots) {
  background-color: #eff3f6;
  border: 0;
  height: 1px;
}
.wp-block-separator:not(.is-style-wide):not(.is-style-dots),
hr:not(.is-style-wide):not(.is-style-dots) {
  width: 100%;
  height: 4px;
  background: transparent;
}
.wp-block-separator:not(.is-style-wide):not(.is-style-dots)::before,
hr:not(.is-style-wide):not(.is-style-dots)::before {
  content: "";
  display: block;
  height: 4px;
  width: 40px;
  background: #eff3f6;
}
.wp-block-separator.is-style-dots::before,
hr.is-style-dots::before {
  color: #eff3f6;
  font-size: 18px;
  letter-spacing: 12px;
  padding-left: 12px;
}

a {
  color: #6c757d;
}

.box {
  position: relative;
}

.input {
  padding: 10px;
  width: 85px;
  height: 40px;
  background: none;
  border: 2px solid #ffffff;
  border-radius: 50px;
  box-sizing: border-box;
  outline: none;
  transition: 0.5s;
}

.box:hover input {
  color: #414042;
  width: 250px;
  background: #ffffff;
  border: 2px solid #76e3c0;
  border-radius: 10px;
}

footer {
  padding-top: 3rem;
  background-color: #76e3c0;
  color: black;
  margin-top: 5rem;
}

/* normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
  * 1. Correct `inline-block` display not defined in IE 8/9.
  * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
  */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
  * Prevent modern browsers from displaying `audio` without controls.
  * Remove excess height in iOS 5 devices.
  */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
  * Address `[hidden]` styling not present in IE 8/9/10.
  * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
  */
[hidden],
template {
  display: none;
}

/* Text-level semantics
    ========================================================================== */
/**
  * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
  */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
  * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
  */
b,
strong {
  font-weight: 700;
}

/**
  * Address styling not present in Safari and Chrome.
  */
dfn {
  font-style: italic;
}

/**
  * Address styling not present in IE 8/9.
  */
mark {
  background: #cccccc;
  color: #000000;
}

/**
  * Address inconsistent and variable font size in all browsers.
  */
small {
  font-size: 80%;
}

/**
  * Prevent `sub` and `sup` affecting `line-height` in all browsers.
  */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -8px;
}

sub {
  bottom: -4px;
}

/* Embedded content
    ========================================================================== */
/**
  * Correct overflow not hidden in IE 9/10/11.
  */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
    ========================================================================== */
/**
  * Known limitation: by default, Chrome and Safari on OS X allow very limited
  * styling of `select`, unless a `border` property is set.
  */
/**
  * 1. Correct color not being inherited.
  *    Known issue: affects color of disabled elements.
  * 2. Correct font properties not being inherited.
  * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
  */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
  * Address `overflow` set to `hidden` in IE 8/9/10/11.
  */
button {
  overflow: visible;
}

/**
  * Address inconsistent `text-transform` inheritance for `button` and `select`.
  * All other form control elements do not inherit `text-transform` values.
  * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
  * Correct `select` style inheritance in Firefox.
  */
button,
select {
  text-transform: none;
}

/**
  * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
  *    and `video` controls.
  * 2. Correct inability to style clickable `input` types in iOS.
  * 3. Improve usability and consistency of cursor style between image-type
  *    `input` and others.
  */
button,
html input[type=button],
input[type=reset],
input[type=submit] {
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
  * Re-set default cursor for disabled elements.
  */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
  * Remove inner padding and border in Firefox 4+.
  */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
  * It's recommended that you don't attempt to style these elements.
  * Firefox's implementation doesn't respect box-sizing, padding, or width.
  *
  * 1. Address box sizing set to `content-box` in IE 8/9/10.
  * 2. Remove excess padding in IE 8/9/10.
  */
input[type=checkbox],
input[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
  * Fix the cursor style for Chrome's increment/decrement buttons. For certain
  * `font-size` values of the `input`, it causes the cursor style of the
  * decrement button to change from `default` to `text`.
  */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
  * Remove inner padding and search cancel button in Safari and Chrome on OS X.
  * Safari (but not Chrome) clips the cancel button when the search input has
  * padding (and `textfield` appearance).
  */
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
  * 1. Correct the inability to style clickable types in iOS and Safari.
  * 2. Change font properties to `inherit` in Safari.
  */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/**
  * Define consistent border, margin, and padding.
  */
fieldset {
  border: 1px solid #cccccc;
  margin: 0 2px;
  padding: 6px 10px 12px;
}

/**
  * 1. Correct `color` not being inherited in IE 8/9/10/11.
  * 2. Remove padding so people aren't caught out if they zero out fieldsets.
  */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
  * Don't inherit the `font-weight` (applied by a rule above).
  * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
  */
optgroup {
  font-weight: 700;
}

/* Note: This file is updated by Sagar, To remove ducplication of styles. */
figure {
  margin: 0;
  max-width: 100%;
}

/*-----------
	Media
-------------*/
.page-content .wp-smiley,
.entry-content .wp-smiley,
.comment-content .wp-smiley {
  border: none;
  margin-bottom: 0;
  margin-top: 0;
  padding: 0;
}

/* Make sure embeds and iframes fit their containers. */
embed,
iframe,
object {
  max-width: 100%;
}

.site-content {
  word-wrap: break-word;
}

.front-img {
  opacity: 50%;
}

.front-img:hover {
  opacity: 100%;
  text-decoration-color: black;
}

a:hover {
  text-decoration: none;
}

.search-card-content {
  display: flex;
}
.search-card-content p {
  margin: 10px 25px;
  width: 100%;
}

.search-card-container .search-card-content {
  margin-top: 16px;
}
@media (min-width: 48em) {
  .search-card-container .search-card-content {
    margin-top: 0;
  }
}
@media (min-width: 48em) {
  .search-card-container .search-card-thumbnail {
    margin-right: 16px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NzL21haW4uY3NzIiwibWFwcGluZ3MiOiI7OztBQUFBOztvQ0FBQTtBQUlBOztvQ0FBQTtBQXVDQTs7b0NBQUE7QUFPQTs7b0NBQUE7QUFPQTs7b0NBQUE7QUE0QkE7O29DQUFBO0FDckZBOzttQkFBQTtBQWdCQTs7b0NBQUE7QUNBQTs7OztFQUFBO0FDaEJBO0FBQ0E7RUFDRTtBQzhCRjs7QUNoQ0E7QUFDQTtFQUNFO0VBQ0E7QURtQ0Y7O0FFL0JJO0VKNENGO0FFVEY7QUVuQ0k7RUo0Q0Y7QUVORjtBRXRDSTtFSjRDRjtBRUhGO0FFekNJO0VKNENGO0FFQUY7QUU1Q0k7RUo0Q0Y7QUVHRjs7QUV6Q0E7RUFDRTtBRjRDRjs7QUcxREE7OzRCQUFBO0FBSUE7QUFDQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUg0REY7QUcxREU7RUFDRSxrQkNoQlk7RURpQlo7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUg0REo7O0FHeERBOzs0QkFBQTtBQUlBO0VBQ0U7QUgwREY7O0FHdkRBO0VBQ0U7QUgwREY7O0FHdERFO0VBQ0U7QUh5REo7QUd0REU7RUFDRTtBSHdESjtBR3JERTtFQUNFO0FIdURKO0FHcERFO0VBQ0U7QUhzREo7O0FHbERBOzs0QkFBQTtBQUlBO0VBQ0U7QUhvREY7O0FHakRBO0VBQ0U7QUhvREY7O0FHakRBO0VBQ0U7QUhvREY7O0FLbklBO0VBQ0U7RUFDQTtFQUNBO0FMc0lGOztBS25JQTtBQUNBOzs7RUFHRTtFQUNBO0VBRUE7QUxxSUY7O0FLbklBO0FBRUE7RUFDRTtFUExBLCtCRFJXO0VDZ0NIO0VBQ0E7RU9mUixtQlRMTTtFU01OLGNUWlU7QUlnSlo7QU1vQkU7RUQvSkY7SVBnQlk7SUFDQTtFRStIVjtBQUNGO0FLdklFO0VBQ0U7RUFDQTtBTHlJSjs7QUtySUE7OztFQUdFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBUUE7RUFTQTtBTHlIRjtBS3hJRTs7O0VBQ0U7RUFDQTtFQUNBO0FMNElKO0FLeElFOzs7Ozs7RUFFRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FMOElKO0FLMUlFOzs7RUFDRTtBTDhJSjtBSzNJRTs7Ozs7RUFFRTtBTGdKSjs7QUs1SUE7K0NBQUE7QUFFQTtFQUNFO0VBQ0E7RUFDQTtBTCtJRjtBSzdJRTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FMK0lKO0FLMUlJO0VBQ0U7QUw0SU47QUt4SUU7RUFDRTtFQUNBO0VBQ0E7QUwwSUo7O0FLdElBOytDQUFBO0FBTUk7RUFDRTtBTHFJTjtBS2pJRTtFQUNFO0VBQ0E7QUxtSUo7O0FLL0hBO0VBQ0U7QUxrSUY7O0FLL0hBO0VBQ0U7RUFDQSxjVDNGUztFUzRGVDtFQUNBO0FMa0lGO0FLaElFO0VBQ0U7RUFDQTtBTGtJSjtBSy9IRTs7RUFFRSxjVHpHTztFUzBHUDtFQUNBO0FMaUlKOztBSzdIQTs7RUFFRTtFQUNBO0VBQ0E7RUFDQTtBTGdJRjs7QUs3SEE7RUFDRTtBTGdJRjs7QUs3SEE7RUFDRTtBTGdJRjs7QUs3SEE7O3VDQUFBO0FBSUE7RVA3SFU7RUFDQTtBRTZQVjs7QUs3SEE7RVBqSVU7RUFDQTtBRWtRVjs7QUs5SEE7RVBySVU7RUFDQTtBRXVRVjs7QUsvSEE7RVB6SVU7RUFDQTtBRTRRVjs7QUtoSUE7RVA3SVU7RUFDQTtBRWlSVjs7QUtqSUE7RVBqSlU7RUFDQTtBRXNSVjs7QUtsSUE7Ozs7OztFQU1FO0VBQ0E7QUxxSUY7O0FLbElBOytDQUFBO0FBSUU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FMbUlKO0FLaklJO0VBQ0UsbUJUdExLO0VTdUxMO0FMbUlOOztBSzlIQTs7NEJBQUE7QUFJQTs7RUFFRTtBTGdJRjtBSzdISTs7Ozs7O0VBR0U7RUFDQTtFQUNBO0FMa0lOOztBSzdIQTtFQUNFO0VBQ0E7QUxnSUY7QU0zTEU7RUR5REY7SUFLSTtFTGlJRjtBQUNGOztBSzlIQTs7RUFFRTtFQUNBO0FMaUlGOztBSzlIQTtFQUNFO0FMaUlGOztBSzlIQTtFQUNFO0FMaUlGOztBSzdIRTtFQUNFO0FMZ0lKOztBSzVIQTs7RUFFRTtBTCtIRjs7QUs1SEE7O3VDQUFBO0FBSUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBTDhIRjtBTWpPRTtFRCtGRjtJQU9JO0VMK0hGO0FBQ0Y7O0FLNUhBOzt1Q0FBQTtBQUlBOzs7O0VBSUUsK0JSN1JXO0FHMlpiOztBSzNIQTs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFpQkU7RUFDQTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBQ0EsY1RsU1M7RVNtU1Q7RUFDQTtFQUNBLHlCVDlTTTtFUytTTjtFQUNBO0VBQ0Esc0RBQ0U7QUw0SEo7O0FLeEhBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBTDJIRjs7QUt4SEE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBTDJIRjs7QUt4SEE7O0VBRUU7RUFDQTtBTDJIRjs7QUt4SEE7RUFDRTtBTDJIRjs7QUt4SEE7RUFDRTtFQUNBO0FMMkhGOztBS3hIQTs7Ozs7RVBqVVU7RUFDQTtFT3NVUjtBTDRIRjtBTXhURTtFRHNMRjs7Ozs7SVByVVk7SUFDQTtFRStjVjtBQUNGOztBS25JQTs7Ozs7Ozs7RUFRRTtBTHNJRjs7QUtuSUE7O0VBRUU7QUxzSUY7O0FLbklBOzt1Q0FBQTtBQUlBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLHlCVG5YUztFU29YVDtFQUNBO0VBQ0EsMENSdllXO0FHNGdCYjs7QUtsSUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsMENSaFpXO0VDNkJIO0VPcVhSO0FMcUlGOztBS2xJQTsrQ0FBQTtBQUdBOztFQUVFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBTG9JRjtBS25JRTs7RUFDRSx5QlRsWk87RVNtWlA7RUFDQTtBTHNJSjtBS25JRTs7RUFDRTtFQUNBO0VBQ0E7QUxzSUo7QUtwSUk7O0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQSxtQlRqYUs7QUl3aUJYO0FLbklFOztFQUNFLGNUdGFPO0VTdWFQO0VBQ0E7RUFDQTtBTHNJSjs7QUtsSUE7RUFDRTtBTHFJRjs7QUtsSUE7RUFDRTtBTHFJRjs7QUtsSUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUxxSUY7O0FLbklBO0VBQ0U7RUFDQTtFQUNBLG1CVHhjTTtFU3ljTjtFQUNBO0FMc0lGOztBS3RIQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FMeUhGOztBT3ptQkE7QUFFQTsrRUFBQTtBQUdBOzs7OztFQUFBO0FBT0E7Ozs7Ozs7Ozs7OztFQVlFO0FQeW1CRjs7QU90bUJBOzs7R0FBQTtBQUtBOzs7O0VBSUU7RUFFQTtFQUNBO0VBRUE7QVBzbUJGOztBT25tQkE7OztHQUFBO0FBS0E7RUFDRTtFQUNBO0FQcW1CRjs7QU9sbUJBOzs7R0FBQTtBQUtBOztFQUVFO0FQb21CRjs7QU9qbUJBO2dGQUFBO0FBR0E7O0dBQUE7QUFJQTtFQUNFO0FQa21CRjs7QU8vbEJBOztHQUFBO0FBSUE7O0VBRUU7QVBpbUJGOztBTzlsQkE7O0dBQUE7QUFJQTtFQUNFO0FQZ21CRjs7QU83bEJBOztHQUFBO0FBSUE7RUFDRSxtQlh2RVM7RVd3RVQsY1gxRk07QUl5ckJSOztBTzVsQkE7O0dBQUE7QUFJQTtFQUNFO0FQOGxCRjs7QU8zbEJBOztHQUFBO0FBSUE7O0VBRUU7RUFDQTtFQUNBO0VBQ0E7QVA2bEJGOztBTzFsQkE7RUFDRTtBUDZsQkY7O0FPMWxCQTtFQUNFO0FQNmxCRjs7QU8xbEJBO2dGQUFBO0FBR0E7O0dBQUE7QUFJQTtFQUNFO0FQMmxCRjs7QU94bEJBO2dGQUFBO0FBR0E7OztHQUFBO0FBS0E7Ozs7O0dBQUE7QUFPQTs7Ozs7RUFLRTtFQUVBO0VBQ0E7RUFFQTtFQUNBO0VBRUE7QVBxbEJGOztBT2xsQkE7O0dBQUE7QUFJQTtFQUNFO0FQb2xCRjs7QU9qbEJBOzs7OztHQUFBO0FBT0E7O0VBRUU7QVBtbEJGOztBT2hsQkE7Ozs7OztHQUFBO0FBUUE7Ozs7RUFJRTtFQUNBO0VBRUE7QVBpbEJGOztBTzlrQkE7O0dBQUE7QUFJQTs7RUFFRTtBUGdsQkY7O0FPN2tCQTs7R0FBQTtBQUlBOztFQUVFO0VBQ0E7QVAra0JGOztBTzVrQkE7Ozs7OztHQUFBO0FBUUE7O0VBRUU7RUFFQTtFQUNBO0VBRUE7QVA0a0JGOztBT3prQkE7Ozs7R0FBQTtBQU1BOztFQUVFO0FQMmtCRjs7QU94a0JBOzs7O0dBQUE7QUFNQTs7RUFFRTtBUDBrQkY7O0FPdmtCQTs7O0dBQUE7QUFJQTtFQUNFO0VBQ0E7QVAwa0JGOztBT3ZrQkE7O0dBQUE7QUFJQTtFQUNFO0VBQ0E7RUFDQTtBUHlrQkY7O0FPdGtCQTs7O0dBQUE7QUFLQTtFQUNFO0VBRUE7RUFDQTtFQUVBO0FQc2tCRjs7QU9ua0JBOzs7R0FBQTtBQUtBO0VBQ0U7QVBxa0JGOztBT2xrQkE7QUFFQTtFQUNFO0VBQ0E7QVBva0JGOztBUTkzQkE7O2NBQUE7QUFJQTs7O0VBR0U7RUFDQTtFQUNBO0VBQ0E7QVJnNEJGOztBUTczQkE7QUFDQTs7O0VBR0U7QVJnNEJGOztBUTczQkE7RUFDRTtBUmc0QkY7O0FTcjVCQTtFQUNJO0FUdzVCSjs7QVNwNUJBO0VBQ0k7RUFDQTtBVHU1Qko7O0FTcDVCQTtFQUNJO0FUdTVCSjs7QVVsNkJBO0VBQ0k7QVZxNkJKO0FVcDZCSTtFQUNFO0VBQ0E7QVZzNkJOOztBVWg2Qkk7RUFDRTtBVm02Qk47QU05dkJFO0VJdEtFO0lBR0k7RVZxNkJOO0FBQ0Y7QU1ud0JFO0VJL0pFO0lBRUk7RVZvNkJOO0FBQ0YsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Nvb2tpbmdfYWR2ZW50dXJlLy4vc3JjL3Njc3MvMC1zZXR0aW5ncy9fY29sb3JzLnNjc3MiLCJ3ZWJwYWNrOi8vY29va2luZ19hZHZlbnR1cmUvLi9zcmMvc2Nzcy8wLXNldHRpbmdzL190eXBvZ3JhcGh5LnNjc3MiLCJ3ZWJwYWNrOi8vY29va2luZ19hZHZlbnR1cmUvLi9zcmMvc2Nzcy8xLXRvb2xzL19taXhpbnMuc2NzcyIsIndlYnBhY2s6Ly9jb29raW5nX2FkdmVudHVyZS8uL3NyYy9zY3NzLzQtbGF5b3V0cy9fbWV0YS5zY3NzIiwid2VicGFjazovL2Nvb2tpbmdfYWR2ZW50dXJlLy4vc3JjL3Njc3MvbWFpbi5zY3NzIiwid2VicGFjazovL2Nvb2tpbmdfYWR2ZW50dXJlLy4vc3JjL3Njc3MvNC1sYXlvdXRzL19wYWdpbmF0aW9uLnNjc3MiLCJ3ZWJwYWNrOi8vY29va2luZ19hZHZlbnR1cmUvLi9zcmMvc2Nzcy8yLWdlbmVyaWMvX2J1dHRvbnMuc2NzcyIsIndlYnBhY2s6Ly9jb29raW5nX2FkdmVudHVyZS8uL3NyYy9zY3NzLzItZ2VuZXJpYy9fY29tbW9uLWNsYXNzZXMuc2NzcyIsIndlYnBhY2s6Ly9jb29raW5nX2FkdmVudHVyZS8uL3NyYy9zY3NzLzAtc2V0dGluZ3MvX3ZhcmlhYmxlcy5zY3NzIiwid2VicGFjazovL2Nvb2tpbmdfYWR2ZW50dXJlLy4vc3JjL3Njc3MvMi1nZW5lcmljL19lbGVtZW50cy5zY3NzIiwid2VicGFjazovL2Nvb2tpbmdfYWR2ZW50dXJlLy4vbm9kZV9tb2R1bGVzL3Nhc3MtbXEvX21xLnNjc3MiLCJ3ZWJwYWNrOi8vY29va2luZ19hZHZlbnR1cmUvLi9zcmMvc2Nzcy8yLWdlbmVyaWMvX25vcm1hbGl6ZS5zY3NzIiwid2VicGFjazovL2Nvb2tpbmdfYWR2ZW50dXJlLy4vc3JjL3Njc3MvMi1nZW5lcmljL193cC1jc3Muc2NzcyIsIndlYnBhY2s6Ly9jb29raW5nX2FkdmVudHVyZS8uL3NyYy9zY3NzLzItZ2VuZXJpYy9fbWFpbi1pbWcuc2NzcyIsIndlYnBhY2s6Ly9jb29raW5nX2FkdmVudHVyZS8uL3NyYy9zY3NzLzItZ2VuZXJpYy9fc2VhcmNoLXJlc3VsdHMuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0Q29sb3JzIFZhcmlhYmxlc1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0Q29sb3JzIFZhcmlhYmxlc1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4kYmxhY2s6ICMwMDAwMDA7XHJcbiRibGFjay05MDA6ICMzZDNkM2Q7XHJcbiRibGFjay04NjA6ICM1OTU4NTg7XHJcbiRibGFjay04NTA6ICMzMjMyMzI7XHJcbiRibGFjay04MDA6ICM0MTQwNDI7XHJcbiRibGFjay02MDA6ICMzZDNlNDA7XHJcbiRibGFjay03MDA6ICM1OTU5NTk7XHJcbiRibGFjay0xMDA6ICMyODI4Mjg7XHJcbiRibGFjay01MDogIzVkNWQ1ZDtcclxuXHJcbiR3aGl0ZTogI2ZmZmZmZjtcclxuXHJcbiRkYXJrLWdyYXktMjAwOiAjMzMzO1xyXG4kZGFyay1ncmF5LTEwMDogIzQyNDI0MjtcclxuXHJcbiRncmF5LTEwMDogI2VmZjNmNjtcclxuJGdyYXktMTUwOiAjZWVlZWVlO1xyXG4kZ3JheS0xNjA6ICNlMmVhZWU7XHJcbiRncmF5LTIwMDogI2NjY2NjYztcclxuJGdyYXktMzAwOiAjNTU1NTU1O1xyXG5cclxuJGJsdWUtOTAwOiAjMzM0NGQ5O1xyXG4kYmx1ZS04MDA6ICMzMjJlYmI7XHJcbiRibHVlLTUwMDogIzM1NTE4MDtcclxuJGJsdWUtMzAwOiAjNjI1OGQ1O1xyXG4kYmx1ZS0yMDA6ICMwNjczYTk7XHJcbiRibHVlLTEwMDogIzAxOTJjYztcclxuJGJsdWUtODA6ICMwMTgzYzY7XHJcbiRibHVlLTQwOiAjMjc5MWRiO1xyXG4kYmx1ZS01MDogIzM5YTdlMjtcclxuJGJsdWUtNDA6ICMzOGFmZmQ7XHJcbiRibHVlLTIwOiAjZTRmM2ZkO1xyXG5cclxuJHB1cnBsZS04MDA6ICM0MDQ2ZmY7XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0T3BhY2l0eVxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4kb3BhY2l0eS1ibGFjay0wNzU6IHJnYmEoMCwgMCwgMCwgMC4wNzUpO1xyXG4kb3BhY2l0eS1ibGFjay0wMTU6IHJnYmEoMCwgMCwgMCwgMC4xNSk7XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0R3JhZGllbnRcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuJGhlYWRlci1ncmFkaWVudDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgJGJsYWNrLTkwMCAwJSwgJGJsYWNrLTEwMCAxMDAlKTtcclxuJGxpbmstaG92ZXItZ3JhZGllbnQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICRibHVlLTEwMCAwJSwgJGJsdWUtMjAwIDEwMCUpO1xyXG5cclxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHRcdEVsZW1lbnQgQ29sb3JzXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbi8vIDxib2R5PlxyXG4kY29sb3JfX2JvZHktdGV4dDogJGJsYWNrLTgwMDtcclxuJGNvbG9yX19iYWNrZ3JvdW5kLWJvZHk6ICR3aGl0ZTtcclxuXHJcbi8vIDxhPlxyXG4kY29sb3JfX2xpbms6ICRibHVlLTEwMDtcclxuJGNvbG9yX19saW5rLWhvdmVyOiAkYmx1ZS01MDA7XHJcblxyXG4kY29sb3JfX2JhY2tncm91bmQtYnV0dG9uOiAkZ3JheS0xMDA7XHJcbiRjb2xvcl9fYmFja2dyb3VuZC1idXR0b24taG92ZXI6ICRncmF5LTEwMDtcclxuJGNvbG9yX19ib3JkZXItYnV0dG9uOiAkZGFyay1ncmF5LTIwMDtcclxuJGNvbG9yX19ib3JkZXItYnV0dG9uLWhvdmVyOiAkYmxhY2s7XHJcblxyXG4kY29sb3JfX2JvcmRlci1pbnB1dDogJGdyYXktMTAwO1xyXG4kY29sb3JfX3RleHQtaW5wdXQ6ICRkYXJrLWdyYXktMjAwO1xyXG4kY29sb3JfX3RleHQtaW5wdXQtZm9jdXM6ICRibGFjaztcclxuXHJcbi8vIDxwcmU+LCA8Y29kZT5cclxuJGNvbG9yX19iYWNrZ3JvdW5kLXByZTogJGdyYXktMTAwO1xyXG5cclxuLy8gPGhyPlxyXG4kY29sb3JfX2JhY2tncm91bmQtaHI6ICRncmF5LTE1MDtcclxuJGNvbG9yX19iYWNrZ3JvdW5kLXRhYmxlOiAkYmx1ZS0yMDtcclxuXHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0XHRCb3JkZXIgQ29sb3JzXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbiRjb2xvcl9fYm9yZGVyLWxpZ2h0OiAkZ3JheS0xMDA7XHJcbiRjb2xvcl9fYm9yZGVyLWZpZWxkc2V0OiAkZ3JheS0yMDA7XHJcbiRjb2xvcl9fYm9yZGVyLXRhYmxlOiAkZ3JheS0yMDA7XHJcbiRjb2xvcl9fYm9yZGVyLWhlYWRlcjogJGdyYXktMzAwO1xyXG4iLCIvKi0tLS0tLS0tLS0tLS0tLS1cclxuXHRcdEZvbnRcclxuLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbi8vIEdsb2JhbCB0aGVtZSBmb250LlxyXG4kZm9udF9fbWFpbjogXCJMYXRvXCIsIHNhbnMtc2VyaWY7XHJcblxyXG4vLyBHbG9iYWwgY29kZSBmb250XHJcbiRmb250X19jb2RlOiBcIkxhdG9cIiwgc2Fucy1zZXJpZiwgbW9ub3NwYWNlO1xyXG5cclxuLy8gRmFsbGJhY2sgZm9udCB3aGVuIGZvbnQgaXMgbm90IGxvYWRlZCB2aWEgV2ViRm9udHMgSlMuXHJcbiRmb250X19mYWxsYmFjazogc2Fucy1zZXJpZjtcclxuXHJcbi8vIEJhc2UgbGluZSBoZWlnaHQuXHJcbiRmb250X19iYXNlLWxpbmUtaGVpZ2h0OiAzMHB4O1xyXG5cclxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHRcdEJvZHkgVGV4dCBGb250IFNpemVzXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbiRib2R5LXRleHQ6IChcclxuICBcImgxXCI6IChcclxuICAgIFwic21hbGxcIjogKFxyXG4gICAgICBmb250LXNpemU6IDMxLjVweCxcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuMjcsXHJcbiAgICApLFxyXG4gICksXHJcbiAgXCJoMlwiOiAoXHJcbiAgICBcInNtYWxsXCI6IChcclxuICAgICAgZm9udC1zaXplOiAzMS41cHgsXHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI3LFxyXG4gICAgKSxcclxuICApLFxyXG4gIFwiaDNcIjogKFxyXG4gICAgXCJzbWFsbFwiOiAoXHJcbiAgICAgIGZvbnQtc2l6ZTogMjQuNXB4LFxyXG4gICAgICBsaW5lLWhlaWdodDogMS42NCxcclxuICAgICksXHJcbiAgKSxcclxuICBcImg0XCI6IChcclxuICAgIFwic21hbGxcIjogKFxyXG4gICAgICBmb250LXNpemU6IDE3LjVweCxcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuMTQyLFxyXG4gICAgKSxcclxuICApLFxyXG4gIFwiaDVcIjogKFxyXG4gICAgXCJzbWFsbFwiOiAoXHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweCxcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuNDMsXHJcbiAgICApLFxyXG4gICksXHJcbiAgXCJoNlwiOiAoXHJcbiAgICBcInNtYWxsXCI6IChcclxuICAgICAgZm9udC1zaXplOiAxMS45cHgsXHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjY4MSxcclxuICAgICksXHJcbiAgKSxcclxuICBcImJvZHlcIjogKFxyXG4gICAgXCJzbWFsbFwiOiAoXHJcbiAgICAgIGZvbnQtc2l6ZTogMTZweCxcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuNDMsXHJcbiAgICApLFxyXG4gICAgXCJsYXJnZVwiOiAoXHJcbiAgICAgIGZvbnQtc2l6ZTogMThweCxcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuNDMsXHJcbiAgICApLFxyXG4gICksXHJcbiAgXCJsXCI6IChcclxuICAgIFwic21hbGxcIjogKFxyXG4gICAgICBmb250LXNpemU6IDE4cHgsXHJcbiAgICApLFxyXG4gICksXHJcbiAgXCJtXCI6IChcclxuICAgIFwic21hbGxcIjogKFxyXG4gICAgICBmb250LXNpemU6IDE2cHgsXHJcbiAgICApLFxyXG4gICksXHJcbiAgXCJzXCI6IChcclxuICAgIFwic21hbGxcIjogKFxyXG4gICAgICBmb250LXNpemU6IDEycHgsXHJcbiAgICApLFxyXG4gICksXHJcbiAgXCJ4c1wiOiAoXHJcbiAgICBcInNtYWxsXCI6IChcclxuICAgICAgZm9udC1zaXplOiAxMXB4LFxyXG4gICAgKSxcclxuICApLFxyXG4pO1xyXG4iLCIvLy8gQ2VudGVyIGJsb2NrXHJcbkBtaXhpbiBjZW50ZXItYmxvY2sge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxufVxyXG5cclxuQG1peGluIGZvbnQtc21vb3RoaW5nKCkge1xyXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkOyAgIC8vIGZvciBtYWNPU1xyXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7ICAgIC8vIGZvciBtYWNPU1xyXG59XHJcblxyXG5AbWl4aW4gZm9udC1mYW1pbHkoJGZvbnQ6ICRmb250X19tYWluKSB7XHJcbiAgZm9udC1mYW1pbHk6ICRmb250X19tYWluO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIGZvbnQgc2NhbGUgd2l0aCBtZWRpYSBxdWVyeSBhcyBwZXIgY29uZmlndXJhdGlvbiBvbiAkYm9keS10ZXh0XHJcbiAqIEV4OiBAaW5jbHVkZSBib2R5LXRleHQoIGgxICk7XHJcbiAqIFRoaXMgd2lsbCBhZGQgZm9udC1zaXplIGFuZCBsaW5lLWhlaWdodCB3aXRoIGRpZmZlcmVudCBicmVha3BvaW50cy5cclxuICovXHJcbkBtaXhpbiBib2R5LXRleHQoJGxldmVsOiBub3JtYWwsICRib2R5LXRleHQ6ICRib2R5LXRleHQsICRkZXZpY2Utc2l6ZTogZmFsc2UpIHtcclxuICBAaWYgdHlwZS1vZigkYm9keS10ZXh0KSAhPSBcIm1hcFwiIHtcclxuICAgIEBlcnJvciBcImAjeyRib2R5LXRleHR9YCBpcyBub3QgYSB2YWxpZCB2YWx1ZSBmb3IgJHZhbHVlcy4gSXQgbXVzdCBiZSBhIGxpc3QuXCI7XHJcbiAgfVxyXG5cclxuICAkc2l6ZTogbWFwX2dldCgkYm9keS10ZXh0LCAkbGV2ZWwpO1xyXG5cclxuICBAaWYgdHlwZS1vZigkc2l6ZSkgPT0gXCJtYXBcIiB7XHJcbiAgICBAaWYgJGRldmljZS1zaXplID09IGZhbHNlIHtcclxuICAgICAgQGVhY2ggJGRldmljZSwgJHZhbHVlcyBpbiAkc2l6ZSB7XHJcbiAgICAgICAgQGlmICRkZXZpY2UgIT0gXCJzbWFsbFwiIHtcclxuICAgICAgICAgIEBpbmNsdWRlIG1xKCRmcm9tOiAkZGV2aWNlKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogbWFwX2dldCgkdmFsdWVzLCBcImZvbnQtc2l6ZVwiKTtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IG1hcF9nZXQoJHZhbHVlcywgXCJsaW5lLWhlaWdodFwiKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IEBlbHNlIHtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogbWFwX2dldCgkdmFsdWVzLCBcImZvbnQtc2l6ZVwiKTtcclxuICAgICAgICAgIGxpbmUtaGVpZ2h0OiBtYXBfZ2V0KCR2YWx1ZXMsIFwibGluZS1oZWlnaHRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9IEBlbHNlIHtcclxuICAgICAgJGRldmljZV92YWx1ZXM6IG1hcF9nZXQoJHNpemUsICRkZXZpY2Utc2l6ZSk7XHJcblxyXG4gICAgICBmb250LXNpemU6IG1hcF9nZXQoJGRldmljZV92YWx1ZXMsIFwiZm9udC1zaXplXCIpO1xyXG4gICAgICBsaW5lLWhlaWdodDogbWFwX2dldCgkZGV2aWNlX3ZhbHVlcywgXCJsaW5lLWhlaWdodFwiKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiByYW5kb20tYmdyKCl7XHJcbiAgYmFja2dyb3VuZDogcmdiYShyYW5kb20oMjU1KSwgcmFuZG9tKDI1NSksIHJhbmRvbSgyNTUpLCAwLjMpO1xyXG59IiwiLyogRW50cnkgbWV0YSAqL1xyXG4udXBkYXRlZDpub3QoLnB1Ymxpc2hlZCkge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRDb2xvcnMgVmFyaWFibGVzXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdENvbG9ycyBWYXJpYWJsZXNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0T3BhY2l0eVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRHcmFkaWVudFxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRFbGVtZW50IENvbG9yc1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRCb3JkZXIgQ29sb3JzXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS1cblx0XHRGb250XG4tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRCb2R5IFRleHQgRm9udCBTaXplc1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBBZGQgZm9udCBzY2FsZSB3aXRoIG1lZGlhIHF1ZXJ5IGFzIHBlciBjb25maWd1cmF0aW9uIG9uICRib2R5LXRleHRcbiAqIEV4OiBAaW5jbHVkZSBib2R5LXRleHQoIGgxICk7XG4gKiBUaGlzIHdpbGwgYWRkIGZvbnQtc2l6ZSBhbmQgbGluZS1oZWlnaHQgd2l0aCBkaWZmZXJlbnQgYnJlYWtwb2ludHMuXG4gKi9cbi8qIEVudHJ5IG1ldGEgKi9cbi51cGRhdGVkOm5vdCgucHVibGlzaGVkKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIFBhZ2luYXRpb24gKi9cbi5wYWdlLW51bWJlcnMuY3VycmVudCA+IHNwYW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzZlM2MwO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmNhdGVnb3J5LWJ0bjpudGgtY2hpbGQoMCkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDE5NiwgMjAwLCA2LCAwLjMpO1xufVxuLmNhdGVnb3J5LWJ0bjpudGgtY2hpbGQoMSkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDIzNSwgMjAyLCAxOSwgMC4zKTtcbn1cbi5jYXRlZ29yeS1idG46bnRoLWNoaWxkKDIpIHtcbiAgYmFja2dyb3VuZDogcmdiYSgxOCwgOTIsIDEzNSwgMC4zKTtcbn1cbi5jYXRlZ29yeS1idG46bnRoLWNoaWxkKDMpIHtcbiAgYmFja2dyb3VuZDogcmdiYSg3OSwgMTcyLCAxNDAsIDAuMyk7XG59XG4uY2F0ZWdvcnktYnRuOm50aC1jaGlsZCg0KSB7XG4gIGJhY2tncm91bmQ6IHJnYmEoNjksIDE1NiwgMywgMC4zKTtcbn1cblxuLmNhdGVnb3J5LWxpbmsge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0QWNjZXNzaWJsaXR5XG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogVGV4dCBtZWFudCBvbmx5IGZvciBzY3JlZW4gcmVhZGVycy4gKi9cbi5zY3JlZW4tcmVhZGVyLXRleHQge1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtcbiAgY2xpcC1wYXRoOiBpbnNldCg1MCUpO1xuICBoZWlnaHQ6IDFweDtcbiAgbGVmdDogLTk5OWVtO1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgd29yZC13cmFwOiBub3JtYWw7XG59XG4uc2NyZWVuLXJlYWRlci10ZXh0OmZvY3VzIHtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3gtc2hhZG93OiAwIDAgMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuNik7XG4gIGNsaXA6IGF1dG87XG4gIGNsaXAtcGF0aDogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBoZWlnaHQ6IGF1dG87XG4gIGxlZnQ6IDVweDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgcGFkZGluZzogMTVweCAyM3B4IDE0cHg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdG9wOiA1cHg7XG4gIHdpZHRoOiBhdXRvO1xuICB6LWluZGV4OiAxMDAwMDA7IC8qIEFib3ZlIFdQIHRvb2xiYXIuICovXG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0QWxpZ25tZW50c1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi5sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5yaWdodCB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLnRleHQtbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4udGV4dC1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLnRleHQtY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnRleHQtanVzdGlmeSB7XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0T3RoZXJzXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLmhpZGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaGlkZGVuIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4udmlzaWJsZSB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG59XG5cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xufVxuXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSAqL1xuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIC8qIEluaGVyaXQgYm94LXNpemluZyB0byBtYWtlIGl0IGVhc2llciB0byBjaGFuZ2UgdGhlIHByb3BlcnR5IGZvciBjb21wb25lbnRzIHRoYXQgbGV2ZXJhZ2Ugb3RoZXIgYmVoYXZpb3I7IHNlZSBodHRwOi8vY3NzLXRyaWNrcy5jb20vaW5oZXJpdGluZy1ib3gtc2l6aW5nLXByb2JhYmx5LXNsaWdodGx5LWJldHRlci1iZXN0LXByYWN0aWNlLyAqL1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG59XG5cbi8qIHN0eWxlbGludC1lbmFibGUgKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMS40MztcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgY29sb3I6ICM0MTQwNDI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNjRlbSkge1xuICBib2R5IHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDM7XG4gIH1cbn1cbmJvZHkubWNlLWNvbnRlbnQtYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBtYXJnaW46IDE1cHg7XG59XG5cbmJsb2NrcXVvdGUsXG5xLFxuYmxvY2txdW90ZS53cC1ibG9jay1xdW90ZSB7XG4gIHF1b3RlczogXCJcIiBcIlwiO1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICNlZWVlZWU7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgbWFyZ2luOiAwIDAgMzBweCAzMHB4O1xuICBwYWRkaW5nLWxlZnQ6IDE2cHg7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAvKiBzdHlsZWxpbnQtZGlzYWJsZSAqL1xuICAvKiBzdHlsZWxpbnQtZW5hYmxlICovXG59XG5ibG9ja3F1b3RlIHAsXG5xIHAsXG5ibG9ja3F1b3RlLndwLWJsb2NrLXF1b3RlIHAge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbmJsb2NrcXVvdGUgY2l0ZSxcbmJsb2NrcXVvdGUgLndwLWJsb2NrLXF1b3RlX19jaXRhdGlvbixcbnEgY2l0ZSxcbnEgLndwLWJsb2NrLXF1b3RlX19jaXRhdGlvbixcbmJsb2NrcXVvdGUud3AtYmxvY2stcXVvdGUgY2l0ZSxcbmJsb2NrcXVvdGUud3AtYmxvY2stcXVvdGUgLndwLWJsb2NrLXF1b3RlX19jaXRhdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5ibG9ja3F1b3RlIHA6bGFzdC1vZi10eXBlLFxucSBwOmxhc3Qtb2YtdHlwZSxcbmJsb2NrcXVvdGUud3AtYmxvY2stcXVvdGUgcDpsYXN0LW9mLXR5cGUge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuYmxvY2txdW90ZS5pcy1sYXJnZSwgYmxvY2txdW90ZS5pcy1zdHlsZS1sYXJnZSxcbnEuaXMtbGFyZ2UsXG5xLmlzLXN0eWxlLWxhcmdlLFxuYmxvY2txdW90ZS53cC1ibG9jay1xdW90ZS5pcy1sYXJnZSxcbmJsb2NrcXVvdGUud3AtYmxvY2stcXVvdGUuaXMtc3R5bGUtbGFyZ2Uge1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLyogUHVsbCBRdW90ZVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4ud3AtYmxvY2stcHVsbHF1b3RlIHtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuLndwLWJsb2NrLXB1bGxxdW90ZSBibG9ja3F1b3RlIHtcbiAgYm9yZGVyLWxlZnQ6IDA7XG4gIGJvcmRlci10b3A6IDhweCBzb2xpZCAjZWVlZWVlO1xuICBib3JkZXItYm90dG9tOiA4cHggc29saWQgI2VlZWVlZTtcbiAgcGFkZGluZzogMTZweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1heC13aWR0aDogNTAlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi53cC1ibG9jay1wdWxscXVvdGUuYWxpZ25sZWZ0IGJsb2NrcXVvdGUsIC53cC1ibG9jay1wdWxscXVvdGUuYWxpZ25yaWdodCBibG9ja3F1b3RlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuLndwLWJsb2NrLXB1bGxxdW90ZSBpbWcge1xuICBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMTAwJTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLyogSW1hZ2UgU3VwcG9ydFxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4ud3AtYmxvY2staW1hZ2Uuc2l6ZS1tZWRpdW0gaW1nLCAud3AtYmxvY2staW1hZ2Uuc2l6ZS10aHVtYm5haWwgaW1nLCAud3AtYmxvY2staW1hZ2UuaXMtcmVzaXplZCBpbWcge1xuICB3aWR0aDogYXV0bztcbn1cbi53cC1ibG9jay1pbWFnZSBmaWdjYXB0aW9uIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZzogMTBweCAwO1xufVxuXG5maWd1cmUge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbmEge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiAjMDE5MmNjO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IDAuM3M7XG59XG5hOmZvY3VzIHtcbiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbn1cbmE6aG92ZXIsXG5hIGE6YWN0aXZlIHtcbiAgY29sb3I6ICMzNTUxODA7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICBvdXRsaW5lOiAwO1xufVxuXG5zdWIsXG5zdXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNIRUFESU5HU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmgxIHtcbiAgZm9udC1zaXplOiAzMS41cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjI3O1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMzEuNXB4O1xuICBsaW5lLWhlaWdodDogMS4yNztcbn1cblxuaDMge1xuICBmb250LXNpemU6IDI0LjVweDtcbiAgbGluZS1oZWlnaHQ6IDEuNjQ7XG59XG5cbmg0IHtcbiAgZm9udC1zaXplOiAxNy41cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjE0Mjtcbn1cblxuaDUge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjQzO1xufVxuXG5oNiB7XG4gIGZvbnQtc2l6ZTogMTEuOXB4O1xuICBsaW5lLWhlaWdodDogMS42ODE7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIG1hcmdpbjogMTBweCAwO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVsZWdpYmlsaXR5O1xufVxuXG4vKiBCdXR0b25cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLndwLWJsb2NrLWJ1dHRvbiAud3AtYmxvY2stYnV0dG9uX19saW5rIHtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMThweDtcbiAgcGFkZGluZzogMjBweCAyNHB4O1xufVxuLndwLWJsb2NrLWJ1dHRvbiAud3AtYmxvY2stYnV0dG9uX19saW5rOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2NjY2NjYztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdExpc3RzXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xudWwsXG5vbCB7XG4gIG1hcmdpbjogMCAwIDE4cHggMDtcbn1cbnVsLm5vLWJ1bGxldCxcbnVsLm5vLWJ1bGxldCB1bCxcbnVsLm5vLWJ1bGxldCBvbCxcbm9sLm5vLWJ1bGxldCxcbm9sLm5vLWJ1bGxldCB1bCxcbm9sLm5vLWJ1bGxldCBvbCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxudWwge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDAgMCAxMHB4IDI1cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDhlbSkge1xuICB1bCB7XG4gICAgbWFyZ2luOiAwIDAgNXB4IDA7XG4gIH1cbn1cblxubGkgPiB1bCxcbmxpID4gb2wge1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBtYXJnaW4tbGVmdDogMThweDtcbn1cblxuZHQge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5kZCB7XG4gIG1hcmdpbjogMCAyNHB4IDI0cHg7XG59XG5cbnA6ZW1wdHkge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5saSA+IHVsLFxubGkgPiBvbCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI1RBQkxFXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xudGFibGUge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0OGVtKSB7XG4gIHRhYmxlIHtcbiAgICBtYXgtd2lkdGg6IDM1MHB4O1xuICB9XG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgRm9ybSBGaWVsZHNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbnB1dCxcbmJ1dHRvbixcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBzYW5zLXNlcmlmO1xufVxuXG5zZWxlY3QsXG50ZXh0YXJlYSxcbmlucHV0W3R5cGU9dGV4dF0sXG5pbnB1dFt0eXBlPXBhc3N3b3JkXSxcbmlucHV0W3R5cGU9ZGF0ZXRpbWVdLFxuaW5wdXRbdHlwZT1kYXRldGltZS1sb2NhbF0sXG5pbnB1dFt0eXBlPWRhdGVdLFxuaW5wdXRbdHlwZT1tb250aF0sXG5pbnB1dFt0eXBlPXRpbWVdLFxuaW5wdXRbdHlwZT13ZWVrXSxcbmlucHV0W3R5cGU9bnVtYmVyXSxcbmlucHV0W3R5cGU9ZW1haWxdLFxuaW5wdXRbdHlwZT11cmxdLFxuaW5wdXRbdHlwZT1zZWFyY2hdLFxuaW5wdXRbdHlwZT10ZWxdLFxuaW5wdXRbdHlwZT1jb2xvcl0sXG4udW5lZGl0YWJsZS1pbnB1dCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAyMHB4O1xuICB3aWR0aDogMjA2cHg7XG4gIHBhZGRpbmc6IDE0cHggNnB4OyAvKiBhZGp1c3RpbmcgYm9yZGVyLWJveCBkaWZmZXJlbmNlIG9uIGxpdmUgc2l0ZSAqL1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjQzO1xuICBjb2xvcjogIzU1NTU1NTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjY2NjO1xuICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7XG4gIHRyYW5zaXRpb246IGJvcmRlciBsaW5lYXIgMC4ycywgYm94LXNoYWRvdyBsaW5lYXIgMC4ycztcbn1cblxudGV4dGFyZWEge1xuICBoZWlnaHQ6IGF1dG87XG4gIHBhZGRpbmc6IDRweCA2cHg7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgb3V0bGluZTogbm9uZTtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbnNlbGVjdCB7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIHRyYW5zaXRpb246IG5vbmU7XG4gIHdpZHRoOiAyMjBweDtcbiAgcGFkZGluZzogMCA2cHg7XG59XG5cbnNlbGVjdCxcbmlucHV0W3R5cGU9ZmlsZV0ge1xuICBoZWlnaHQ6IDMwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyLjE1O1xufVxuXG5idXR0b24ge1xuICBtYXJnaW46IDA7XG59XG5cbmxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxubGFiZWwsXG5pbnB1dCxcbmJ1dHRvbixcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMS40MztcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA2NGVtKSB7XG4gIGxhYmVsLFxuICBpbnB1dCxcbiAgYnV0dG9uLFxuICBzZWxlY3QsXG4gIHRleHRhcmVhIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDM7XG4gIH1cbn1cblxubGFiZWwsXG5zZWxlY3QsXG5idXR0b24sXG5pbnB1dFt0eXBlPWJ1dHRvbl0sXG5pbnB1dFt0eXBlPXJlc2V0XSxcbmlucHV0W3R5cGU9c3VibWl0XSxcbmlucHV0W3R5cGU9cmFkaW9dLFxuaW5wdXRbdHlwZT1jaGVja2JveF0ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjT1RIRVJcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5wcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogOS41cHg7XG4gIG1hcmdpbjogMCAwIDEwcHg7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgbGluZS1oZWlnaHQ6IDEuNTQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMmVhZWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBzYW5zLXNlcmlmLCBtb25vc3BhY2U7XG59XG5cbmNvZGUge1xuICBwYWRkaW5nOiAycHggNHB4O1xuICBjb2xvcjogI2QxNDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmOTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlODtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBzYW5zLXNlcmlmLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xufVxuXG4vKiBTZXBhcmF0b3Jcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLndwLWJsb2NrLXNlcGFyYXRvcixcbmhyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMjBweCAwO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWVlZWVlO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZmZmZjtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG59XG4ud3AtYmxvY2stc2VwYXJhdG9yOm5vdCguaXMtc3R5bGUtZG90cyksXG5ocjpub3QoLmlzLXN0eWxlLWRvdHMpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VmZjNmNjtcbiAgYm9yZGVyOiAwO1xuICBoZWlnaHQ6IDFweDtcbn1cbi53cC1ibG9jay1zZXBhcmF0b3I6bm90KC5pcy1zdHlsZS13aWRlKTpub3QoLmlzLXN0eWxlLWRvdHMpLFxuaHI6bm90KC5pcy1zdHlsZS13aWRlKTpub3QoLmlzLXN0eWxlLWRvdHMpIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNHB4O1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cbi53cC1ibG9jay1zZXBhcmF0b3I6bm90KC5pcy1zdHlsZS13aWRlKTpub3QoLmlzLXN0eWxlLWRvdHMpOjpiZWZvcmUsXG5ocjpub3QoLmlzLXN0eWxlLXdpZGUpOm5vdCguaXMtc3R5bGUtZG90cyk6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDRweDtcbiAgd2lkdGg6IDQwcHg7XG4gIGJhY2tncm91bmQ6ICNlZmYzZjY7XG59XG4ud3AtYmxvY2stc2VwYXJhdG9yLmlzLXN0eWxlLWRvdHM6OmJlZm9yZSxcbmhyLmlzLXN0eWxlLWRvdHM6OmJlZm9yZSB7XG4gIGNvbG9yOiAjZWZmM2Y2O1xuICBmb250LXNpemU6IDE4cHg7XG4gIGxldHRlci1zcGFjaW5nOiAxMnB4O1xuICBwYWRkaW5nLWxlZnQ6IDEycHg7XG59XG5cbmEge1xuICBjb2xvcjogIzZjNzU3ZDtcbn1cblxuLmJveCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmlucHV0IHtcbiAgcGFkZGluZzogMTBweDtcbiAgd2lkdGg6IDg1cHg7XG4gIGhlaWdodDogNDBweDtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiAycHggc29saWQgI2ZmZmZmZjtcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgb3V0bGluZTogbm9uZTtcbiAgdHJhbnNpdGlvbjogMC41cztcbn1cblxuLmJveDpob3ZlciBpbnB1dCB7XG4gIGNvbG9yOiAjNDE0MDQyO1xuICB3aWR0aDogMjUwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIGJvcmRlcjogMnB4IHNvbGlkICM3NmUzYzA7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbmZvb3RlciB7XG4gIHBhZGRpbmctdG9wOiAzcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzZlM2MwO1xuICBjb2xvcjogYmxhY2s7XG4gIG1hcmdpbi10b3A6IDVyZW07XG59XG5cbi8qIG5vcm1hbGl6ZS5jc3MgdjguMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAgKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAgKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAgKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAgKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICAqL1xuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAgKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi8qKlxuICAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAgKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAgKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjY2NjY2NjO1xuICBjb2xvcjogIzAwMDAwMDtcbn1cblxuLyoqXG4gICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAgKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC04cHg7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTRweDtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAgKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogRm9ybXNcbiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAgKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gICovXG4vKipcbiAgKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAgKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAgKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovXG59XG5cbi8qKlxuICAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAgKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4gICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICAqL1xuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPWJ1dHRvbl0sXG5pbnB1dFt0eXBlPXJlc2V0XSxcbmlucHV0W3R5cGU9c3VibWl0XSB7XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovXG59XG5cbi8qKlxuICAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gICovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAgKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAgKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAgKlxuICAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAgKi9cbmlucHV0W3R5cGU9Y2hlY2tib3hdLFxuaW5wdXRbdHlwZT1yYWRpb10ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAgKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAgKi9cbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAgKi9cbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAgKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKipcbiAgKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2NjY2M7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDZweCAxMHB4IDEycHg7XG59XG5cbi8qKlxuICAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAgKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gICovXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAgKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi8qIE5vdGU6IFRoaXMgZmlsZSBpcyB1cGRhdGVkIGJ5IFNhZ2FyLCBUbyByZW1vdmUgZHVjcGxpY2F0aW9uIG9mIHN0eWxlcy4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4vKi0tLS0tLS0tLS0tXG5cdE1lZGlhXG4tLS0tLS0tLS0tLS0tKi9cbi5wYWdlLWNvbnRlbnQgLndwLXNtaWxleSxcbi5lbnRyeS1jb250ZW50IC53cC1zbWlsZXksXG4uY29tbWVudC1jb250ZW50IC53cC1zbWlsZXkge1xuICBib3JkZXI6IG5vbmU7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIG1hcmdpbi10b3A6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qIE1ha2Ugc3VyZSBlbWJlZHMgYW5kIGlmcmFtZXMgZml0IHRoZWlyIGNvbnRhaW5lcnMuICovXG5lbWJlZCxcbmlmcmFtZSxcbm9iamVjdCB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLnNpdGUtY29udGVudCB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxuLmZyb250LWltZyB7XG4gIG9wYWNpdHk6IDUwJTtcbn1cblxuLmZyb250LWltZzpob3ZlciB7XG4gIG9wYWNpdHk6IDEwMCU7XG4gIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogYmxhY2s7XG59XG5cbmE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5zZWFyY2gtY2FyZC1jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5zZWFyY2gtY2FyZC1jb250ZW50IHAge1xuICBtYXJnaW46IDEwcHggMjVweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5zZWFyY2gtY2FyZC1jb250YWluZXIgLnNlYXJjaC1jYXJkLWNvbnRlbnQge1xuICBtYXJnaW4tdG9wOiAxNnB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgLnNlYXJjaC1jYXJkLWNvbnRhaW5lciAuc2VhcmNoLWNhcmQtY29udGVudCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgLnNlYXJjaC1jYXJkLWNvbnRhaW5lciAuc2VhcmNoLWNhcmQtdGh1bWJuYWlsIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gIH1cbn0iLCIvKiBQYWdpbmF0aW9uICovXHJcbi5wYWdlLW51bWJlcnMuY3VycmVudCA+IHNwYW4ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM3NmUzYzA7XHJcbiAgY29sb3I6ICNmZmY7XHJcbn1cclxuIiwiLmNhdGVnb3J5LWJ0biB7XHJcbiAgJG51bS1jb2xvcnM6IDU7XHJcbiAgJGJhc2UtY29sb3I6ICNjZmJiYWQ7XHJcbiAgJHNwZWN0cnVtOiAzNjBkZWc7XHJcbiAgJG9mZnNldDogNTBkZWc7XHJcblxyXG4gIEBmb3IgJGkgZnJvbSAwIHRvICRudW0tY29sb3JzIHtcclxuICAgICY6bnRoLWNoaWxkKCN7JGl9KSB7XHJcbiAgICAgIEBpbmNsdWRlIHJhbmRvbS1iZ3IoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5jYXRlZ29yeS1saW5rIHtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHRcdEFjY2Vzc2libGl0eVxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLyogVGV4dCBtZWFudCBvbmx5IGZvciBzY3JlZW4gcmVhZGVycy4gKi9cclxuLnNjcmVlbi1yZWFkZXItdGV4dCB7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtcclxuICBjbGlwLXBhdGg6IGluc2V0KDUwJSk7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgbGVmdDogLTk5OWVtO1xyXG4gIG1hcmdpbjogLTFweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxcHg7XHJcbiAgd29yZC13cmFwOiBub3JtYWw7XHJcblxyXG4gICY6Zm9jdXMge1xyXG4gICAgYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuNik7XHJcbiAgICBjbGlwOiBhdXRvO1xyXG4gICAgY2xpcC1wYXRoOiBub25lO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDFlbTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIGxlZnQ6IDVweDtcclxuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XHJcbiAgICBwYWRkaW5nOiAxNXB4IDIzcHggMTRweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIHRvcDogNXB4O1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICB6LWluZGV4OiAxMDAwMDA7IC8qIEFib3ZlIFdQIHRvb2xiYXIuICovXHJcbiAgfVxyXG59XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0QWxpZ25tZW50c1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLmxlZnQge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG4ucmlnaHQge1xyXG4gIGZsb2F0OiByaWdodDtcclxufVxyXG5cclxuLnRleHQge1xyXG4gICYtbGVmdCB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIH1cclxuXHJcbiAgJi1yaWdodCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB9XHJcblxyXG4gICYtY2VudGVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICYtanVzdGlmeSB7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gIH1cclxufVxyXG5cclxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHRcdE90aGVyc1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLmhpZGUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5oaWRkZW4ge1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcclxufVxyXG5cclxuLnZpc2libGUge1xyXG4gIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbn1cclxuIiwiLy8gU2l0ZSB2YXJpYWJsZXMuXHJcblxyXG4vLyBEZWZhdWx0IEJvcmRlciBSYWRpdXNcclxuJGJvcmRlci1yYWRpdXM6IDNweDtcclxuXHJcbi8vIG1xIGJyZWFrcG9pbnRzLlxyXG4kbXEtYnJlYWtwb2ludHM6IChcclxuICBzbWFsbDogNjAwcHgsXHJcbiAgbWVkaXVtOiA3NjhweCxcclxuICBsYXJnZTogMTAyNHB4LFxyXG4gIHhsYXJnZTogMTI0MHB4LFxyXG4pICFkZWZhdWx0O1xyXG5cclxuJHNpdGVfd2lkdGg6IDExNDBweDtcclxuJHdpZGVfd2lkdGg6IDEyNDBweDtcclxuJHBhZGRpbmctbGVmdDogMTVweDtcclxuJHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcblxyXG4kbWFyZ2luLXRvcDogNjBweDtcclxuJG1hcmdpbi1ib3R0b206IDYwcHg7XHJcbiIsImh0bWwge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XHJcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xyXG59XHJcblxyXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSAqL1xyXG4qLFxyXG4qOmJlZm9yZSxcclxuKjphZnRlciB7XHJcbiAgLyogSW5oZXJpdCBib3gtc2l6aW5nIHRvIG1ha2UgaXQgZWFzaWVyIHRvIGNoYW5nZSB0aGUgcHJvcGVydHkgZm9yIGNvbXBvbmVudHMgdGhhdCBsZXZlcmFnZSBvdGhlciBiZWhhdmlvcjsgc2VlIGh0dHA6Ly9jc3MtdHJpY2tzLmNvbS9pbmhlcml0aW5nLWJveC1zaXppbmctcHJvYmFibHktc2xpZ2h0bHktYmV0dGVyLWJlc3QtcHJhY3RpY2UvICovXHJcbiAgYm94LXNpemluZzogaW5oZXJpdDtcclxuXHJcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xyXG59XHJcbi8qIHN0eWxlbGludC1lbmFibGUgKi9cclxuXHJcbmJvZHkge1xyXG4gIG1hcmdpbjogMDtcclxuXHJcbiAgQGluY2x1ZGUgZm9udC1mYW1pbHkoKTtcclxuICBAaW5jbHVkZSBib2R5LXRleHQoYm9keSk7XHJcblxyXG4gIGJhY2tncm91bmQ6ICRjb2xvcl9fYmFja2dyb3VuZC1ib2R5O1xyXG4gIGNvbG9yOiAkY29sb3JfX2JvZHktdGV4dDtcclxuXHJcbiAgLy8gV1AgRWRpdG9yXHJcbiAgJi5tY2UtY29udGVudC1ib2R5IHtcclxuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgbWFyZ2luOiAxNXB4O1xyXG4gIH1cclxufVxyXG5cclxuYmxvY2txdW90ZSxcclxucSxcclxuYmxvY2txdW90ZS53cC1ibG9jay1xdW90ZSB7XHJcbiAgcXVvdGVzOiBcIlwiIFwiXCI7XHJcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAkZ3JheS0xNTA7XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gIG1hcmdpbjogMCAwICRmb250X19iYXNlLWxpbmUtaGVpZ2h0ICRmb250X19iYXNlLWxpbmUtaGVpZ2h0O1xyXG4gIHBhZGRpbmctbGVmdDogMTZweDtcclxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxuICBwIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgfVxyXG5cclxuICAvKiBzdHlsZWxpbnQtZGlzYWJsZSAqL1xyXG4gIGNpdGUsXHJcbiAgLndwLWJsb2NrLXF1b3RlX19jaXRhdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICB9XHJcbiAgLyogc3R5bGVsaW50LWVuYWJsZSAqL1xyXG5cclxuICBwOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIH1cclxuXHJcbiAgJi5pcy1sYXJnZSxcclxuICAmLmlzLXN0eWxlLWxhcmdlIHtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gIH1cclxufVxyXG5cclxuLyogUHVsbCBRdW90ZVxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLndwLWJsb2NrLXB1bGxxdW90ZSB7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHJcbiAgYmxvY2txdW90ZSB7XHJcbiAgICBib3JkZXItbGVmdDogMDtcclxuICAgIGJvcmRlci10b3A6IDhweCBzb2xpZCAkZ3JheS0xNTA7XHJcbiAgICBib3JkZXItYm90dG9tOiA4cHggc29saWQgJGdyYXktMTUwO1xyXG4gICAgcGFkZGluZzogMTZweCAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWF4LXdpZHRoOiA1MCU7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICB9XHJcblxyXG4gICYuYWxpZ25sZWZ0LFxyXG4gICYuYWxpZ25yaWdodCB7XHJcbiAgICBibG9ja3F1b3RlIHtcclxuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaW1nIHtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgfVxyXG59XHJcblxyXG4vKiBJbWFnZSBTdXBwb3J0XHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4ud3AtYmxvY2staW1hZ2Uge1xyXG4gICYuc2l6ZS1tZWRpdW0sXHJcbiAgJi5zaXplLXRodW1ibmFpbCxcclxuICAmLmlzLXJlc2l6ZWQge1xyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmaWdjYXB0aW9uIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgfVxyXG59XHJcblxyXG5maWd1cmUge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG5cclxuYSB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGNvbG9yOiAkY29sb3JfX2xpbms7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIHRyYW5zaXRpb246IDAuM3M7XHJcblxyXG4gICY6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xyXG4gICAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XHJcbiAgfVxyXG5cclxuICAmOmhvdmVyLFxyXG4gIGE6YWN0aXZlIHtcclxuICAgIGNvbG9yOiAkY29sb3JfX2xpbmstaG92ZXI7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgfVxyXG59XHJcblxyXG5zdWIsXHJcbnN1cCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGZvbnQtc2l6ZTogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuc3VwIHtcclxuICB0b3A6IC0wLjVlbTtcclxufVxyXG5cclxuc3ViIHtcclxuICBib3R0b206IC0wLjI1ZW07XHJcbn1cclxuXHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXHJcbiAgICAjSEVBRElOR1NcclxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbmgxIHtcclxuICBAaW5jbHVkZSBib2R5LXRleHQoaDEpO1xyXG59XHJcblxyXG5oMiB7XHJcbiAgQGluY2x1ZGUgYm9keS10ZXh0KGgyKTtcclxufVxyXG5cclxuaDMge1xyXG4gIEBpbmNsdWRlIGJvZHktdGV4dChoMyk7XHJcbn1cclxuXHJcbmg0IHtcclxuICBAaW5jbHVkZSBib2R5LXRleHQoaDQpO1xyXG59XHJcblxyXG5oNSB7XHJcbiAgQGluY2x1ZGUgYm9keS10ZXh0KGg1KTtcclxufVxyXG5cclxuaDYge1xyXG4gIEBpbmNsdWRlIGJvZHktdGV4dChoNik7XHJcbn1cclxuXHJcbmgxLFxyXG5oMixcclxuaDMsXHJcbmg0LFxyXG5oNSxcclxuaDYge1xyXG4gIG1hcmdpbjogMTBweCAwO1xyXG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZWxlZ2liaWxpdHk7XHJcbn1cclxuXHJcbi8qIEJ1dHRvblxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbi53cC1ibG9jay1idXR0b24ge1xyXG4gIC53cC1ibG9jay1idXR0b25fX2xpbmsge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMThweDtcclxuICAgIHBhZGRpbmc6IDIwcHggMjRweDtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZDogJGdyYXktMjAwO1xyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0TGlzdHNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbnVsLFxyXG5vbCB7XHJcbiAgbWFyZ2luOiAwIDAgMThweCAwO1xyXG5cclxuICAmLm5vLWJ1bGxldCB7XHJcbiAgICAmLFxyXG4gICAgdWwsXHJcbiAgICBvbCB7XHJcbiAgICAgIG1hcmdpbjogMDtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbnVsIHtcclxuICBwYWRkaW5nOiAwO1xyXG4gIG1hcmdpbjogMCAwIDEwcHggMjVweDtcclxuXHJcbiAgQGluY2x1ZGUgbXEobWVkaXVtKSB7XHJcbiAgICBtYXJnaW46IDAgMCA1cHggMDtcclxuICB9XHJcbn1cclxuXHJcbmxpID4gdWwsXHJcbmxpID4gb2wge1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE4cHg7XHJcbn1cclxuXHJcbmR0IHtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG59XHJcblxyXG5kZCB7XHJcbiAgbWFyZ2luOiAwIDI0cHggMjRweDtcclxufVxyXG5cclxucCB7XHJcbiAgJjplbXB0eSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufVxyXG5cclxubGkgPiB1bCxcclxubGkgPiBvbCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcclxuICAgICNUQUJMRVxyXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxudGFibGUge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xyXG5cclxuICBAaW5jbHVkZSBtcShtZWRpdW0pIHtcclxuICAgIG1heC13aWR0aDogMzUwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxyXG4gICAgRm9ybSBGaWVsZHNcclxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbmlucHV0LFxyXG5idXR0b24sXHJcbnNlbGVjdCxcclxudGV4dGFyZWEge1xyXG4gIGZvbnQtZmFtaWx5OiAkZm9udF9fbWFpbjtcclxufVxyXG5cclxuc2VsZWN0LFxyXG50ZXh0YXJlYSxcclxuaW5wdXRbdHlwZT1cInRleHRcIl0sXHJcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcclxuaW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdLFxyXG5pbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0sXHJcbmlucHV0W3R5cGU9XCJkYXRlXCJdLFxyXG5pbnB1dFt0eXBlPVwibW9udGhcIl0sXHJcbmlucHV0W3R5cGU9XCJ0aW1lXCJdLFxyXG5pbnB1dFt0eXBlPVwid2Vla1wiXSxcclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcclxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxyXG5pbnB1dFt0eXBlPVwidXJsXCJdLFxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdLFxyXG5pbnB1dFt0eXBlPVwidGVsXCJdLFxyXG5pbnB1dFt0eXBlPVwiY29sb3JcIl0sXHJcbi51bmVkaXRhYmxlLWlucHV0IHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIHdpZHRoOiAyMDZweDtcclxuICBwYWRkaW5nOiAxNHB4IDZweDsgLyogYWRqdXN0aW5nIGJvcmRlci1ib3ggZGlmZmVyZW5jZSBvbiBsaXZlIHNpdGUgKi9cclxuICAvLyBtYXJnaW46IDAgMCAxMHB4O1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBsaW5lLWhlaWdodDogMS40MztcclxuICBjb2xvcjogJGdyYXktMzAwO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS0yMDA7XHJcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4ICRvcGFjaXR5LWJsYWNrLTA3NTtcclxuICB0cmFuc2l0aW9uOlxyXG4gICAgYm9yZGVyIGxpbmVhciAwLjJzLFxyXG4gICAgYm94LXNoYWRvdyBsaW5lYXIgMC4ycztcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gIGhlaWdodDogYXV0bztcclxuICBwYWRkaW5nOiA0cHggNnB4O1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIG92ZXJmbG93OiBhdXRvOyAvLyBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cclxufVxyXG5cclxuc2VsZWN0IHtcclxuICBib3gtc2hhZG93OiBub25lO1xyXG4gIHRyYW5zaXRpb246IG5vbmU7XHJcbiAgd2lkdGg6IDIyMHB4O1xyXG4gIHBhZGRpbmc6IDAgNnB4O1xyXG59XHJcblxyXG5zZWxlY3QsXHJcbmlucHV0W3R5cGU9XCJmaWxlXCJdIHtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDIuMTU7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5sYWJlbCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG59XHJcblxyXG5sYWJlbCxcclxuaW5wdXQsXHJcbmJ1dHRvbixcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgQGluY2x1ZGUgYm9keS10ZXh0KGJvZHkpO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbn1cclxuXHJcbmxhYmVsLFxyXG5zZWxlY3QsXHJcbmJ1dHRvbixcclxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcclxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxyXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdLFxyXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0sXHJcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLFxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXHJcbiAgICAjT1RIRVJcclxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbnByZSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgcGFkZGluZzogOS41cHg7XHJcbiAgbWFyZ2luOiAwIDAgMTBweDtcclxuICBmb250LXNpemU6IDEzcHg7IC8vIEV4Y2VwdGlvbmFsIGZvbnQtc2l6ZS5cclxuICBsaW5lLWhlaWdodDogMS41NDtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS0xNjA7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJG9wYWNpdHktYmxhY2stMDE1O1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBmb250LWZhbWlseTogJGZvbnRfX2NvZGU7XHJcbn1cclxuXHJcbmNvZGUge1xyXG4gIHBhZGRpbmc6IDJweCA0cHg7XHJcbiAgY29sb3I6ICNkMTQ7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y5O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMWUxZTg7XHJcbiAgZm9udC1mYW1pbHk6ICRmb250X19jb2RlO1xyXG4gIEBpbmNsdWRlIGJvZHktdGV4dChzKTtcclxuICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbn1cclxuXHJcbi8qIFNlcGFyYXRvclxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbi53cC1ibG9jay1zZXBhcmF0b3IsXHJcbmhyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW46IDIwcHggMDtcclxuICBib3JkZXI6IDA7XHJcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRjb2xvcl9fYmFja2dyb3VuZC1ocjtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHdoaXRlO1xyXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG4gICY6bm90KC5pcy1zdHlsZS1kb3RzKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS0xMDA7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBoZWlnaHQ6IDFweDtcclxuICB9XHJcblxyXG4gICY6bm90KC5pcy1zdHlsZS13aWRlKTpub3QoLmlzLXN0eWxlLWRvdHMpIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA0cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgaGVpZ2h0OiA0cHg7XHJcbiAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kOiAkZ3JheS0xMDA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLmlzLXN0eWxlLWRvdHM6OmJlZm9yZSB7XHJcbiAgICBjb2xvcjogJGdyYXktMTAwO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDEycHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEycHg7XHJcbiAgfVxyXG59XHJcblxyXG5hIHtcclxuICBjb2xvcjogIzZjNzU3ZDtcclxufVxyXG5cclxuLmJveCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uaW5wdXQge1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgd2lkdGg6IDg1cHg7XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG4gIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgYm9yZGVyOiAycHggc29saWQgJHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwcHg7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIHRyYW5zaXRpb246IDAuNXM7XHJcbn1cclxuLmJveDpob3ZlciBpbnB1dCB7XHJcbiAgY29sb3I6ICM0MTQwNDI7XHJcbiAgd2lkdGg6IDI1MHB4O1xyXG4gIGJhY2tncm91bmQ6ICR3aGl0ZTtcclxuICBib3JkZXI6IDJweCBzb2xpZCAjNzZlM2MwO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuLy8gLmJveCBpIHtcclxuLy8gICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbi8vICAgdG9wOiA1MCU7XHJcbi8vICAgcmlnaHQ6IDE1cHg7XHJcbi8vICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbi8vICAgZm9udC1zaXplOiAyNnB4O1xyXG4vLyAgIGNvbG9yOiAjZmZkNTJkO1xyXG4vLyAgIHRyYW5zaXRpb246IDAuMnM7XHJcbi8vIH1cclxuLy8gLmJveDpob3ZlciBpIHtcclxuLy8gICBvcGFjaXR5OiAwO1xyXG4vLyAgIHotaW5kZXg6IC0xO1xyXG4vLyB9XHJcblxyXG5mb290ZXIge1xyXG4gIHBhZGRpbmctdG9wOiAzcmVtO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM3NmUzYzA7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIG1hcmdpbi10b3A6IDVyZW07XHJcbn0iLCJAdXNlICdzYXNzOm1hdGgnO1xuQHVzZSAnc2FzczptYXAnO1xuQHVzZSAnc2FzczpsaXN0JztcblxuLy8vIEJyZWFrcG9pbnQgbGlzdFxuLy8vXG4vLy8gTmFtZSB5b3VyIGJyZWFrcG9pbnRzIGluIGEgd2F5IHRoYXQgY3JlYXRlcyBhIHViaXF1aXRvdXMgbGFuZ3VhZ2Vcbi8vLyBhY3Jvc3MgdGVhbSBtZW1iZXJzLiBJdCB3aWxsIGltcHJvdmUgY29tbXVuaWNhdGlvbiBiZXR3ZWVuXG4vLy8gc3Rha2Vob2xkZXJzLCBkZXNpZ25lcnMsIGRldmVsb3BlcnMsIGFuZCB0ZXN0ZXJzLlxuLy8vXG4vLy8gQHR5cGUgTWFwXG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSNzZWVpbmctdGhlLWN1cnJlbnRseS1hY3RpdmUtYnJlYWtwb2ludCBGdWxsIGRvY3VtZW50YXRpb24gYW5kIGV4YW1wbGVzXG4kYnJlYWtwb2ludHM6IChcbiAgbW9iaWxlOiAzMjBweCxcbiAgdGFibGV0OiA3NDBweCxcbiAgZGVza3RvcDogOTgwcHgsXG4gIHdpZGU6IDEzMDBweCxcbikgIWRlZmF1bHQ7XG5cbi8vLyBTaG93IGJyZWFrcG9pbnRzIGluIHRoZSB0b3AgcmlnaHQgY29ybmVyXG4vLy9cbi8vLyBJZiB5b3Ugd2FudCB0byBkaXNwbGF5IHRoZSBjdXJyZW50bHkgYWN0aXZlIGJyZWFrcG9pbnQgaW4gdGhlIHRvcFxuLy8vIHJpZ2h0IGNvcm5lciBvZiB5b3VyIHNpdGUgZHVyaW5nIGRldmVsb3BtZW50LCBhZGQgdGhlIGJyZWFrcG9pbnRzXG4vLy8gdG8gdGhpcyBsaXN0LCBvcmRlcmVkIGJ5IHdpZHRoLiBGb3IgZXhhbXBsZTogKG1vYmlsZSwgdGFibGV0LCBkZXNrdG9wKS5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgIEB1c2UgJ3BhdGgvdG8vbXEnIHdpdGggKCRzaG93LWJyZWFrcG9pbnRzOiAoJ21vYmlsZScsICd0YWJsZXQnLCAnZGVza3RvcCcpKTtcbi8vL1xuLy8vXG4vLy8gQHR5cGUgbWFwXG4kc2hvdy1icmVha3BvaW50czogKCkgIWRlZmF1bHQ7XG5cbi8vLyBDdXN0b21pemUgdGhlIG1lZGlhIHR5cGUgKGZvciBleGFtcGxlOiBgQG1lZGlhIHNjcmVlbmAgb3IgYEBtZWRpYSBwcmludGApXG4vLy8gQnkgZGVmYXVsdCBzYXNzLW1xIHVzZXMgYW4gXCJhbGxcIiBtZWRpYSB0eXBlIChgQG1lZGlhIGFsbCBhbmQg4oCmYClcbi8vL1xuLy8vIElmIHlvdSB3YW50IHRvIG92ZXJyaWVkIHRoZSBtZWRpYSB0eXBlLCB5b3UgY2FuIHVzZSB0aGlzIG9wdGlvbi5cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gICBAdXNlICdwYXRoL3RvL21xJyB3aXRoICgkbWVkaWEtdHlwZTogJ3NjcmVlbicpO1xuLy8vXG4vLy8gQHR5cGUgU3RyaW5nXG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSNjaGFuZ2luZy1tZWRpYS10eXBlIEZ1bGwgZG9jdW1lbnRhdGlvbiBhbmQgZXhhbXBsZVxuJG1lZGlhLXR5cGU6IGFsbCAhZGVmYXVsdDtcblxuLy8vIENvbnZlcnQgcGl4ZWxzIHRvIGVtc1xuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRweCAtIHZhbHVlIHRvIGNvbnZlcnRcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgJGZvbnQtc2l6ZS1pbi1lbXM6IHB4MmVtKDE2cHgpO1xuLy8vICBwIHsgZm9udC1zaXplOiBweDJlbSgxNnB4KTsgfVxuLy8vXG4vLy8gQHJldHVybnMge051bWJlcn1cblxuQGZ1bmN0aW9uIHB4MmVtKCRweCkge1xuICBAaWYgbWF0aC5pcy11bml0bGVzcygkcHgpIHtcbiAgICBAd2FybiBcIkFzc3VtaW5nICN7JHB4fSB0byBiZSBpbiBwaXhlbHMsIGF0dGVtcHRpbmcgdG8gY29udmVydCBpdCBpbnRvIHBpeGVscy5cIjtcbiAgICBAcmV0dXJuIHB4MmVtKCRweCAqIDFweCk7XG4gIH1cbiAgLy8gaWYgJHB4IGlzIGNvbXBhdGlibGUgd2l0aCBlbSB1bml0cywgdGhlbiByZXR1cm4gdmFsdWUgdW5jaGFuZ2VkXG4gIEBpZiBtYXRoLmNvbXBhdGlibGUoJHB4LCAxZW0pIHtcbiAgICBAcmV0dXJuICRweDtcbiAgfVxuICBAcmV0dXJuIG1hdGguZGl2KCRweCwgMTZweCkgKiAxZW07XG59XG5cbi8vLyBHZXQgYSBicmVha3BvaW50J3Mgd2lkdGhcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbmFtZSAtIE5hbWUgb2YgdGhlIGJyZWFrcG9pbnQuIE9uZSBvZiAkYnJlYWtwb2ludHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgJHRhYmxldC13aWR0aDogZ2V0LWJyZWFrcG9pbnQtd2lkdGgodGFibGV0KTtcbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IGdldC1icmVha3BvaW50LXdpZHRoKHRhYmxldCkpIHt9XG4vLy9cbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkYnJlYWtwb2ludHNcbi8vL1xuLy8vIEByZXR1cm5zIHtOdW1iZXJ9IFZhbHVlIGluIHBpeGVsc1xuQGZ1bmN0aW9uIGdldC1icmVha3BvaW50LXdpZHRoKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRicmVha3BvaW50cykge1xuICBAaWYgbWFwLmhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkbmFtZSkge1xuICAgIEByZXR1cm4gbWFwLmdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgfSBAZWxzZSB7XG4gICAgQHdhcm4gXCJCcmVha3BvaW50ICN7JG5hbWV9IHdhc24ndCBmb3VuZCBpbiAkYnJlYWtwb2ludHMuXCI7XG4gICAgQHJldHVybiBudWxsO1xuICB9XG59XG5cbi8vLyBNZWRpYSBRdWVyeSBtaXhpblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBCb29sZWFufSAkZnJvbSBbZmFsc2VdIC0gT25lIG9mICRicmVha3BvaW50c1xuLy8vIEBwYXJhbSB7U3RyaW5nIHwgQm9vbGVhbn0gJHVudGlsIFtmYWxzZV0gLSBPbmUgb2YgJGJyZWFrcG9pbnRzXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBCb29sZWFufSAkYW5kIFtmYWxzZV0gLSBBZGRpdGlvbmFsIG1lZGlhIHF1ZXJ5IHBhcmFtZXRlcnNcbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lZGlhLXR5cGUgWyRtZWRpYS10eXBlXSAtIE1lZGlhIHR5cGU6IHNjcmVlbiwgcHJpbnTigKZcbi8vL1xuLy8vIEBpZ25vcmUgVW5kb2N1bWVudGVkIEFQSSwgZm9yIGFkdmFuY2VkIHVzZSBvbmx5OlxuLy8vIEBpZ25vcmUgQHBhcmFtIHtNYXB9ICRicmVha3BvaW50cyBbJGJyZWFrcG9pbnRzXVxuLy8vXG4vLy8gQGNvbnRlbnQgc3R5bGluZyBydWxlcywgd3JhcHBlZCBpbnRvIGEgQG1lZGlhIHF1ZXJ5IHdoZW4gJHJlc3BvbnNpdmUgaXMgdHJ1ZVxuLy8vXG4vLy8gQHJlcXVpcmVzIHtWYXJpYWJsZX0gJG1lZGlhLXR5cGVcbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkYnJlYWtwb2ludHNcbi8vLyBAcmVxdWlyZXMge2Z1bmN0aW9ufSBweDJlbVxuLy8vIEByZXF1aXJlcyB7ZnVuY3Rpb259IGdldC1icmVha3BvaW50LXdpZHRoXG4vLy9cbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI3Jlc3BvbnNpdmUtbW9kZS1vbi1kZWZhdWx0IEZ1bGwgZG9jdW1lbnRhdGlvbiBhbmQgZXhhbXBsZXNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgQHVzZSAncGF0aC90by9tcScgYXMgKjtcbi8vLyAgLmVsZW1lbnQge1xuLy8vICAgIEBpbmNsdWRlIG1xKCRmcm9tOiBtb2JpbGUpIHtcbi8vLyAgICAgIGNvbG9yOiByZWQ7XG4vLy8gICAgfVxuLy8vICAgIEBpbmNsdWRlIG1xKCR1bnRpbDogdGFibGV0KSB7XG4vLy8gICAgICBjb2xvcjogYmx1ZTtcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEobW9iaWxlLCB0YWJsZXQpIHtcbi8vLyAgICAgIGNvbG9yOiBncmVlbjtcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEoJGZyb206IHRhYmxldCwgJGFuZDogJyhvcmllbnRhdGlvbjogbGFuZHNjYXBlKScpIHtcbi8vLyAgICAgIGNvbG9yOiB0ZWFsO1xuLy8vICAgIH1cbi8vLyAgICBAaW5jbHVkZSBtcSg5NTBweCkge1xuLy8vICAgICAgY29sb3I6IGhvdHBpbms7XG4vLy8gICAgfVxuLy8vICAgIEBpbmNsdWRlIG1xKHRhYmxldCwgJG1lZGlhLXR5cGU6IHNjcmVlbikge1xuLy8vICAgICAgY29sb3I6IGhvdHBpbms7XG4vLy8gICAgfVxuLy8vICAgIC8vIEFkdmFuY2VkIHVzZTpcbi8vLyAgICAkbXktYnJlYWtwb2ludHM6IChMOiA5MDBweCwgWEw6IDEyMDBweCk7XG4vLy8gICAgQGluY2x1ZGUgbXEoTCwgJGJyZWFrcG9pbnRzOiAkbXktYnJlYWtwb2ludHMpIHtcbi8vLyAgICAgIGNvbG9yOiBob3RwaW5rO1xuLy8vICAgIH1cbi8vLyAgfVxuQG1peGluIG1xKFxuICAkZnJvbTogZmFsc2UsXG4gICR1bnRpbDogZmFsc2UsXG4gICRhbmQ6IGZhbHNlLFxuICAkbWVkaWEtdHlwZTogJG1lZGlhLXR5cGUsXG4gICRicmVha3BvaW50czogJGJyZWFrcG9pbnRzXG4pIHtcbiAgJG1pbi13aWR0aDogMDtcbiAgJG1heC13aWR0aDogMDtcbiAgJG1lZGlhLXF1ZXJ5OiAnJztcblxuICAvLyBGcm9tOiB0aGlzIGJyZWFrcG9pbnQgKGluY2x1c2l2ZSlcbiAgQGlmICRmcm9tIHtcbiAgICBAaWYgdHlwZS1vZigkZnJvbSkgPT0gbnVtYmVyIHtcbiAgICAgICRtaW4td2lkdGg6IHB4MmVtKCRmcm9tKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRtaW4td2lkdGg6IHB4MmVtKGdldC1icmVha3BvaW50LXdpZHRoKCRmcm9tLCAkYnJlYWtwb2ludHMpKTtcbiAgICB9XG4gIH1cblxuICAvLyBVbnRpbDogdGhhdCBicmVha3BvaW50IChleGNsdXNpdmUpXG4gIEBpZiAkdW50aWwge1xuICAgIEBpZiB0eXBlLW9mKCR1bnRpbCkgPT0gbnVtYmVyIHtcbiAgICAgICRtYXgtd2lkdGg6IHB4MmVtKCR1bnRpbCk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkbWF4LXdpZHRoOiBweDJlbShnZXQtYnJlYWtwb2ludC13aWR0aCgkdW50aWwsICRicmVha3BvaW50cykpIC0gMC4wMWVtO1xuICAgIH1cbiAgfVxuXG4gIEBpZiAkbWluLXdpZHRoICE9IDAge1xuICAgICRtZWRpYS1xdWVyeTogJyN7JG1lZGlhLXF1ZXJ5fSBhbmQgKG1pbi13aWR0aDogI3skbWluLXdpZHRofSknO1xuICB9XG4gIEBpZiAkbWF4LXdpZHRoICE9IDAge1xuICAgICRtZWRpYS1xdWVyeTogJyN7JG1lZGlhLXF1ZXJ5fSBhbmQgKG1heC13aWR0aDogI3skbWF4LXdpZHRofSknO1xuICB9XG4gIEBpZiAkYW5kIHtcbiAgICAkbWVkaWEtcXVlcnk6ICcjeyRtZWRpYS1xdWVyeX0gYW5kICN7JGFuZH0nO1xuICB9XG5cbiAgLy8gUmVtb3ZlIHVubmVjZXNzYXJ5IG1lZGlhIHF1ZXJ5IHByZWZpeCAnYWxsIGFuZCAnXG4gIEBpZiAoJG1lZGlhLXR5cGUgPT0gJ2FsbCcgYW5kICRtZWRpYS1xdWVyeSAhPSAnJykge1xuICAgICRtZWRpYS10eXBlOiAnJztcbiAgICAkbWVkaWEtcXVlcnk6IHN0ci1zbGljZSh1bnF1b3RlKCRtZWRpYS1xdWVyeSksIDYpO1xuICB9XG5cbiAgQG1lZGlhICN7JG1lZGlhLXR5cGUgKyAkbWVkaWEtcXVlcnl9IHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gUXVpY2sgc29ydFxuLy8vXG4vLy8gQGF1dGhvciBTYW0gUmljaGFyZHNcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge0xpc3R9ICRsaXN0IC0gTGlzdCB0byBzb3J0XG4vLy8gQHJldHVybnMge0xpc3R9IFNvcnRlZCBMaXN0XG5AZnVuY3Rpb24gX3F1aWNrLXNvcnQoJGxpc3QpIHtcbiAgJGxlc3M6ICgpO1xuICAkZXF1YWw6ICgpO1xuICAkbGFyZ2U6ICgpO1xuXG4gIEBpZiBsZW5ndGgoJGxpc3QpID4gMSB7XG4gICAgJHNlZWQ6IGxpc3QubnRoKCRsaXN0LCBtYXRoLmNlaWwobWF0aC5kaXYobGVuZ3RoKCRsaXN0KSwgMikpKTtcblxuICAgIEBlYWNoICRpdGVtIGluICRsaXN0IHtcbiAgICAgIEBpZiAoJGl0ZW0gPT0gJHNlZWQpIHtcbiAgICAgICAgJGVxdWFsOiBsaXN0LmFwcGVuZCgkZXF1YWwsICRpdGVtKTtcbiAgICAgIH0gQGVsc2UgaWYgKCRpdGVtIDwgJHNlZWQpIHtcbiAgICAgICAgJGxlc3M6IGxpc3QuYXBwZW5kKCRsZXNzLCAkaXRlbSk7XG4gICAgICB9IEBlbHNlIGlmICgkaXRlbSA+ICRzZWVkKSB7XG4gICAgICAgICRsYXJnZTogbGlzdC5hcHBlbmQoJGxhcmdlLCAkaXRlbSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgQHJldHVybiBqb2luKGpvaW4oX3F1aWNrLXNvcnQoJGxlc3MpLCAkZXF1YWwpLCBfcXVpY2stc29ydCgkbGFyZ2UpKTtcbiAgfVxuXG4gIEByZXR1cm4gJGxpc3Q7XG59XG5cbi8vLyBTb3J0IGEgbWFwIGJ5IHZhbHVlcyAod29ya3Mgd2l0aCBudW1iZXJzIG9ubHkpXG4vLy9cbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge01hcH0gJG1hcCAtIE1hcCB0byBzb3J0XG4vLy8gQHJldHVybnMge01hcH0gTWFwIHNvcnRlZCBieSB2YWx1ZVxuQGZ1bmN0aW9uIF9tYXAtc29ydC1ieS12YWx1ZSgkbWFwKSB7XG4gICRtYXAtc29ydGVkOiAoKTtcbiAgJG1hcC1rZXlzOiBtYXAua2V5cygkbWFwKTtcbiAgJG1hcC12YWx1ZXM6IG1hcC52YWx1ZXMoJG1hcCk7XG4gICRtYXAtdmFsdWVzLXNvcnRlZDogX3F1aWNrLXNvcnQoJG1hcC12YWx1ZXMpO1xuXG4gIC8vIFJlb3JkZXIga2V5L3ZhbHVlIHBhaXJzIGJhc2VkIG9uIGtleSB2YWx1ZXNcbiAgQGVhY2ggJHZhbHVlIGluICRtYXAtdmFsdWVzLXNvcnRlZCB7XG4gICAgJGluZGV4OiBpbmRleCgkbWFwLXZhbHVlcywgJHZhbHVlKTtcbiAgICAka2V5OiBsaXN0Lm50aCgkbWFwLWtleXMsICRpbmRleCk7XG4gICAgJG1hcC1zb3J0ZWQ6IG1hcC5tZXJnZShcbiAgICAgICRtYXAtc29ydGVkLFxuICAgICAgKFxuICAgICAgICAka2V5OiAkdmFsdWUsXG4gICAgICApXG4gICAgKTtcblxuICAgIC8vIFVuc2V0IHRoZSB2YWx1ZSBpbiAkbWFwLXZhbHVlcyB0byBwcmV2ZW50IHRoZSBsb29wXG4gICAgLy8gZnJvbSBmaW5kaW5nIHRoZSBzYW1lIGluZGV4IHR3aWNlXG4gICAgJG1hcC12YWx1ZXM6IGxpc3Quc2V0LW50aCgkbWFwLXZhbHVlcywgJGluZGV4LCAwKTtcbiAgfVxuXG4gIEByZXR1cm4gJG1hcC1zb3J0ZWQ7XG59XG5cbi8vLyBBZGQgYSBicmVha3BvaW50XG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG5hbWUgLSBOYW1lIG9mIHRoZSBicmVha3BvaW50XG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR3aWR0aCAtIFdpZHRoIG9mIHRoZSBicmVha3BvaW50XG4vLy9cbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkYnJlYWtwb2ludHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgQGluY2x1ZGUgYWRkLWJyZWFrcG9pbnQodHZzY3JlZW4sIDE5MjBweCk7XG4vLy8gIEBpbmNsdWRlIG1xKHR2c2NyZWVuKSB7fVxuQG1peGluIGFkZC1icmVha3BvaW50KCRuYW1lLCAkd2lkdGgpIHtcbiAgJG5ldy1icmVha3BvaW50OiAoXG4gICAgJG5hbWU6ICR3aWR0aCxcbiAgKTtcbiAgJGJyZWFrcG9pbnRzOiBtYXAubWVyZ2UoJGJyZWFrcG9pbnRzLCAkbmV3LWJyZWFrcG9pbnQpICFnbG9iYWw7XG4gICRicmVha3BvaW50czogX21hcC1zb3J0LWJ5LXZhbHVlKCRicmVha3BvaW50cykgIWdsb2JhbDtcbn1cblxuLy8vIFNob3cgdGhlIGFjdGl2ZSBicmVha3BvaW50IGluIHRoZSB0b3AgcmlnaHQgY29ybmVyIG9mIHRoZSB2aWV3cG9ydFxuLy8vIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9zYXNzLW1xL3Nhc3MtbXEjc2VlaW5nLXRoZS1jdXJyZW50bHktYWN0aXZlLWJyZWFrcG9pbnRcbi8vL1xuLy8vIEBwYXJhbSB7TGlzdH0gJHNob3ctYnJlYWtwb2ludHMgWyRzaG93LWJyZWFrcG9pbnRzXSAtIExpc3Qgb2YgYnJlYWtwb2ludHMgdG8gc2hvdyBpbiB0aGUgdG9wIHJpZ2h0IGNvcm5lclxuLy8vIEBwYXJhbSB7TWFwfSAkYnJlYWtwb2ludHMgWyRicmVha3BvaW50c10gLSBCcmVha3BvaW50IG5hbWVzIGFuZCBzaXplc1xuLy8vXG4vLy8gQHJlcXVpcmVzIHtWYXJpYWJsZX0gJGJyZWFrcG9pbnRzXG4vLy8gQHJlcXVpcmVzIHtWYXJpYWJsZX0gJHNob3ctYnJlYWtwb2ludHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgLy8gU2hvdyBicmVha3BvaW50cyB1c2luZyBnbG9iYWwgc2V0dGluZ3Ncbi8vLyAgQGluY2x1ZGUgc2hvdy1icmVha3BvaW50cztcbi8vL1xuLy8vICAvLyBTaG93IGJyZWFrcG9pbnRzIHVzaW5nIGN1c3RvbSBzZXR0aW5nc1xuLy8vICBAaW5jbHVkZSBzaG93LWJyZWFrcG9pbnRzKChMLCBYTCksIChTOiAzMDBweCwgTDogODAwcHgsIFhMOiAxMjAwcHgpKTtcbkBtaXhpbiBzaG93LWJyZWFrcG9pbnRzKFxuICAkc2hvdy1icmVha3BvaW50czogJHNob3ctYnJlYWtwb2ludHMsXG4gICRicmVha3BvaW50czogJGJyZWFrcG9pbnRzXG4pIHtcbiAgYm9keTpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmY2Y4ZTM7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmYmVlZDU7XG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZmJlZWQ1O1xuICAgIGNvbG9yOiAjYzA5ODUzO1xuICAgIGZvbnQ6IHNtYWxsLWNhcHRpb247XG4gICAgcGFkZGluZzogM3B4IDZweDtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHotaW5kZXg6IDEwMDtcblxuICAgIC8vIExvb3AgdGhyb3VnaCB0aGUgYnJlYWtwb2ludHMgdGhhdCBzaG91bGQgYmUgc2hvd25cbiAgICBAZWFjaCAkc2hvdy1icmVha3BvaW50IGluICRzaG93LWJyZWFrcG9pbnRzIHtcbiAgICAgICR3aWR0aDogZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJHNob3ctYnJlYWtwb2ludCwgJGJyZWFrcG9pbnRzKTtcbiAgICAgIEBpbmNsdWRlIG1xKCRzaG93LWJyZWFrcG9pbnQsICRicmVha3BvaW50czogJGJyZWFrcG9pbnRzKSB7XG4gICAgICAgIGNvbnRlbnQ6ICcjeyRzaG93LWJyZWFrcG9pbnR9IOKJpSAjeyR3aWR0aH0gKCN7cHgyZW0oJHdpZHRoKX0pJztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQGlmIGxpc3QubGVuZ3RoKCRzaG93LWJyZWFrcG9pbnRzKSA+IDAge1xuICBAaW5jbHVkZSBzaG93LWJyZWFrcG9pbnRzO1xufVxuIiwiLyogbm9ybWFsaXplLmNzcyB2OC4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXHJcblxyXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcclxuICogYW5kIEZpcmVmb3guXHJcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXHJcbiAqL1xyXG5cclxuYXJ0aWNsZSxcclxuYXNpZGUsXHJcbmRldGFpbHMsXHJcbmZpZ2NhcHRpb24sXHJcbmZpZ3VyZSxcclxuZm9vdGVyLFxyXG5oZWFkZXIsXHJcbm1haW4sXHJcbm1lbnUsXHJcbm5hdixcclxuc2VjdGlvbixcclxuc3VtbWFyeSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qKlxyXG4gICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cclxuICAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICAqL1xyXG5cclxuYXVkaW8sXHJcbmNhbnZhcyxcclxucHJvZ3Jlc3MsXHJcbnZpZGVvIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblxyXG4gIC8qIDEgKi9cclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcblxyXG4gIC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAgKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxyXG4gICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cclxuICAqL1xyXG5cclxuYXVkaW86bm90KFtjb250cm9sc10pIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIGhlaWdodDogMDtcclxufVxyXG5cclxuLyoqXHJcbiAgKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXHJcbiAgKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXHJcbiAgKi9cclxuXHJcbltoaWRkZW5dLFxyXG50ZW1wbGF0ZSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcclxuICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cclxuICAqL1xyXG5cclxuYWJiclt0aXRsZV0ge1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxyXG4gICovXHJcblxyXG5iLFxyXG5zdHJvbmcge1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxyXG4gICovXHJcblxyXG5kZm4ge1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5cclxuLyoqXHJcbiAgKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxyXG4gICovXHJcblxyXG5tYXJrIHtcclxuICBiYWNrZ3JvdW5kOiAkZ3JheS0yMDA7XHJcbiAgY29sb3I6ICRibGFjaztcclxufVxyXG5cclxuLyoqXHJcbiAgKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICAqL1xyXG5cclxuc21hbGwge1xyXG4gIGZvbnQtc2l6ZTogODAlO1xyXG59XHJcblxyXG4vKipcclxuICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cclxuICAqL1xyXG5cclxuc3ViLFxyXG5zdXAge1xyXG4gIGZvbnQtc2l6ZTogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbnN1cCB7XHJcbiAgdG9wOiAtOHB4O1xyXG59XHJcblxyXG5zdWIge1xyXG4gIGJvdHRvbTogLTRweDtcclxufVxyXG5cclxuLyogRW1iZWRkZWQgY29udGVudFxyXG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXHJcbiAgKi9cclxuXHJcbnN2Zzpub3QoOnJvb3QpIHtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4vKiBGb3Jtc1xyXG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcclxuICAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cclxuICAqL1xyXG5cclxuLyoqXHJcbiAgKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXHJcbiAgKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cclxuICAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXHJcbiAgKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cclxuICAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCxcclxub3B0Z3JvdXAsXHJcbnNlbGVjdCxcclxudGV4dGFyZWEge1xyXG4gIGNvbG9yOiBpbmhlcml0O1xyXG5cclxuICAvKiAxICovXHJcbiAgZm9udDogaW5oZXJpdDtcclxuXHJcbiAgLyogMiAqL1xyXG4gIG1hcmdpbjogMDtcclxuXHJcbiAgLyogMyAqL1xyXG59XHJcblxyXG4vKipcclxuICAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxyXG4gICovXHJcblxyXG5idXR0b24ge1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xyXG59XHJcblxyXG4vKipcclxuICAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cclxuICAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXHJcbiAgKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxyXG4gICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxyXG4gICovXHJcblxyXG5idXR0b24sXHJcbnNlbGVjdCB7XHJcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcclxuICAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxyXG4gICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxyXG4gICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcclxuICAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cclxuICAqL1xyXG5cclxuYnV0dG9uLFxyXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXHJcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcclxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgLyogMiAqL1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgLyogMyAqL1xyXG59XHJcblxyXG4vKipcclxuICAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXHJcbiAgKi9cclxuXHJcbmJ1dHRvbltkaXNhYmxlZF0sXHJcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcclxuICBjdXJzb3I6IGRlZmF1bHQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxyXG4gICovXHJcblxyXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXHJcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcclxuICBib3JkZXI6IDA7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLyoqXHJcbiAgKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXHJcbiAgKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxyXG4gICpcclxuICAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXHJcbiAgKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxyXG4gICovXHJcblxyXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXHJcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHJcbiAgLyogMSAqL1xyXG4gIHBhZGRpbmc6IDA7XHJcblxyXG4gIC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAgKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxyXG4gICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcclxuICAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cclxuICAqL1xyXG5cclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxyXG4gICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xyXG4gICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxyXG4gICovXHJcblxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cclxuICAqL1xyXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xyXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAgKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXHJcbiAgKi9cclxuXHJcbmZpZWxkc2V0IHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3JfX2JvcmRlci1maWVsZHNldDtcclxuICBtYXJnaW46IDAgMnB4O1xyXG4gIHBhZGRpbmc6IDZweCAxMHB4IDEycHg7XHJcbn1cclxuXHJcbi8qKlxyXG4gICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxyXG4gICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxyXG4gICovXHJcblxyXG5sZWdlbmQge1xyXG4gIGJvcmRlcjogMDtcclxuXHJcbiAgLyogMSAqL1xyXG4gIHBhZGRpbmc6IDA7XHJcblxyXG4gIC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAgKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXHJcbiAgKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cclxuICAqL1xyXG5cclxub3B0Z3JvdXAge1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbn1cclxuXHJcbi8qIE5vdGU6IFRoaXMgZmlsZSBpcyB1cGRhdGVkIGJ5IFNhZ2FyLCBUbyByZW1vdmUgZHVjcGxpY2F0aW9uIG9mIHN0eWxlcy4gKi9cclxuXHJcbmZpZ3VyZSB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG4iLCIvKi0tLS0tLS0tLS0tXHJcblx0TWVkaWFcclxuLS0tLS0tLS0tLS0tLSovXHJcblxyXG4ucGFnZS1jb250ZW50IC53cC1zbWlsZXksXHJcbi5lbnRyeS1jb250ZW50IC53cC1zbWlsZXksXHJcbi5jb21tZW50LWNvbnRlbnQgLndwLXNtaWxleSB7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgbWFyZ2luLXRvcDogMDtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKiBNYWtlIHN1cmUgZW1iZWRzIGFuZCBpZnJhbWVzIGZpdCB0aGVpciBjb250YWluZXJzLiAqL1xyXG5lbWJlZCxcclxuaWZyYW1lLFxyXG5vYmplY3Qge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnNpdGUtY29udGVudCB7XHJcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG59XHJcbiIsIi5mcm9udC1pbWcge1xyXG4gICAgb3BhY2l0eTogNTAlO1xyXG5cclxufVxyXG5cclxuLmZyb250LWltZzpob3ZlciB7XHJcbiAgICBvcGFjaXR5OiAxMDAlO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiBibGFjaztcclxufVxyXG5cclxuYTpob3ZlciB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuIiwiLnNlYXJjaC1jYXJkLWNvbnRlbnQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHAge1xyXG4gICAgICBtYXJnaW46IDEwcHggMjVweDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC5zZWFyY2gtY2FyZC1jb250YWluZXIge1xyXG4gIFxyXG4gICAgLnNlYXJjaC1jYXJkLWNvbnRlbnQge1xyXG4gICAgICBtYXJnaW4tdG9wOiAxNnB4O1xyXG4gICAgICBAaW5jbHVkZSBtcShtZWRpdW0pIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgXHJcbiAgICAuc2VhcmNoLWNhcmQtdGh1bWJuYWlsIHtcclxuICAgICAgQGluY2x1ZGUgbXEobWVkaXVtKSB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==*/