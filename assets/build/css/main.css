/*!*************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/scss/main.scss ***!
  \*************************************************************************************************************/
/*---------------------------------
		Colors Variables
-----------------------------------*/
/*---------------------------------
		Colors Variables
-----------------------------------*/
/*---------------------------------
		Opacity
-----------------------------------*/
/*---------------------------------
		Gradient
-----------------------------------*/
/*---------------------------------
		Element Colors
-----------------------------------*/
/*---------------------------------
		Border Colors
-----------------------------------*/
/*----------------
		Font
------------------*/
/*---------------------------------
		Body Text Font Sizes
-----------------------------------*/
/**
 * Add font scale with media query as per configuration on $body-text
 * Ex: @include body-text( h1 );
 * This will add font-size and line-height with different breakpoints.
 */
/* Entry meta */
.updated:not(.published) {
  display: none;
}

/* Pagination */
.page-numbers.current > span {
  background-color: gray;
  color: #fff;
}

/*---------------------------
		Accessiblity
---------------------------*/
/* Text meant only for screen readers. */
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  left: -999em;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  word-wrap: normal;
}
.screen-reader-text:focus {
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto;
  clip-path: none;
  display: block;
  font-size: 1em;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000; /* Above WP toolbar. */
}

/*---------------------------
		Alignments
---------------------------*/
.left {
  float: left;
}

.right {
  float: right;
}

.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-center {
  text-align: center;
}
.text-justify {
  text-align: justify;
}

/*---------------------------
		Others
---------------------------*/
.hide {
  display: none;
}

.hidden {
  visibility: hidden;
}

.visible {
  visibility: visible;
}

html {
  box-sizing: border-box;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

/* stylelint-disable */
*,
*:before,
*:after {
  /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
  box-sizing: inherit;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

/* stylelint-enable */
body {
  margin: 0;
  font-family: "Lato", sans-serif;
  font-size: 16px;
  line-height: 1.43;
  background: #ffffff;
  color: #414042;
}
@media (min-width: 64em) {
  body {
    font-size: 18px;
    line-height: 1.43;
  }
}
body.mce-content-body {
  font-family: inherit;
  margin: 15px;
}

blockquote,
q,
blockquote.wp-block-quote {
  quotes: "" "";
  border-left: 4px solid #eeeeee;
  font-style: italic;
  margin: 0 0 30px 30px;
  padding-left: 16px;
  background: transparent;
  text-align: left;
  /* stylelint-disable */
  /* stylelint-enable */
}
blockquote p,
q p,
blockquote.wp-block-quote p {
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
}
blockquote cite,
blockquote .wp-block-quote__citation,
q cite,
q .wp-block-quote__citation,
blockquote.wp-block-quote cite,
blockquote.wp-block-quote .wp-block-quote__citation {
  display: block;
  font-size: 16px;
  font-weight: 700;
  margin-top: 12px;
  text-transform: uppercase;
}
blockquote p:last-of-type,
q p:last-of-type,
blockquote.wp-block-quote p:last-of-type {
  margin-bottom: 0;
}
blockquote.is-large, blockquote.is-style-large,
q.is-large,
q.is-style-large,
blockquote.wp-block-quote.is-large,
blockquote.wp-block-quote.is-style-large {
  margin: 0 auto;
}

/* Pull Quote
--------------------------------------------- */
.wp-block-pullquote {
  border: none;
  padding: 0;
  vertical-align: middle;
}
.wp-block-pullquote blockquote {
  border-left: 0;
  border-top: 8px solid #eeeeee;
  border-bottom: 8px solid #eeeeee;
  padding: 16px 0;
  text-align: center;
  max-width: 50%;
  margin: 0 auto;
}
.wp-block-pullquote.alignleft blockquote, .wp-block-pullquote.alignright blockquote {
  max-width: 100%;
}
.wp-block-pullquote img {
  height: auto;
  max-width: 100%;
  vertical-align: middle;
}

/* Image Support
--------------------------------------------- */
.wp-block-image.size-medium img, .wp-block-image.size-thumbnail img, .wp-block-image.is-resized img {
  width: auto;
}
.wp-block-image figcaption {
  text-align: left;
  padding: 10px 0;
}

figure {
  max-width: 100%;
}

a {
  cursor: pointer;
  color: #0192cc;
  text-decoration: none;
  transition: 0.3s;
}
a:focus {
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
a:hover,
a a:active {
  color: #355180;
  text-decoration: underline;
  outline: 0;
}

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
h1 {
  font-size: 31.5px;
  line-height: 1.27;
}

h2 {
  font-size: 31.5px;
  line-height: 1.27;
}

h3 {
  font-size: 24.5px;
  line-height: 1.64;
}

h4 {
  font-size: 17.5px;
  line-height: 1.142;
}

h5 {
  font-size: 14px;
  line-height: 1.43;
}

h6 {
  font-size: 11.9px;
  line-height: 1.681;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 10px 0;
  text-rendering: optimizelegibility;
}

/* Button
--------------------------------------------- */
.wp-block-button .wp-block-button__link {
  border-radius: 0;
  font-weight: 700;
  font-size: 16px;
  line-height: 18px;
  padding: 20px 24px;
}
.wp-block-button .wp-block-button__link:hover {
  background: #cccccc;
  text-decoration: none;
}

/*---------------------------
		Lists
---------------------------*/
ul,
ol {
  margin: 0 0 18px 0;
}
ul.no-bullet,
ul.no-bullet ul,
ul.no-bullet ol,
ol.no-bullet,
ol.no-bullet ul,
ol.no-bullet ol {
  margin: 0;
  padding: 0;
  list-style: none;
}

ul {
  padding: 0;
  margin: 0 0 10px 25px;
}
@media (min-width: 48em) {
  ul {
    margin: 0 0 5px 0;
  }
}

li > ul,
li > ol {
  margin-bottom: 0;
  margin-left: 18px;
}

dt {
  font-weight: 700;
}

dd {
  margin: 0 24px 24px;
}

p:empty {
  display: none;
}

li > ul,
li > ol {
  margin-bottom: 0;
}

/*------------------------------------*\
    #TABLE
\*------------------------------------*/
table {
  max-width: 100%;
  background-color: transparent;
  border-collapse: collapse;
  border-spacing: 0;
}
@media (min-width: 48em) {
  table {
    max-width: 350px;
  }
}

/*------------------------------------*\
    Form Fields
\*------------------------------------*/
input,
button,
select,
textarea {
  font-family: "Lato", sans-serif;
}

select,
textarea,
input[type=text],
input[type=password],
input[type=datetime],
input[type=datetime-local],
input[type=date],
input[type=month],
input[type=time],
input[type=week],
input[type=number],
input[type=email],
input[type=url],
input[type=search],
input[type=tel],
input[type=color],
.uneditable-input {
  display: inline-block;
  height: 20px;
  width: 206px;
  padding: 14px 6px; /* adjusting border-box difference on live site */
  margin: 0 0 10px;
  line-height: 1.43;
  color: #555555;
  vertical-align: middle;
  border-radius: 4px;
  background-color: #ffffff;
  border: 1px solid #cccccc;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  transition: border linear 0.2s, box-shadow linear 0.2s;
}

textarea {
  height: auto;
  padding: 4px 6px;
  max-width: 100%;
  outline: none;
  overflow: auto;
}

select {
  box-shadow: none;
  transition: none;
  width: 220px;
  padding: 0 6px;
}

select,
input[type=file] {
  height: 30px;
  line-height: 2.15;
}

button {
  margin: 0;
}

label {
  display: block;
  margin-bottom: 5px;
}

label,
input,
button,
select,
textarea {
  font-size: 16px;
  line-height: 1.43;
  font-weight: 400;
}
@media (min-width: 64em) {
  label,
  input,
  button,
  select,
  textarea {
    font-size: 18px;
    line-height: 1.43;
  }
}

label,
select,
button,
input[type=button],
input[type=reset],
input[type=submit],
input[type=radio],
input[type=checkbox] {
  cursor: pointer;
}

input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-cancel-button {
  -webkit-appearance: none;
}

/*------------------------------------*\
    #OTHER
\*------------------------------------*/
pre {
  display: block;
  padding: 9.5px;
  margin: 0 0 10px;
  font-size: 13px;
  line-height: 1.54;
  word-break: break-all;
  word-wrap: break-word;
  white-space: pre-wrap;
  background-color: #e2eaee;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 4px;
  font-family: "Lato", sans-serif, monospace;
}

code {
  padding: 2px 4px;
  color: #d14;
  white-space: nowrap;
  background-color: #f7f7f9;
  border: 1px solid #e1e1e8;
  font-family: "Lato", sans-serif, monospace;
  font-size: 12px;
  border-radius: 3px;
}

/* Separator
--------------------------------------------- */
.wp-block-separator,
hr {
  width: 100%;
  margin: 20px 0;
  border: 0;
  border-top: 1px solid #eeeeee;
  border-bottom: 1px solid #ffffff;
  box-sizing: content-box;
}
.wp-block-separator:not(.is-style-dots),
hr:not(.is-style-dots) {
  background-color: #eff3f6;
  border: 0;
  height: 1px;
}
.wp-block-separator:not(.is-style-wide):not(.is-style-dots),
hr:not(.is-style-wide):not(.is-style-dots) {
  width: 100%;
  height: 4px;
  background: transparent;
}
.wp-block-separator:not(.is-style-wide):not(.is-style-dots)::before,
hr:not(.is-style-wide):not(.is-style-dots)::before {
  content: "";
  display: block;
  height: 4px;
  width: 40px;
  background: #eff3f6;
}
.wp-block-separator.is-style-dots::before,
hr.is-style-dots::before {
  color: #eff3f6;
  font-size: 18px;
  letter-spacing: 12px;
  padding-left: 12px;
}

/* normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
  * 1. Correct `inline-block` display not defined in IE 8/9.
  * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
  */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
  * Prevent modern browsers from displaying `audio` without controls.
  * Remove excess height in iOS 5 devices.
  */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
  * Address `[hidden]` styling not present in IE 8/9/10.
  * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
  */
[hidden],
template {
  display: none;
}

/* Text-level semantics
    ========================================================================== */
/**
  * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
  */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
  * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
  */
b,
strong {
  font-weight: 700;
}

/**
  * Address styling not present in Safari and Chrome.
  */
dfn {
  font-style: italic;
}

/**
  * Address styling not present in IE 8/9.
  */
mark {
  background: #cccccc;
  color: #000000;
}

/**
  * Address inconsistent and variable font size in all browsers.
  */
small {
  font-size: 80%;
}

/**
  * Prevent `sub` and `sup` affecting `line-height` in all browsers.
  */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -8px;
}

sub {
  bottom: -4px;
}

/* Embedded content
    ========================================================================== */
/**
  * Correct overflow not hidden in IE 9/10/11.
  */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
    ========================================================================== */
/**
  * Known limitation: by default, Chrome and Safari on OS X allow very limited
  * styling of `select`, unless a `border` property is set.
  */
/**
  * 1. Correct color not being inherited.
  *    Known issue: affects color of disabled elements.
  * 2. Correct font properties not being inherited.
  * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
  */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
  * Address `overflow` set to `hidden` in IE 8/9/10/11.
  */
button {
  overflow: visible;
}

/**
  * Address inconsistent `text-transform` inheritance for `button` and `select`.
  * All other form control elements do not inherit `text-transform` values.
  * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
  * Correct `select` style inheritance in Firefox.
  */
button,
select {
  text-transform: none;
}

/**
  * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
  *    and `video` controls.
  * 2. Correct inability to style clickable `input` types in iOS.
  * 3. Improve usability and consistency of cursor style between image-type
  *    `input` and others.
  */
button,
html input[type=button],
input[type=reset],
input[type=submit] {
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
  * Re-set default cursor for disabled elements.
  */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
  * Remove inner padding and border in Firefox 4+.
  */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
  * It's recommended that you don't attempt to style these elements.
  * Firefox's implementation doesn't respect box-sizing, padding, or width.
  *
  * 1. Address box sizing set to `content-box` in IE 8/9/10.
  * 2. Remove excess padding in IE 8/9/10.
  */
input[type=checkbox],
input[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
  * Fix the cursor style for Chrome's increment/decrement buttons. For certain
  * `font-size` values of the `input`, it causes the cursor style of the
  * decrement button to change from `default` to `text`.
  */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
  * Remove inner padding and search cancel button in Safari and Chrome on OS X.
  * Safari (but not Chrome) clips the cancel button when the search input has
  * padding (and `textfield` appearance).
  */
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
  * 1. Correct the inability to style clickable types in iOS and Safari.
  * 2. Change font properties to `inherit` in Safari.
  */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/**
  * Define consistent border, margin, and padding.
  */
fieldset {
  border: 1px solid #cccccc;
  margin: 0 2px;
  padding: 6px 10px 12px;
}

/**
  * 1. Correct `color` not being inherited in IE 8/9/10/11.
  * 2. Remove padding so people aren't caught out if they zero out fieldsets.
  */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
  * Don't inherit the `font-weight` (applied by a rule above).
  * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
  */
optgroup {
  font-weight: 700;
}

/* Note: This file is updated by Sagar, To remove ducplication of styles. */
figure {
  margin: 0;
  max-width: 100%;
}

/*-----------
	Media
-------------*/
.page-content .wp-smiley,
.entry-content .wp-smiley,
.comment-content .wp-smiley {
  border: none;
  margin-bottom: 0;
  margin-top: 0;
  padding: 0;
}

/* Make sure embeds and iframes fit their containers. */
embed,
iframe,
object {
  max-width: 100%;
}

.site-content {
  word-wrap: break-word;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NzL21haW4uY3NzIiwibWFwcGluZ3MiOiI7OztBQUFBOztvQ0FBQTtBQUlBOztvQ0FBQTtBQXVDQTs7b0NBQUE7QUFPQTs7b0NBQUE7QUFPQTs7b0NBQUE7QUE0QkE7O29DQUFBO0FDckZBOzttQkFBQTtBQWdCQTs7b0NBQUE7QUNBQTs7OztFQUFBO0FDaEJBO0FBQ0E7RUFDRTtBQzhCRjs7QUNoQ0E7QUFDQTtFQUNFO0VBQ0E7QURtQ0Y7O0FFdENBOzs0QkFBQTtBQUlBO0FBQ0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FGd0NGO0FFdENFO0VBQ0Usa0JDaEJZO0VEaUJaO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FGd0NKOztBRXBDQTs7NEJBQUE7QUFJQTtFQUNFO0FGc0NGOztBRW5DQTtFQUNFO0FGc0NGOztBRWxDRTtFQUNFO0FGcUNKO0FFbENFO0VBQ0U7QUZvQ0o7QUVqQ0U7RUFDRTtBRm1DSjtBRWhDRTtFQUNFO0FGa0NKOztBRTlCQTs7NEJBQUE7QUFJQTtFQUNFO0FGZ0NGOztBRTdCQTtFQUNFO0FGZ0NGOztBRTdCQTtFQUNFO0FGZ0NGOztBSS9HQTtFQUNFO0VBQ0E7RUFDQTtBSmtIRjs7QUkvR0E7QUFDQTs7O0VBR0U7RUFDQTtFQUVBO0FKaUhGOztBSS9HQTtBQUVBO0VBQ0U7RU5MQSwrQkRSVztFQ2dDSDtFQUNBO0VNZlIsbUJSTE07RVFNTixjUlpVO0FJNEhaO0FLd0NFO0VEL0pGO0lOZ0JZO0lBQ0E7RUUyR1Y7QUFDRjtBSW5IRTtFQUNFO0VBQ0E7QUpxSEo7O0FJakhBOzs7RUFHRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQVFBO0VBU0E7QUpxR0Y7QUlwSEU7OztFQUNFO0VBQ0E7RUFDQTtBSndISjtBSXBIRTs7Ozs7O0VBRUU7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBSjBISjtBSXRIRTs7O0VBQ0U7QUowSEo7QUl2SEU7Ozs7O0VBRUU7QUo0SEo7O0FJeEhBOytDQUFBO0FBRUE7RUFDRTtFQUNBO0VBQ0E7QUoySEY7QUl6SEU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBSjJISjtBSXRISTtFQUNFO0FKd0hOO0FJcEhFO0VBQ0U7RUFDQTtFQUNBO0FKc0hKOztBSWxIQTsrQ0FBQTtBQU1JO0VBQ0U7QUppSE47QUk3R0U7RUFDRTtFQUNBO0FKK0dKOztBSTNHQTtFQUNFO0FKOEdGOztBSTNHQTtFQUNFO0VBQ0EsY1IzRlM7RVE0RlQ7RUFDQTtBSjhHRjtBSTVHRTtFQUNFO0VBQ0E7QUo4R0o7QUkzR0U7O0VBRUUsY1J6R087RVEwR1A7RUFDQTtBSjZHSjs7QUl6R0E7O0VBRUU7RUFDQTtFQUNBO0VBQ0E7QUo0R0Y7O0FJekdBO0VBQ0U7QUo0R0Y7O0FJekdBO0VBQ0U7QUo0R0Y7O0FJekdBOzt1Q0FBQTtBQUlBO0VON0hVO0VBQ0E7QUV5T1Y7O0FJekdBO0VOaklVO0VBQ0E7QUU4T1Y7O0FJMUdBO0VOcklVO0VBQ0E7QUVtUFY7O0FJM0dBO0VOeklVO0VBQ0E7QUV3UFY7O0FJNUdBO0VON0lVO0VBQ0E7QUU2UFY7O0FJN0dBO0VOakpVO0VBQ0E7QUVrUVY7O0FJOUdBOzs7Ozs7RUFNRTtFQUNBO0FKaUhGOztBSTlHQTsrQ0FBQTtBQUlFO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBSitHSjtBSTdHSTtFQUNFLG1CUnRMSztFUXVMTDtBSitHTjs7QUkxR0E7OzRCQUFBO0FBSUE7O0VBRUU7QUo0R0Y7QUl6R0k7Ozs7OztFQUdFO0VBQ0E7RUFDQTtBSjhHTjs7QUl6R0E7RUFDRTtFQUNBO0FKNEdGO0FLdktFO0VEeURGO0lBS0k7RUo2R0Y7QUFDRjs7QUkxR0E7O0VBRUU7RUFDQTtBSjZHRjs7QUkxR0E7RUFDRTtBSjZHRjs7QUkxR0E7RUFDRTtBSjZHRjs7QUl6R0U7RUFDRTtBSjRHSjs7QUl4R0E7O0VBRUU7QUoyR0Y7O0FJeEdBOzt1Q0FBQTtBQUlBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QUowR0Y7QUs3TUU7RUQrRkY7SUFPSTtFSjJHRjtBQUNGOztBSXhHQTs7dUNBQUE7QUFJQTs7OztFQUlFLCtCUDdSVztBR3VZYjs7QUl2R0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBaUJFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLGNSalNTO0VRa1NUO0VBQ0E7RUFDQSx5QlI3U007RVE4U047RUFDQTtFQUNBO0FKMEdGOztBSXZHQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUowR0Y7O0FJdkdBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QUowR0Y7O0FJdkdBOztFQUVFO0VBQ0E7QUowR0Y7O0FJdkdBO0VBQ0U7QUowR0Y7O0FJdkdBO0VBQ0U7RUFDQTtBSjBHRjs7QUl2R0E7Ozs7O0VOOVRVO0VBQ0E7RU1tVVI7QUoyR0Y7QUtwU0U7RURtTEY7Ozs7O0lObFVZO0lBQ0E7RUUyYlY7QUFDRjs7QUlsSEE7Ozs7Ozs7O0VBUUU7QUpxSEY7O0FJbEhBOztFQUVFO0FKcUhGOztBSWxIQTs7dUNBQUE7QUFJQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQSx5QlJoWFM7RVFpWFQ7RUFDQTtFQUNBLDBDUHBZVztBR3dmYjs7QUlqSEE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsMENQN1lXO0VDNkJIO0VNa1hSO0FKb0hGOztBSWpIQTsrQ0FBQTtBQUdBOztFQUVFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBSm1IRjtBSWxIRTs7RUFDRSx5QlIvWU87RVFnWlA7RUFDQTtBSnFISjtBSWxIRTs7RUFDRTtFQUNBO0VBQ0E7QUpxSEo7QUluSEk7O0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQSxtQlI5Wks7QUlvaEJYO0FJbEhFOztFQUNFLGNSbmFPO0VRb2FQO0VBQ0E7RUFDQTtBSnFISjs7QU1sakJBO0FBRUE7K0VBQUE7QUFHQTs7Ozs7RUFBQTtBQU9BOzs7Ozs7Ozs7Ozs7RUFZRTtBTmtqQkY7O0FNL2lCQTs7O0dBQUE7QUFLQTs7OztFQUlFO0VBRUE7RUFDQTtFQUVBO0FOK2lCRjs7QU01aUJBOzs7R0FBQTtBQUtBO0VBQ0U7RUFDQTtBTjhpQkY7O0FNM2lCQTs7O0dBQUE7QUFLQTs7RUFFRTtBTjZpQkY7O0FNMWlCQTtnRkFBQTtBQUdBOztHQUFBO0FBSUE7RUFDRTtBTjJpQkY7O0FNeGlCQTs7R0FBQTtBQUlBOztFQUVFO0FOMGlCRjs7QU12aUJBOztHQUFBO0FBSUE7RUFDRTtBTnlpQkY7O0FNdGlCQTs7R0FBQTtBQUlBO0VBQ0UsbUJWdkVTO0VVd0VULGNWMUZNO0FJa29CUjs7QU1yaUJBOztHQUFBO0FBSUE7RUFDRTtBTnVpQkY7O0FNcGlCQTs7R0FBQTtBQUlBOztFQUVFO0VBQ0E7RUFDQTtFQUNBO0FOc2lCRjs7QU1uaUJBO0VBQ0U7QU5zaUJGOztBTW5pQkE7RUFDRTtBTnNpQkY7O0FNbmlCQTtnRkFBQTtBQUdBOztHQUFBO0FBSUE7RUFDRTtBTm9pQkY7O0FNamlCQTtnRkFBQTtBQUdBOzs7R0FBQTtBQUtBOzs7OztHQUFBO0FBT0E7Ozs7O0VBS0U7RUFFQTtFQUNBO0VBRUE7RUFDQTtFQUVBO0FOOGhCRjs7QU0zaEJBOztHQUFBO0FBSUE7RUFDRTtBTjZoQkY7O0FNMWhCQTs7Ozs7R0FBQTtBQU9BOztFQUVFO0FONGhCRjs7QU16aEJBOzs7Ozs7R0FBQTtBQVFBOzs7O0VBSUU7RUFDQTtFQUVBO0FOMGhCRjs7QU12aEJBOztHQUFBO0FBSUE7O0VBRUU7QU55aEJGOztBTXRoQkE7O0dBQUE7QUFJQTs7RUFFRTtFQUNBO0FOd2hCRjs7QU1yaEJBOzs7Ozs7R0FBQTtBQVFBOztFQUVFO0VBRUE7RUFDQTtFQUVBO0FOcWhCRjs7QU1saEJBOzs7O0dBQUE7QUFNQTs7RUFFRTtBTm9oQkY7O0FNamhCQTs7OztHQUFBO0FBTUE7O0VBRUU7QU5taEJGOztBTWhoQkE7OztHQUFBO0FBSUE7RUFDRTtFQUNBO0FObWhCRjs7QU1oaEJBOztHQUFBO0FBSUE7RUFDRTtFQUNBO0VBQ0E7QU5raEJGOztBTS9nQkE7OztHQUFBO0FBS0E7RUFDRTtFQUVBO0VBQ0E7RUFFQTtBTitnQkY7O0FNNWdCQTs7O0dBQUE7QUFLQTtFQUNFO0FOOGdCRjs7QU0zZ0JBO0FBRUE7RUFDRTtFQUNBO0FONmdCRjs7QU92MEJBOztjQUFBO0FBSUE7OztFQUdFO0VBQ0E7RUFDQTtFQUNBO0FQeTBCRjs7QU90MEJBO0FBQ0E7OztFQUdFO0FQeTBCRjs7QU90MEJBO0VBQ0U7QVB5MEJGLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb29raW5nX2FkdmVudHVyZS8uL3NyYy9zY3NzLzAtc2V0dGluZ3MvX2NvbG9ycy5zY3NzIiwid2VicGFjazovL2Nvb2tpbmdfYWR2ZW50dXJlLy4vc3JjL3Njc3MvMC1zZXR0aW5ncy9fdHlwb2dyYXBoeS5zY3NzIiwid2VicGFjazovL2Nvb2tpbmdfYWR2ZW50dXJlLy4vc3JjL3Njc3MvMS10b29scy9fbWl4aW5zLnNjc3MiLCJ3ZWJwYWNrOi8vY29va2luZ19hZHZlbnR1cmUvLi9zcmMvc2Nzcy80LWxheW91dHMvX21ldGEuc2NzcyIsIndlYnBhY2s6Ly9jb29raW5nX2FkdmVudHVyZS8uL3NyYy9zY3NzL21haW4uc2NzcyIsIndlYnBhY2s6Ly9jb29raW5nX2FkdmVudHVyZS8uL3NyYy9zY3NzLzQtbGF5b3V0cy9fcGFnaW5hdGlvbi5zY3NzIiwid2VicGFjazovL2Nvb2tpbmdfYWR2ZW50dXJlLy4vc3JjL3Njc3MvMi1nZW5lcmljL19jb21tb24tY2xhc3Nlcy5zY3NzIiwid2VicGFjazovL2Nvb2tpbmdfYWR2ZW50dXJlLy4vc3JjL3Njc3MvMC1zZXR0aW5ncy9fdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vY29va2luZ19hZHZlbnR1cmUvLi9zcmMvc2Nzcy8yLWdlbmVyaWMvX2VsZW1lbnRzLnNjc3MiLCJ3ZWJwYWNrOi8vY29va2luZ19hZHZlbnR1cmUvLi9ub2RlX21vZHVsZXMvc2Fzcy1tcS9fbXEuc2NzcyIsIndlYnBhY2s6Ly9jb29raW5nX2FkdmVudHVyZS8uL3NyYy9zY3NzLzItZ2VuZXJpYy9fbm9ybWFsaXplLnNjc3MiLCJ3ZWJwYWNrOi8vY29va2luZ19hZHZlbnR1cmUvLi9zcmMvc2Nzcy8yLWdlbmVyaWMvX3dwLWNzcy5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0XHRDb2xvcnMgVmFyaWFibGVzXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0XHRDb2xvcnMgVmFyaWFibGVzXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbiRibGFjazogIzAwMDAwMDtcclxuJGJsYWNrLTkwMDogIzNkM2QzZDtcclxuJGJsYWNrLTg2MDogIzU5NTg1ODtcclxuJGJsYWNrLTg1MDogIzMyMzIzMjtcclxuJGJsYWNrLTgwMDogIzQxNDA0MjtcclxuJGJsYWNrLTYwMDogIzNkM2U0MDtcclxuJGJsYWNrLTcwMDogIzU5NTk1OTtcclxuJGJsYWNrLTEwMDogIzI4MjgyODtcclxuJGJsYWNrLTUwOiAjNWQ1ZDVkO1xyXG5cclxuJHdoaXRlOiAjZmZmZmZmO1xyXG5cclxuJGRhcmstZ3JheS0yMDA6ICMzMzM7XHJcbiRkYXJrLWdyYXktMTAwOiAjNDI0MjQyO1xyXG5cclxuJGdyYXktMTAwOiAjZWZmM2Y2O1xyXG4kZ3JheS0xNTA6ICNlZWVlZWU7XHJcbiRncmF5LTE2MDogI2UyZWFlZTtcclxuJGdyYXktMjAwOiAjY2NjY2NjO1xyXG4kZ3JheS0zMDA6ICM1NTU1NTU7XHJcblxyXG4kYmx1ZS05MDA6ICMzMzQ0ZDk7XHJcbiRibHVlLTgwMDogIzMyMmViYjtcclxuJGJsdWUtNTAwOiAjMzU1MTgwO1xyXG4kYmx1ZS0zMDA6ICM2MjU4ZDU7XHJcbiRibHVlLTIwMDogIzA2NzNhOTtcclxuJGJsdWUtMTAwOiAjMDE5MmNjO1xyXG4kYmx1ZS04MDogIzAxODNjNjtcclxuJGJsdWUtNDA6ICMyNzkxZGI7XHJcbiRibHVlLTUwOiAjMzlhN2UyO1xyXG4kYmx1ZS00MDogIzM4YWZmZDtcclxuJGJsdWUtMjA6ICNlNGYzZmQ7XHJcblxyXG4kcHVycGxlLTgwMDogIzQwNDZmZjtcclxuXHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0XHRPcGFjaXR5XHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbiRvcGFjaXR5LWJsYWNrLTA3NTogcmdiYSgwLCAwLCAwLCAwLjA3NSk7XHJcbiRvcGFjaXR5LWJsYWNrLTAxNTogcmdiYSgwLCAwLCAwLCAwLjE1KTtcclxuXHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0XHRHcmFkaWVudFxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4kaGVhZGVyLWdyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAkYmxhY2stOTAwIDAlLCAkYmxhY2stMTAwIDEwMCUpO1xyXG4kbGluay1ob3Zlci1ncmFkaWVudDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgJGJsdWUtMTAwIDAlLCAkYmx1ZS0yMDAgMTAwJSk7XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0RWxlbWVudCBDb2xvcnNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLy8gPGJvZHk+XHJcbiRjb2xvcl9fYm9keS10ZXh0OiAkYmxhY2stODAwO1xyXG4kY29sb3JfX2JhY2tncm91bmQtYm9keTogJHdoaXRlO1xyXG5cclxuLy8gPGE+XHJcbiRjb2xvcl9fbGluazogJGJsdWUtMTAwO1xyXG4kY29sb3JfX2xpbmstaG92ZXI6ICRibHVlLTUwMDtcclxuXHJcbiRjb2xvcl9fYmFja2dyb3VuZC1idXR0b246ICRncmF5LTEwMDtcclxuJGNvbG9yX19iYWNrZ3JvdW5kLWJ1dHRvbi1ob3ZlcjogJGdyYXktMTAwO1xyXG4kY29sb3JfX2JvcmRlci1idXR0b246ICRkYXJrLWdyYXktMjAwO1xyXG4kY29sb3JfX2JvcmRlci1idXR0b24taG92ZXI6ICRibGFjaztcclxuXHJcbiRjb2xvcl9fYm9yZGVyLWlucHV0OiAkZ3JheS0xMDA7XHJcbiRjb2xvcl9fdGV4dC1pbnB1dDogJGRhcmstZ3JheS0yMDA7XHJcbiRjb2xvcl9fdGV4dC1pbnB1dC1mb2N1czogJGJsYWNrO1xyXG5cclxuLy8gPHByZT4sIDxjb2RlPlxyXG4kY29sb3JfX2JhY2tncm91bmQtcHJlOiAkZ3JheS0xMDA7XHJcblxyXG4vLyA8aHI+XHJcbiRjb2xvcl9fYmFja2dyb3VuZC1ocjogJGdyYXktMTUwO1xyXG4kY29sb3JfX2JhY2tncm91bmQtdGFibGU6ICRibHVlLTIwO1xyXG5cclxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHRcdEJvcmRlciBDb2xvcnNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuJGNvbG9yX19ib3JkZXItbGlnaHQ6ICRncmF5LTEwMDtcclxuJGNvbG9yX19ib3JkZXItZmllbGRzZXQ6ICRncmF5LTIwMDtcclxuJGNvbG9yX19ib3JkZXItdGFibGU6ICRncmF5LTIwMDtcclxuJGNvbG9yX19ib3JkZXItaGVhZGVyOiAkZ3JheS0zMDA7XHJcbiIsIi8qLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0Rm9udFxyXG4tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLy8gR2xvYmFsIHRoZW1lIGZvbnQuXHJcbiRmb250X19tYWluOiBcIkxhdG9cIiwgc2Fucy1zZXJpZjtcclxuXHJcbi8vIEdsb2JhbCBjb2RlIGZvbnRcclxuJGZvbnRfX2NvZGU6IFwiTGF0b1wiLCBzYW5zLXNlcmlmLCBtb25vc3BhY2U7XHJcblxyXG4vLyBGYWxsYmFjayBmb250IHdoZW4gZm9udCBpcyBub3QgbG9hZGVkIHZpYSBXZWJGb250cyBKUy5cclxuJGZvbnRfX2ZhbGxiYWNrOiBzYW5zLXNlcmlmO1xyXG5cclxuLy8gQmFzZSBsaW5lIGhlaWdodC5cclxuJGZvbnRfX2Jhc2UtbGluZS1oZWlnaHQ6IDMwcHg7XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0Qm9keSBUZXh0IEZvbnQgU2l6ZXNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuJGJvZHktdGV4dDogKFxyXG4gIFwiaDFcIjogKFxyXG4gICAgXCJzbWFsbFwiOiAoXHJcbiAgICAgIGZvbnQtc2l6ZTogMzEuNXB4LFxyXG4gICAgICBsaW5lLWhlaWdodDogMS4yNyxcclxuICAgICksXHJcbiAgKSxcclxuICBcImgyXCI6IChcclxuICAgIFwic21hbGxcIjogKFxyXG4gICAgICBmb250LXNpemU6IDMxLjVweCxcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuMjcsXHJcbiAgICApLFxyXG4gICksXHJcbiAgXCJoM1wiOiAoXHJcbiAgICBcInNtYWxsXCI6IChcclxuICAgICAgZm9udC1zaXplOiAyNC41cHgsXHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjY0LFxyXG4gICAgKSxcclxuICApLFxyXG4gIFwiaDRcIjogKFxyXG4gICAgXCJzbWFsbFwiOiAoXHJcbiAgICAgIGZvbnQtc2l6ZTogMTcuNXB4LFxyXG4gICAgICBsaW5lLWhlaWdodDogMS4xNDIsXHJcbiAgICApLFxyXG4gICksXHJcbiAgXCJoNVwiOiAoXHJcbiAgICBcInNtYWxsXCI6IChcclxuICAgICAgZm9udC1zaXplOiAxNHB4LFxyXG4gICAgICBsaW5lLWhlaWdodDogMS40MyxcclxuICAgICksXHJcbiAgKSxcclxuICBcImg2XCI6IChcclxuICAgIFwic21hbGxcIjogKFxyXG4gICAgICBmb250LXNpemU6IDExLjlweCxcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuNjgxLFxyXG4gICAgKSxcclxuICApLFxyXG4gIFwiYm9keVwiOiAoXHJcbiAgICBcInNtYWxsXCI6IChcclxuICAgICAgZm9udC1zaXplOiAxNnB4LFxyXG4gICAgICBsaW5lLWhlaWdodDogMS40MyxcclxuICAgICksXHJcbiAgICBcImxhcmdlXCI6IChcclxuICAgICAgZm9udC1zaXplOiAxOHB4LFxyXG4gICAgICBsaW5lLWhlaWdodDogMS40MyxcclxuICAgICksXHJcbiAgKSxcclxuICBcImxcIjogKFxyXG4gICAgXCJzbWFsbFwiOiAoXHJcbiAgICAgIGZvbnQtc2l6ZTogMThweCxcclxuICAgICksXHJcbiAgKSxcclxuICBcIm1cIjogKFxyXG4gICAgXCJzbWFsbFwiOiAoXHJcbiAgICAgIGZvbnQtc2l6ZTogMTZweCxcclxuICAgICksXHJcbiAgKSxcclxuICBcInNcIjogKFxyXG4gICAgXCJzbWFsbFwiOiAoXHJcbiAgICAgIGZvbnQtc2l6ZTogMTJweCxcclxuICAgICksXHJcbiAgKSxcclxuICBcInhzXCI6IChcclxuICAgIFwic21hbGxcIjogKFxyXG4gICAgICBmb250LXNpemU6IDExcHgsXHJcbiAgICApLFxyXG4gICksXHJcbik7XHJcbiIsIi8vLyBDZW50ZXIgYmxvY2tcclxuQG1peGluIGNlbnRlci1ibG9jayB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG5AbWl4aW4gZm9udC1zbW9vdGhpbmcoKSB7XHJcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7ICAgLy8gZm9yIG1hY09TXHJcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsgICAgLy8gZm9yIG1hY09TXHJcbn1cclxuXHJcbkBtaXhpbiBmb250LWZhbWlseSgkZm9udDogJGZvbnRfX21haW4pIHtcclxuICBmb250LWZhbWlseTogJGZvbnRfX21haW47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgZm9udCBzY2FsZSB3aXRoIG1lZGlhIHF1ZXJ5IGFzIHBlciBjb25maWd1cmF0aW9uIG9uICRib2R5LXRleHRcclxuICogRXg6IEBpbmNsdWRlIGJvZHktdGV4dCggaDEgKTtcclxuICogVGhpcyB3aWxsIGFkZCBmb250LXNpemUgYW5kIGxpbmUtaGVpZ2h0IHdpdGggZGlmZmVyZW50IGJyZWFrcG9pbnRzLlxyXG4gKi9cclxuQG1peGluIGJvZHktdGV4dCgkbGV2ZWw6IG5vcm1hbCwgJGJvZHktdGV4dDogJGJvZHktdGV4dCwgJGRldmljZS1zaXplOiBmYWxzZSkge1xyXG4gIEBpZiB0eXBlLW9mKCRib2R5LXRleHQpICE9IFwibWFwXCIge1xyXG4gICAgQGVycm9yIFwiYCN7JGJvZHktdGV4dH1gIGlzIG5vdCBhIHZhbGlkIHZhbHVlIGZvciAkdmFsdWVzLiBJdCBtdXN0IGJlIGEgbGlzdC5cIjtcclxuICB9XHJcblxyXG4gICRzaXplOiBtYXBfZ2V0KCRib2R5LXRleHQsICRsZXZlbCk7XHJcblxyXG4gIEBpZiB0eXBlLW9mKCRzaXplKSA9PSBcIm1hcFwiIHtcclxuICAgIEBpZiAkZGV2aWNlLXNpemUgPT0gZmFsc2Uge1xyXG4gICAgICBAZWFjaCAkZGV2aWNlLCAkdmFsdWVzIGluICRzaXplIHtcclxuICAgICAgICBAaWYgJGRldmljZSAhPSBcInNtYWxsXCIge1xyXG4gICAgICAgICAgQGluY2x1ZGUgbXEoJGZyb206ICRkZXZpY2UpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBtYXBfZ2V0KCR2YWx1ZXMsIFwiZm9udC1zaXplXCIpO1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogbWFwX2dldCgkdmFsdWVzLCBcImxpbmUtaGVpZ2h0XCIpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gQGVsc2Uge1xyXG4gICAgICAgICAgZm9udC1zaXplOiBtYXBfZ2V0KCR2YWx1ZXMsIFwiZm9udC1zaXplXCIpO1xyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IG1hcF9nZXQoJHZhbHVlcywgXCJsaW5lLWhlaWdodFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICAkZGV2aWNlX3ZhbHVlczogbWFwX2dldCgkc2l6ZSwgJGRldmljZS1zaXplKTtcclxuXHJcbiAgICAgIGZvbnQtc2l6ZTogbWFwX2dldCgkZGV2aWNlX3ZhbHVlcywgXCJmb250LXNpemVcIik7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiBtYXBfZ2V0KCRkZXZpY2VfdmFsdWVzLCBcImxpbmUtaGVpZ2h0XCIpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIvKiBFbnRyeSBtZXRhICovXHJcbi51cGRhdGVkOm5vdCgucHVibGlzaGVkKSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdENvbG9ycyBWYXJpYWJsZXNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0Q29sb3JzIFZhcmlhYmxlc1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRPcGFjaXR5XG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdEdyYWRpZW50XG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdEVsZW1lbnQgQ29sb3JzXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdEJvcmRlciBDb2xvcnNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLVxuXHRcdEZvbnRcbi0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdEJvZHkgVGV4dCBGb250IFNpemVzXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIEFkZCBmb250IHNjYWxlIHdpdGggbWVkaWEgcXVlcnkgYXMgcGVyIGNvbmZpZ3VyYXRpb24gb24gJGJvZHktdGV4dFxuICogRXg6IEBpbmNsdWRlIGJvZHktdGV4dCggaDEgKTtcbiAqIFRoaXMgd2lsbCBhZGQgZm9udC1zaXplIGFuZCBsaW5lLWhlaWdodCB3aXRoIGRpZmZlcmVudCBicmVha3BvaW50cy5cbiAqL1xuLyogRW50cnkgbWV0YSAqL1xuLnVwZGF0ZWQ6bm90KC5wdWJsaXNoZWQpIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogUGFnaW5hdGlvbiAqL1xuLnBhZ2UtbnVtYmVycy5jdXJyZW50ID4gc3BhbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdEFjY2Vzc2libGl0eVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qIFRleHQgbWVhbnQgb25seSBmb3Igc2NyZWVuIHJlYWRlcnMuICovXG4uc2NyZWVuLXJlYWRlci10ZXh0IHtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG4gIGNsaXAtcGF0aDogaW5zZXQoNTAlKTtcbiAgaGVpZ2h0OiAxcHg7XG4gIGxlZnQ6IC05OTllbTtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIHdvcmQtd3JhcDogbm9ybWFsO1xufVxuLnNjcmVlbi1yZWFkZXItdGV4dDpmb2N1cyB7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm94LXNoYWRvdzogMCAwIDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjYpO1xuICBjbGlwOiBhdXRvO1xuICBjbGlwLXBhdGg6IG5vbmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDFlbTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBsZWZ0OiA1cHg7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG4gIHBhZGRpbmc6IDE1cHggMjNweCAxNHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRvcDogNXB4O1xuICB3aWR0aDogYXV0bztcbiAgei1pbmRleDogMTAwMDAwOyAvKiBBYm92ZSBXUCB0b29sYmFyLiAqL1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdEFsaWdubWVudHNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ubGVmdCB7XG4gIGZsb2F0OiBsZWZ0O1xufVxuXG4ucmlnaHQge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi50ZXh0LWxlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnRleHQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbi50ZXh0LWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi50ZXh0LWp1c3RpZnkge1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdE90aGVyc1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi5oaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmhpZGRlbiB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cblxuLnZpc2libGUge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xufVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbn1cblxuLyogc3R5bGVsaW50LWRpc2FibGUgKi9cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICAvKiBJbmhlcml0IGJveC1zaXppbmcgdG8gbWFrZSBpdCBlYXNpZXIgdG8gY2hhbmdlIHRoZSBwcm9wZXJ0eSBmb3IgY29tcG9uZW50cyB0aGF0IGxldmVyYWdlIG90aGVyIGJlaGF2aW9yOyBzZWUgaHR0cDovL2Nzcy10cmlja3MuY29tL2luaGVyaXRpbmctYm94LXNpemluZy1wcm9iYWJseS1zbGlnaHRseS1iZXR0ZXItYmVzdC1wcmFjdGljZS8gKi9cbiAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xufVxuXG4vKiBzdHlsZWxpbnQtZW5hYmxlICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogXCJMYXRvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDEuNDM7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIGNvbG9yOiAjNDE0MDQyO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgYm9keSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQzO1xuICB9XG59XG5ib2R5Lm1jZS1jb250ZW50LWJvZHkge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgbWFyZ2luOiAxNXB4O1xufVxuXG5ibG9ja3F1b3RlLFxucSxcbmJsb2NrcXVvdGUud3AtYmxvY2stcXVvdGUge1xuICBxdW90ZXM6IFwiXCIgXCJcIjtcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAjZWVlZWVlO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIG1hcmdpbjogMCAwIDMwcHggMzBweDtcbiAgcGFkZGluZy1sZWZ0OiAxNnB4O1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgLyogc3R5bGVsaW50LWRpc2FibGUgKi9cbiAgLyogc3R5bGVsaW50LWVuYWJsZSAqL1xufVxuYmxvY2txdW90ZSBwLFxucSBwLFxuYmxvY2txdW90ZS53cC1ibG9jay1xdW90ZSBwIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5ibG9ja3F1b3RlIGNpdGUsXG5ibG9ja3F1b3RlIC53cC1ibG9jay1xdW90ZV9fY2l0YXRpb24sXG5xIGNpdGUsXG5xIC53cC1ibG9jay1xdW90ZV9fY2l0YXRpb24sXG5ibG9ja3F1b3RlLndwLWJsb2NrLXF1b3RlIGNpdGUsXG5ibG9ja3F1b3RlLndwLWJsb2NrLXF1b3RlIC53cC1ibG9jay1xdW90ZV9fY2l0YXRpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBtYXJnaW4tdG9wOiAxMnB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuYmxvY2txdW90ZSBwOmxhc3Qtb2YtdHlwZSxcbnEgcDpsYXN0LW9mLXR5cGUsXG5ibG9ja3F1b3RlLndwLWJsb2NrLXF1b3RlIHA6bGFzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbmJsb2NrcXVvdGUuaXMtbGFyZ2UsIGJsb2NrcXVvdGUuaXMtc3R5bGUtbGFyZ2UsXG5xLmlzLWxhcmdlLFxucS5pcy1zdHlsZS1sYXJnZSxcbmJsb2NrcXVvdGUud3AtYmxvY2stcXVvdGUuaXMtbGFyZ2UsXG5ibG9ja3F1b3RlLndwLWJsb2NrLXF1b3RlLmlzLXN0eWxlLWxhcmdlIHtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi8qIFB1bGwgUXVvdGVcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLndwLWJsb2NrLXB1bGxxdW90ZSB7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbi53cC1ibG9jay1wdWxscXVvdGUgYmxvY2txdW90ZSB7XG4gIGJvcmRlci1sZWZ0OiAwO1xuICBib3JkZXItdG9wOiA4cHggc29saWQgI2VlZWVlZTtcbiAgYm9yZGVyLWJvdHRvbTogOHB4IHNvbGlkICNlZWVlZWU7XG4gIHBhZGRpbmc6IDE2cHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXgtd2lkdGg6IDUwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4ud3AtYmxvY2stcHVsbHF1b3RlLmFsaWdubGVmdCBibG9ja3F1b3RlLCAud3AtYmxvY2stcHVsbHF1b3RlLmFsaWducmlnaHQgYmxvY2txdW90ZSB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbi53cC1ibG9jay1wdWxscXVvdGUgaW1nIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi8qIEltYWdlIFN1cHBvcnRcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLndwLWJsb2NrLWltYWdlLnNpemUtbWVkaXVtIGltZywgLndwLWJsb2NrLWltYWdlLnNpemUtdGh1bWJuYWlsIGltZywgLndwLWJsb2NrLWltYWdlLmlzLXJlc2l6ZWQgaW1nIHtcbiAgd2lkdGg6IGF1dG87XG59XG4ud3AtYmxvY2staW1hZ2UgZmlnY2FwdGlvbiB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxuZmlndXJlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5hIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBjb2xvcjogIzAxOTJjYztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiAwLjNzO1xufVxuYTpmb2N1cyB7XG4gIG91dGxpbmU6IDVweCBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjtcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG59XG5hOmhvdmVyLFxuYSBhOmFjdGl2ZSB7XG4gIGNvbG9yOiAjMzU1MTgwO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgb3V0bGluZTogMDtcbn1cblxuc3ViLFxuc3VwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjSEVBRElOR1NcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMzEuNXB4O1xuICBsaW5lLWhlaWdodDogMS4yNztcbn1cblxuaDIge1xuICBmb250LXNpemU6IDMxLjVweDtcbiAgbGluZS1oZWlnaHQ6IDEuMjc7XG59XG5cbmgzIHtcbiAgZm9udC1zaXplOiAyNC41cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjY0O1xufVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMTcuNXB4O1xuICBsaW5lLWhlaWdodDogMS4xNDI7XG59XG5cbmg1IHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMS40Mztcbn1cblxuaDYge1xuICBmb250LXNpemU6IDExLjlweDtcbiAgbGluZS1oZWlnaHQ6IDEuNjgxO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBtYXJnaW46IDEwcHggMDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplbGVnaWJpbGl0eTtcbn1cblxuLyogQnV0dG9uXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi53cC1ibG9jay1idXR0b24gLndwLWJsb2NrLWJ1dHRvbl9fbGluayB7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gIHBhZGRpbmc6IDIwcHggMjRweDtcbn1cbi53cC1ibG9jay1idXR0b24gLndwLWJsb2NrLWJ1dHRvbl9fbGluazpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNjY2NjY2M7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRMaXN0c1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnVsLFxub2wge1xuICBtYXJnaW46IDAgMCAxOHB4IDA7XG59XG51bC5uby1idWxsZXQsXG51bC5uby1idWxsZXQgdWwsXG51bC5uby1idWxsZXQgb2wsXG5vbC5uby1idWxsZXQsXG5vbC5uby1idWxsZXQgdWwsXG5vbC5uby1idWxsZXQgb2wge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbnVsIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwIDAgMTBweCAyNXB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgdWwge1xuICAgIG1hcmdpbjogMCAwIDVweCAwO1xuICB9XG59XG5cbmxpID4gdWwsXG5saSA+IG9sIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgbWFyZ2luLWxlZnQ6IDE4cHg7XG59XG5cbmR0IHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuZGQge1xuICBtYXJnaW46IDAgMjRweCAyNHB4O1xufVxuXG5wOmVtcHR5IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxubGkgPiB1bCxcbmxpID4gb2wge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNUQUJMRVxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnRhYmxlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDhlbSkge1xuICB0YWJsZSB7XG4gICAgbWF4LXdpZHRoOiAzNTBweDtcbiAgfVxufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgIEZvcm0gRmllbGRzXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW5wdXQsXG5idXR0b24sXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9cIiwgc2Fucy1zZXJpZjtcbn1cblxuc2VsZWN0LFxudGV4dGFyZWEsXG5pbnB1dFt0eXBlPXRleHRdLFxuaW5wdXRbdHlwZT1wYXNzd29yZF0sXG5pbnB1dFt0eXBlPWRhdGV0aW1lXSxcbmlucHV0W3R5cGU9ZGF0ZXRpbWUtbG9jYWxdLFxuaW5wdXRbdHlwZT1kYXRlXSxcbmlucHV0W3R5cGU9bW9udGhdLFxuaW5wdXRbdHlwZT10aW1lXSxcbmlucHV0W3R5cGU9d2Vla10sXG5pbnB1dFt0eXBlPW51bWJlcl0sXG5pbnB1dFt0eXBlPWVtYWlsXSxcbmlucHV0W3R5cGU9dXJsXSxcbmlucHV0W3R5cGU9c2VhcmNoXSxcbmlucHV0W3R5cGU9dGVsXSxcbmlucHV0W3R5cGU9Y29sb3JdLFxuLnVuZWRpdGFibGUtaW5wdXQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogMjBweDtcbiAgd2lkdGg6IDIwNnB4O1xuICBwYWRkaW5nOiAxNHB4IDZweDsgLyogYWRqdXN0aW5nIGJvcmRlci1ib3ggZGlmZmVyZW5jZSBvbiBsaXZlIHNpdGUgKi9cbiAgbWFyZ2luOiAwIDAgMTBweDtcbiAgbGluZS1oZWlnaHQ6IDEuNDM7XG4gIGNvbG9yOiAjNTU1NTU1O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2NjY2M7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KTtcbiAgdHJhbnNpdGlvbjogYm9yZGVyIGxpbmVhciAwLjJzLCBib3gtc2hhZG93IGxpbmVhciAwLjJzO1xufVxuXG50ZXh0YXJlYSB7XG4gIGhlaWdodDogYXV0bztcbiAgcGFkZGluZzogNHB4IDZweDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBvdXRsaW5lOiBub25lO1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuc2VsZWN0IHtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgdHJhbnNpdGlvbjogbm9uZTtcbiAgd2lkdGg6IDIyMHB4O1xuICBwYWRkaW5nOiAwIDZweDtcbn1cblxuc2VsZWN0LFxuaW5wdXRbdHlwZT1maWxlXSB7XG4gIGhlaWdodDogMzBweDtcbiAgbGluZS1oZWlnaHQ6IDIuMTU7XG59XG5cbmJ1dHRvbiB7XG4gIG1hcmdpbjogMDtcbn1cblxubGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG5sYWJlbCxcbmlucHV0LFxuYnV0dG9uLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjQzO1xuICBmb250LXdlaWdodDogNDAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgbGFiZWwsXG4gIGlucHV0LFxuICBidXR0b24sXG4gIHNlbGVjdCxcbiAgdGV4dGFyZWEge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMS40MztcbiAgfVxufVxuXG5sYWJlbCxcbnNlbGVjdCxcbmJ1dHRvbixcbmlucHV0W3R5cGU9YnV0dG9uXSxcbmlucHV0W3R5cGU9cmVzZXRdLFxuaW5wdXRbdHlwZT1zdWJtaXRdLFxuaW5wdXRbdHlwZT1yYWRpb10sXG5pbnB1dFt0eXBlPWNoZWNrYm94XSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLFxuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNPVEhFUlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnByZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiA5LjVweDtcbiAgbWFyZ2luOiAwIDAgMTBweDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBsaW5lLWhlaWdodDogMS41NDtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UyZWFlZTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBmb250LWZhbWlseTogXCJMYXRvXCIsIHNhbnMtc2VyaWYsIG1vbm9zcGFjZTtcbn1cblxuY29kZSB7XG4gIHBhZGRpbmc6IDJweCA0cHg7XG4gIGNvbG9yOiAjZDE0O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y5O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTFlMWU4O1xuICBmb250LWZhbWlseTogXCJMYXRvXCIsIHNhbnMtc2VyaWYsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbi8qIFNlcGFyYXRvclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4ud3AtYmxvY2stc2VwYXJhdG9yLFxuaHIge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAyMHB4IDA7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWVlZWU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmZmZmZmO1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbn1cbi53cC1ibG9jay1zZXBhcmF0b3I6bm90KC5pcy1zdHlsZS1kb3RzKSxcbmhyOm5vdCguaXMtc3R5bGUtZG90cykge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWZmM2Y2O1xuICBib3JkZXI6IDA7XG4gIGhlaWdodDogMXB4O1xufVxuLndwLWJsb2NrLXNlcGFyYXRvcjpub3QoLmlzLXN0eWxlLXdpZGUpOm5vdCguaXMtc3R5bGUtZG90cyksXG5ocjpub3QoLmlzLXN0eWxlLXdpZGUpOm5vdCguaXMtc3R5bGUtZG90cykge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA0cHg7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuLndwLWJsb2NrLXNlcGFyYXRvcjpub3QoLmlzLXN0eWxlLXdpZGUpOm5vdCguaXMtc3R5bGUtZG90cyk6OmJlZm9yZSxcbmhyOm5vdCguaXMtc3R5bGUtd2lkZSk6bm90KC5pcy1zdHlsZS1kb3RzKTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogNHB4O1xuICB3aWR0aDogNDBweDtcbiAgYmFja2dyb3VuZDogI2VmZjNmNjtcbn1cbi53cC1ibG9jay1zZXBhcmF0b3IuaXMtc3R5bGUtZG90czo6YmVmb3JlLFxuaHIuaXMtc3R5bGUtZG90czo6YmVmb3JlIHtcbiAgY29sb3I6ICNlZmYzZjY7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDEycHg7XG4gIHBhZGRpbmctbGVmdDogMTJweDtcbn1cblxuLyogbm9ybWFsaXplLmNzcyB2OC4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAgKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAgKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gICovXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAgKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLyoqXG4gICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAgKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICAqL1xubWFyayB7XG4gIGJhY2tncm91bmQ6ICNjY2NjY2M7XG4gIGNvbG9yOiAjMDAwMDAwO1xufVxuXG4vKipcbiAgKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAgKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAgKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLThweDtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtNHB4O1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBGb3Jtc1xuICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAgKi9cbi8qKlxuICAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAgKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAgKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDMgKi9cbn1cblxuLyoqXG4gICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gICovXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAgKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gICovXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAgKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAgKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAgKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9YnV0dG9uXSxcbmlucHV0W3R5cGU9cmVzZXRdLFxuaW5wdXRbdHlwZT1zdWJtaXRdIHtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC8qIDMgKi9cbn1cblxuLyoqXG4gICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAgKi9cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAgKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICAqXG4gICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAgKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICAqL1xuaW5wdXRbdHlwZT1jaGVja2JveF0sXG5pbnB1dFt0eXBlPXJhZGlvXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAgKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICAqL1xuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAgKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAgKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICAqL1xuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAgKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAgKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qKlxuICAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAgKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjY2NjYztcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogNnB4IDEwcHggMTJweDtcbn1cblxuLyoqXG4gICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAgKi9cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAgKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAgKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLyogTm90ZTogVGhpcyBmaWxlIGlzIHVwZGF0ZWQgYnkgU2FnYXIsIFRvIHJlbW92ZSBkdWNwbGljYXRpb24gb2Ygc3R5bGVzLiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi8qLS0tLS0tLS0tLS1cblx0TWVkaWFcbi0tLS0tLS0tLS0tLS0qL1xuLnBhZ2UtY29udGVudCAud3Atc21pbGV5LFxuLmVudHJ5LWNvbnRlbnQgLndwLXNtaWxleSxcbi5jb21tZW50LWNvbnRlbnQgLndwLXNtaWxleSB7XG4gIGJvcmRlcjogbm9uZTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgbWFyZ2luLXRvcDogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyogTWFrZSBzdXJlIGVtYmVkcyBhbmQgaWZyYW1lcyBmaXQgdGhlaXIgY29udGFpbmVycy4gKi9cbmVtYmVkLFxuaWZyYW1lLFxub2JqZWN0IHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4uc2l0ZS1jb250ZW50IHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xufSIsIi8qIFBhZ2luYXRpb24gKi9cclxuLnBhZ2UtbnVtYmVycy5jdXJyZW50ID4gc3BhbiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcclxuICBjb2xvcjogI2ZmZjtcclxufVxyXG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0QWNjZXNzaWJsaXR5XHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4vKiBUZXh0IG1lYW50IG9ubHkgZm9yIHNjcmVlbiByZWFkZXJzLiAqL1xyXG4uc2NyZWVuLXJlYWRlci10ZXh0IHtcclxuICBib3JkZXI6IDA7XHJcbiAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO1xyXG4gIGNsaXAtcGF0aDogaW5zZXQoNTAlKTtcclxuICBoZWlnaHQ6IDFweDtcclxuICBsZWZ0OiAtOTk5ZW07XHJcbiAgbWFyZ2luOiAtMXB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcGFkZGluZzogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDFweDtcclxuICB3b3JkLXdyYXA6IG5vcm1hbDtcclxuXHJcbiAgJjpmb2N1cyB7XHJcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxuICAgIGJveC1zaGFkb3c6IDAgMCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC42KTtcclxuICAgIGNsaXA6IGF1dG87XHJcbiAgICBjbGlwLXBhdGg6IG5vbmU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbGVmdDogNXB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcclxuICAgIHBhZGRpbmc6IDE1cHggMjNweCAxNHB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgdG9wOiA1cHg7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIHotaW5kZXg6IDEwMDAwMDsgLyogQWJvdmUgV1AgdG9vbGJhci4gKi9cclxuICB9XHJcbn1cclxuXHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0XHRBbGlnbm1lbnRzXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4ubGVmdCB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi5yaWdodCB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4udGV4dCB7XHJcbiAgJi1sZWZ0IHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgfVxyXG5cclxuICAmLXJpZ2h0IHtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIH1cclxuXHJcbiAgJi1jZW50ZXIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJi1qdXN0aWZ5IHtcclxuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XHJcbiAgfVxyXG59XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0T3RoZXJzXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4uaGlkZSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLmhpZGRlbiB7XHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG59XHJcblxyXG4udmlzaWJsZSB7XHJcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxufVxyXG4iLCIvLyBTaXRlIHZhcmlhYmxlcy5cclxuXHJcbi8vIERlZmF1bHQgQm9yZGVyIFJhZGl1c1xyXG4kYm9yZGVyLXJhZGl1czogM3B4O1xyXG5cclxuLy8gbXEgYnJlYWtwb2ludHMuXHJcbiRtcS1icmVha3BvaW50czogKFxyXG4gIHNtYWxsOiA2MDBweCxcclxuICBtZWRpdW06IDc2OHB4LFxyXG4gIGxhcmdlOiAxMDI0cHgsXHJcbiAgeGxhcmdlOiAxMjQwcHgsXHJcbikgIWRlZmF1bHQ7XHJcbiIsImh0bWwge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XHJcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xyXG59XHJcblxyXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSAqL1xyXG4qLFxyXG4qOmJlZm9yZSxcclxuKjphZnRlciB7XHJcbiAgLyogSW5oZXJpdCBib3gtc2l6aW5nIHRvIG1ha2UgaXQgZWFzaWVyIHRvIGNoYW5nZSB0aGUgcHJvcGVydHkgZm9yIGNvbXBvbmVudHMgdGhhdCBsZXZlcmFnZSBvdGhlciBiZWhhdmlvcjsgc2VlIGh0dHA6Ly9jc3MtdHJpY2tzLmNvbS9pbmhlcml0aW5nLWJveC1zaXppbmctcHJvYmFibHktc2xpZ2h0bHktYmV0dGVyLWJlc3QtcHJhY3RpY2UvICovXHJcbiAgYm94LXNpemluZzogaW5oZXJpdDtcclxuXHJcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xyXG59XHJcbi8qIHN0eWxlbGludC1lbmFibGUgKi9cclxuXHJcbmJvZHkge1xyXG4gIG1hcmdpbjogMDtcclxuXHJcbiAgQGluY2x1ZGUgZm9udC1mYW1pbHkoKTtcclxuICBAaW5jbHVkZSBib2R5LXRleHQoYm9keSk7XHJcblxyXG4gIGJhY2tncm91bmQ6ICRjb2xvcl9fYmFja2dyb3VuZC1ib2R5O1xyXG4gIGNvbG9yOiAkY29sb3JfX2JvZHktdGV4dDtcclxuXHJcbiAgLy8gV1AgRWRpdG9yXHJcbiAgJi5tY2UtY29udGVudC1ib2R5IHtcclxuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgbWFyZ2luOiAxNXB4O1xyXG4gIH1cclxufVxyXG5cclxuYmxvY2txdW90ZSxcclxucSxcclxuYmxvY2txdW90ZS53cC1ibG9jay1xdW90ZSB7XHJcbiAgcXVvdGVzOiBcIlwiIFwiXCI7XHJcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAkZ3JheS0xNTA7XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gIG1hcmdpbjogMCAwICRmb250X19iYXNlLWxpbmUtaGVpZ2h0ICRmb250X19iYXNlLWxpbmUtaGVpZ2h0O1xyXG4gIHBhZGRpbmctbGVmdDogMTZweDtcclxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxuICBwIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgfVxyXG5cclxuICAvKiBzdHlsZWxpbnQtZGlzYWJsZSAqL1xyXG4gIGNpdGUsXHJcbiAgLndwLWJsb2NrLXF1b3RlX19jaXRhdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICB9XHJcbiAgLyogc3R5bGVsaW50LWVuYWJsZSAqL1xyXG5cclxuICBwOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIH1cclxuXHJcbiAgJi5pcy1sYXJnZSxcclxuICAmLmlzLXN0eWxlLWxhcmdlIHtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gIH1cclxufVxyXG5cclxuLyogUHVsbCBRdW90ZVxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLndwLWJsb2NrLXB1bGxxdW90ZSB7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHJcbiAgYmxvY2txdW90ZSB7XHJcbiAgICBib3JkZXItbGVmdDogMDtcclxuICAgIGJvcmRlci10b3A6IDhweCBzb2xpZCAkZ3JheS0xNTA7XHJcbiAgICBib3JkZXItYm90dG9tOiA4cHggc29saWQgJGdyYXktMTUwO1xyXG4gICAgcGFkZGluZzogMTZweCAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWF4LXdpZHRoOiA1MCU7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICB9XHJcblxyXG4gICYuYWxpZ25sZWZ0LFxyXG4gICYuYWxpZ25yaWdodCB7XHJcbiAgICBibG9ja3F1b3RlIHtcclxuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaW1nIHtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgfVxyXG59XHJcblxyXG4vKiBJbWFnZSBTdXBwb3J0XHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4ud3AtYmxvY2staW1hZ2Uge1xyXG4gICYuc2l6ZS1tZWRpdW0sXHJcbiAgJi5zaXplLXRodW1ibmFpbCxcclxuICAmLmlzLXJlc2l6ZWQge1xyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmaWdjYXB0aW9uIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgfVxyXG59XHJcblxyXG5maWd1cmUge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG5cclxuYSB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGNvbG9yOiAkY29sb3JfX2xpbms7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIHRyYW5zaXRpb246IDAuM3M7XHJcblxyXG4gICY6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xyXG4gICAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XHJcbiAgfVxyXG5cclxuICAmOmhvdmVyLFxyXG4gIGE6YWN0aXZlIHtcclxuICAgIGNvbG9yOiAkY29sb3JfX2xpbmstaG92ZXI7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgfVxyXG59XHJcblxyXG5zdWIsXHJcbnN1cCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGZvbnQtc2l6ZTogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuc3VwIHtcclxuICB0b3A6IC0wLjVlbTtcclxufVxyXG5cclxuc3ViIHtcclxuICBib3R0b206IC0wLjI1ZW07XHJcbn1cclxuXHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXHJcbiAgICAjSEVBRElOR1NcclxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbmgxIHtcclxuICBAaW5jbHVkZSBib2R5LXRleHQoaDEpO1xyXG59XHJcblxyXG5oMiB7XHJcbiAgQGluY2x1ZGUgYm9keS10ZXh0KGgyKTtcclxufVxyXG5cclxuaDMge1xyXG4gIEBpbmNsdWRlIGJvZHktdGV4dChoMyk7XHJcbn1cclxuXHJcbmg0IHtcclxuICBAaW5jbHVkZSBib2R5LXRleHQoaDQpO1xyXG59XHJcblxyXG5oNSB7XHJcbiAgQGluY2x1ZGUgYm9keS10ZXh0KGg1KTtcclxufVxyXG5cclxuaDYge1xyXG4gIEBpbmNsdWRlIGJvZHktdGV4dChoNik7XHJcbn1cclxuXHJcbmgxLFxyXG5oMixcclxuaDMsXHJcbmg0LFxyXG5oNSxcclxuaDYge1xyXG4gIG1hcmdpbjogMTBweCAwO1xyXG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZWxlZ2liaWxpdHk7XHJcbn1cclxuXHJcbi8qIEJ1dHRvblxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbi53cC1ibG9jay1idXR0b24ge1xyXG4gIC53cC1ibG9jay1idXR0b25fX2xpbmsge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMThweDtcclxuICAgIHBhZGRpbmc6IDIwcHggMjRweDtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZDogJGdyYXktMjAwO1xyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdFx0TGlzdHNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbnVsLFxyXG5vbCB7XHJcbiAgbWFyZ2luOiAwIDAgMThweCAwO1xyXG5cclxuICAmLm5vLWJ1bGxldCB7XHJcbiAgICAmLFxyXG4gICAgdWwsXHJcbiAgICBvbCB7XHJcbiAgICAgIG1hcmdpbjogMDtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbnVsIHtcclxuICBwYWRkaW5nOiAwO1xyXG4gIG1hcmdpbjogMCAwIDEwcHggMjVweDtcclxuXHJcbiAgQGluY2x1ZGUgbXEobWVkaXVtKSB7XHJcbiAgICBtYXJnaW46IDAgMCA1cHggMDtcclxuICB9XHJcbn1cclxuXHJcbmxpID4gdWwsXHJcbmxpID4gb2wge1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE4cHg7XHJcbn1cclxuXHJcbmR0IHtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG59XHJcblxyXG5kZCB7XHJcbiAgbWFyZ2luOiAwIDI0cHggMjRweDtcclxufVxyXG5cclxucCB7XHJcbiAgJjplbXB0eSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufVxyXG5cclxubGkgPiB1bCxcclxubGkgPiBvbCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcclxuICAgICNUQUJMRVxyXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxudGFibGUge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xyXG5cclxuICBAaW5jbHVkZSBtcShtZWRpdW0pIHtcclxuICAgIG1heC13aWR0aDogMzUwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxyXG4gICAgRm9ybSBGaWVsZHNcclxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbmlucHV0LFxyXG5idXR0b24sXHJcbnNlbGVjdCxcclxudGV4dGFyZWEge1xyXG4gIGZvbnQtZmFtaWx5OiAkZm9udF9fbWFpbjtcclxufVxyXG5cclxuc2VsZWN0LFxyXG50ZXh0YXJlYSxcclxuaW5wdXRbdHlwZT1cInRleHRcIl0sXHJcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcclxuaW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdLFxyXG5pbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0sXHJcbmlucHV0W3R5cGU9XCJkYXRlXCJdLFxyXG5pbnB1dFt0eXBlPVwibW9udGhcIl0sXHJcbmlucHV0W3R5cGU9XCJ0aW1lXCJdLFxyXG5pbnB1dFt0eXBlPVwid2Vla1wiXSxcclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcclxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxyXG5pbnB1dFt0eXBlPVwidXJsXCJdLFxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdLFxyXG5pbnB1dFt0eXBlPVwidGVsXCJdLFxyXG5pbnB1dFt0eXBlPVwiY29sb3JcIl0sXHJcbi51bmVkaXRhYmxlLWlucHV0IHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIHdpZHRoOiAyMDZweDtcclxuICBwYWRkaW5nOiAxNHB4IDZweDsgLyogYWRqdXN0aW5nIGJvcmRlci1ib3ggZGlmZmVyZW5jZSBvbiBsaXZlIHNpdGUgKi9cclxuICBtYXJnaW46IDAgMCAxMHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjQzO1xyXG4gIGNvbG9yOiAkZ3JheS0zMDA7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LTIwMDtcclxuICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggJG9wYWNpdHktYmxhY2stMDc1O1xyXG4gIHRyYW5zaXRpb246IGJvcmRlciBsaW5lYXIgMC4ycywgYm94LXNoYWRvdyBsaW5lYXIgMC4ycztcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gIGhlaWdodDogYXV0bztcclxuICBwYWRkaW5nOiA0cHggNnB4O1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIG92ZXJmbG93OiBhdXRvOyAvLyBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cclxufVxyXG5cclxuc2VsZWN0IHtcclxuICBib3gtc2hhZG93OiBub25lO1xyXG4gIHRyYW5zaXRpb246IG5vbmU7XHJcbiAgd2lkdGg6IDIyMHB4O1xyXG4gIHBhZGRpbmc6IDAgNnB4O1xyXG59XHJcblxyXG5zZWxlY3QsXHJcbmlucHV0W3R5cGU9XCJmaWxlXCJdIHtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDIuMTU7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5sYWJlbCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG59XHJcblxyXG5sYWJlbCxcclxuaW5wdXQsXHJcbmJ1dHRvbixcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgQGluY2x1ZGUgYm9keS10ZXh0KGJvZHkpO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbn1cclxuXHJcbmxhYmVsLFxyXG5zZWxlY3QsXHJcbmJ1dHRvbixcclxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcclxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxyXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdLFxyXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0sXHJcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLFxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXHJcbiAgICAjT1RIRVJcclxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbnByZSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgcGFkZGluZzogOS41cHg7XHJcbiAgbWFyZ2luOiAwIDAgMTBweDtcclxuICBmb250LXNpemU6IDEzcHg7IC8vIEV4Y2VwdGlvbmFsIGZvbnQtc2l6ZS5cclxuICBsaW5lLWhlaWdodDogMS41NDtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS0xNjA7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJG9wYWNpdHktYmxhY2stMDE1O1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBmb250LWZhbWlseTogJGZvbnRfX2NvZGU7XHJcbn1cclxuXHJcbmNvZGUge1xyXG4gIHBhZGRpbmc6IDJweCA0cHg7XHJcbiAgY29sb3I6ICNkMTQ7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y5O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMWUxZTg7XHJcbiAgZm9udC1mYW1pbHk6ICRmb250X19jb2RlO1xyXG4gIEBpbmNsdWRlIGJvZHktdGV4dChzKTtcclxuICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbn1cclxuXHJcbi8qIFNlcGFyYXRvclxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbi53cC1ibG9jay1zZXBhcmF0b3IsXHJcbmhyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW46IDIwcHggMDtcclxuICBib3JkZXI6IDA7XHJcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRjb2xvcl9fYmFja2dyb3VuZC1ocjtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHdoaXRlO1xyXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG4gICY6bm90KC5pcy1zdHlsZS1kb3RzKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS0xMDA7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBoZWlnaHQ6IDFweDtcclxuICB9XHJcblxyXG4gICY6bm90KC5pcy1zdHlsZS13aWRlKTpub3QoLmlzLXN0eWxlLWRvdHMpIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA0cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgaGVpZ2h0OiA0cHg7XHJcbiAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kOiAkZ3JheS0xMDA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLmlzLXN0eWxlLWRvdHM6OmJlZm9yZSB7XHJcbiAgICBjb2xvcjogJGdyYXktMTAwO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDEycHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEycHg7XHJcbiAgfVxyXG59XHJcbiIsIkB1c2UgJ3Nhc3M6bWF0aCc7XG5AdXNlICdzYXNzOm1hcCc7XG5AdXNlICdzYXNzOmxpc3QnO1xuXG4vLy8gQnJlYWtwb2ludCBsaXN0XG4vLy9cbi8vLyBOYW1lIHlvdXIgYnJlYWtwb2ludHMgaW4gYSB3YXkgdGhhdCBjcmVhdGVzIGEgdWJpcXVpdG91cyBsYW5ndWFnZVxuLy8vIGFjcm9zcyB0ZWFtIG1lbWJlcnMuIEl0IHdpbGwgaW1wcm92ZSBjb21tdW5pY2F0aW9uIGJldHdlZW5cbi8vLyBzdGFrZWhvbGRlcnMsIGRlc2lnbmVycywgZGV2ZWxvcGVycywgYW5kIHRlc3RlcnMuXG4vLy9cbi8vLyBAdHlwZSBNYXBcbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI3NlZWluZy10aGUtY3VycmVudGx5LWFjdGl2ZS1icmVha3BvaW50IEZ1bGwgZG9jdW1lbnRhdGlvbiBhbmQgZXhhbXBsZXNcbiRicmVha3BvaW50czogKFxuICBtb2JpbGU6IDMyMHB4LFxuICB0YWJsZXQ6IDc0MHB4LFxuICBkZXNrdG9wOiA5ODBweCxcbiAgd2lkZTogMTMwMHB4LFxuKSAhZGVmYXVsdDtcblxuLy8vIFNob3cgYnJlYWtwb2ludHMgaW4gdGhlIHRvcCByaWdodCBjb3JuZXJcbi8vL1xuLy8vIElmIHlvdSB3YW50IHRvIGRpc3BsYXkgdGhlIGN1cnJlbnRseSBhY3RpdmUgYnJlYWtwb2ludCBpbiB0aGUgdG9wXG4vLy8gcmlnaHQgY29ybmVyIG9mIHlvdXIgc2l0ZSBkdXJpbmcgZGV2ZWxvcG1lbnQsIGFkZCB0aGUgYnJlYWtwb2ludHNcbi8vLyB0byB0aGlzIGxpc3QsIG9yZGVyZWQgYnkgd2lkdGguIEZvciBleGFtcGxlOiAobW9iaWxlLCB0YWJsZXQsIGRlc2t0b3ApLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAgQHVzZSAncGF0aC90by9tcScgd2l0aCAoJHNob3ctYnJlYWtwb2ludHM6ICgnbW9iaWxlJywgJ3RhYmxldCcsICdkZXNrdG9wJykpO1xuLy8vXG4vLy9cbi8vLyBAdHlwZSBtYXBcbiRzaG93LWJyZWFrcG9pbnRzOiAoKSAhZGVmYXVsdDtcblxuLy8vIEN1c3RvbWl6ZSB0aGUgbWVkaWEgdHlwZSAoZm9yIGV4YW1wbGU6IGBAbWVkaWEgc2NyZWVuYCBvciBgQG1lZGlhIHByaW50YClcbi8vLyBCeSBkZWZhdWx0IHNhc3MtbXEgdXNlcyBhbiBcImFsbFwiIG1lZGlhIHR5cGUgKGBAbWVkaWEgYWxsIGFuZCDigKZgKVxuLy8vXG4vLy8gSWYgeW91IHdhbnQgdG8gb3ZlcnJpZWQgdGhlIG1lZGlhIHR5cGUsIHlvdSBjYW4gdXNlIHRoaXMgb3B0aW9uLlxuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgIEB1c2UgJ3BhdGgvdG8vbXEnIHdpdGggKCRtZWRpYS10eXBlOiAnc2NyZWVuJyk7XG4vLy9cbi8vLyBAdHlwZSBTdHJpbmdcbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI2NoYW5naW5nLW1lZGlhLXR5cGUgRnVsbCBkb2N1bWVudGF0aW9uIGFuZCBleGFtcGxlXG4kbWVkaWEtdHlwZTogYWxsICFkZWZhdWx0O1xuXG4vLy8gQ29udmVydCBwaXhlbHMgdG8gZW1zXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJHB4IC0gdmFsdWUgdG8gY29udmVydFxuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAkZm9udC1zaXplLWluLWVtczogcHgyZW0oMTZweCk7XG4vLy8gIHAgeyBmb250LXNpemU6IHB4MmVtKDE2cHgpOyB9XG4vLy9cbi8vLyBAcmV0dXJucyB7TnVtYmVyfVxuXG5AZnVuY3Rpb24gcHgyZW0oJHB4KSB7XG4gIEBpZiBtYXRoLmlzLXVuaXRsZXNzKCRweCkge1xuICAgIEB3YXJuIFwiQXNzdW1pbmcgI3skcHh9IHRvIGJlIGluIHBpeGVscywgYXR0ZW1wdGluZyB0byBjb252ZXJ0IGl0IGludG8gcGl4ZWxzLlwiO1xuICAgIEByZXR1cm4gcHgyZW0oJHB4ICogMXB4KTtcbiAgfVxuICAvLyBpZiAkcHggaXMgY29tcGF0aWJsZSB3aXRoIGVtIHVuaXRzLCB0aGVuIHJldHVybiB2YWx1ZSB1bmNoYW5nZWRcbiAgQGlmIG1hdGguY29tcGF0aWJsZSgkcHgsIDFlbSkge1xuICAgIEByZXR1cm4gJHB4O1xuICB9XG4gIEByZXR1cm4gbWF0aC5kaXYoJHB4LCAxNnB4KSAqIDFlbTtcbn1cblxuLy8vIEdldCBhIGJyZWFrcG9pbnQncyB3aWR0aFxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRuYW1lIC0gTmFtZSBvZiB0aGUgYnJlYWtwb2ludC4gT25lIG9mICRicmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAkdGFibGV0LXdpZHRoOiBnZXQtYnJlYWtwb2ludC13aWR0aCh0YWJsZXQpO1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogZ2V0LWJyZWFrcG9pbnQtd2lkdGgodGFibGV0KSkge31cbi8vL1xuLy8vIEByZXF1aXJlcyB7VmFyaWFibGV9ICRicmVha3BvaW50c1xuLy8vXG4vLy8gQHJldHVybnMge051bWJlcn0gVmFsdWUgaW4gcGl4ZWxzXG5AZnVuY3Rpb24gZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJG5hbWUsICRicmVha3BvaW50czogJGJyZWFrcG9pbnRzKSB7XG4gIEBpZiBtYXAuaGFzLWtleSgkYnJlYWtwb2ludHMsICRuYW1lKSB7XG4gICAgQHJldHVybiBtYXAuZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICB9IEBlbHNlIHtcbiAgICBAd2FybiBcIkJyZWFrcG9pbnQgI3skbmFtZX0gd2Fzbid0IGZvdW5kIGluICRicmVha3BvaW50cy5cIjtcbiAgICBAcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuLy8vIE1lZGlhIFF1ZXJ5IG1peGluXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZyB8IEJvb2xlYW59ICRmcm9tIFtmYWxzZV0gLSBPbmUgb2YgJGJyZWFrcG9pbnRzXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBCb29sZWFufSAkdW50aWwgW2ZhbHNlXSAtIE9uZSBvZiAkYnJlYWtwb2ludHNcbi8vLyBAcGFyYW0ge1N0cmluZyB8IEJvb2xlYW59ICRhbmQgW2ZhbHNlXSAtIEFkZGl0aW9uYWwgbWVkaWEgcXVlcnkgcGFyYW1ldGVyc1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVkaWEtdHlwZSBbJG1lZGlhLXR5cGVdIC0gTWVkaWEgdHlwZTogc2NyZWVuLCBwcmludOKAplxuLy8vXG4vLy8gQGlnbm9yZSBVbmRvY3VtZW50ZWQgQVBJLCBmb3IgYWR2YW5jZWQgdXNlIG9ubHk6XG4vLy8gQGlnbm9yZSBAcGFyYW0ge01hcH0gJGJyZWFrcG9pbnRzIFskYnJlYWtwb2ludHNdXG4vLy9cbi8vLyBAY29udGVudCBzdHlsaW5nIHJ1bGVzLCB3cmFwcGVkIGludG8gYSBAbWVkaWEgcXVlcnkgd2hlbiAkcmVzcG9uc2l2ZSBpcyB0cnVlXG4vLy9cbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkbWVkaWEtdHlwZVxuLy8vIEByZXF1aXJlcyB7VmFyaWFibGV9ICRicmVha3BvaW50c1xuLy8vIEByZXF1aXJlcyB7ZnVuY3Rpb259IHB4MmVtXG4vLy8gQHJlcXVpcmVzIHtmdW5jdGlvbn0gZ2V0LWJyZWFrcG9pbnQtd2lkdGhcbi8vL1xuLy8vIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9zYXNzLW1xL3Nhc3MtbXEjcmVzcG9uc2l2ZS1tb2RlLW9uLWRlZmF1bHQgRnVsbCBkb2N1bWVudGF0aW9uIGFuZCBleGFtcGxlc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICBAdXNlICdwYXRoL3RvL21xJyBhcyAqO1xuLy8vICAuZWxlbWVudCB7XG4vLy8gICAgQGluY2x1ZGUgbXEoJGZyb206IG1vYmlsZSkge1xuLy8vICAgICAgY29sb3I6IHJlZDtcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEoJHVudGlsOiB0YWJsZXQpIHtcbi8vLyAgICAgIGNvbG9yOiBibHVlO1xuLy8vICAgIH1cbi8vLyAgICBAaW5jbHVkZSBtcShtb2JpbGUsIHRhYmxldCkge1xuLy8vICAgICAgY29sb3I6IGdyZWVuO1xuLy8vICAgIH1cbi8vLyAgICBAaW5jbHVkZSBtcSgkZnJvbTogdGFibGV0LCAkYW5kOiAnKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpJykge1xuLy8vICAgICAgY29sb3I6IHRlYWw7XG4vLy8gICAgfVxuLy8vICAgIEBpbmNsdWRlIG1xKDk1MHB4KSB7XG4vLy8gICAgICBjb2xvcjogaG90cGluaztcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEodGFibGV0LCAkbWVkaWEtdHlwZTogc2NyZWVuKSB7XG4vLy8gICAgICBjb2xvcjogaG90cGluaztcbi8vLyAgICB9XG4vLy8gICAgLy8gQWR2YW5jZWQgdXNlOlxuLy8vICAgICRteS1icmVha3BvaW50czogKEw6IDkwMHB4LCBYTDogMTIwMHB4KTtcbi8vLyAgICBAaW5jbHVkZSBtcShMLCAkYnJlYWtwb2ludHM6ICRteS1icmVha3BvaW50cykge1xuLy8vICAgICAgY29sb3I6IGhvdHBpbms7XG4vLy8gICAgfVxuLy8vICB9XG5AbWl4aW4gbXEoXG4gICRmcm9tOiBmYWxzZSxcbiAgJHVudGlsOiBmYWxzZSxcbiAgJGFuZDogZmFsc2UsXG4gICRtZWRpYS10eXBlOiAkbWVkaWEtdHlwZSxcbiAgJGJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHNcbikge1xuICAkbWluLXdpZHRoOiAwO1xuICAkbWF4LXdpZHRoOiAwO1xuICAkbWVkaWEtcXVlcnk6ICcnO1xuXG4gIC8vIEZyb206IHRoaXMgYnJlYWtwb2ludCAoaW5jbHVzaXZlKVxuICBAaWYgJGZyb20ge1xuICAgIEBpZiB0eXBlLW9mKCRmcm9tKSA9PSBudW1iZXIge1xuICAgICAgJG1pbi13aWR0aDogcHgyZW0oJGZyb20pO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJG1pbi13aWR0aDogcHgyZW0oZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJGZyb20sICRicmVha3BvaW50cykpO1xuICAgIH1cbiAgfVxuXG4gIC8vIFVudGlsOiB0aGF0IGJyZWFrcG9pbnQgKGV4Y2x1c2l2ZSlcbiAgQGlmICR1bnRpbCB7XG4gICAgQGlmIHR5cGUtb2YoJHVudGlsKSA9PSBudW1iZXIge1xuICAgICAgJG1heC13aWR0aDogcHgyZW0oJHVudGlsKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRtYXgtd2lkdGg6IHB4MmVtKGdldC1icmVha3BvaW50LXdpZHRoKCR1bnRpbCwgJGJyZWFrcG9pbnRzKSkgLSAwLjAxZW07XG4gICAgfVxuICB9XG5cbiAgQGlmICRtaW4td2lkdGggIT0gMCB7XG4gICAgJG1lZGlhLXF1ZXJ5OiAnI3skbWVkaWEtcXVlcnl9IGFuZCAobWluLXdpZHRoOiAjeyRtaW4td2lkdGh9KSc7XG4gIH1cbiAgQGlmICRtYXgtd2lkdGggIT0gMCB7XG4gICAgJG1lZGlhLXF1ZXJ5OiAnI3skbWVkaWEtcXVlcnl9IGFuZCAobWF4LXdpZHRoOiAjeyRtYXgtd2lkdGh9KSc7XG4gIH1cbiAgQGlmICRhbmQge1xuICAgICRtZWRpYS1xdWVyeTogJyN7JG1lZGlhLXF1ZXJ5fSBhbmQgI3skYW5kfSc7XG4gIH1cblxuICAvLyBSZW1vdmUgdW5uZWNlc3NhcnkgbWVkaWEgcXVlcnkgcHJlZml4ICdhbGwgYW5kICdcbiAgQGlmICgkbWVkaWEtdHlwZSA9PSAnYWxsJyBhbmQgJG1lZGlhLXF1ZXJ5ICE9ICcnKSB7XG4gICAgJG1lZGlhLXR5cGU6ICcnO1xuICAgICRtZWRpYS1xdWVyeTogc3RyLXNsaWNlKHVucXVvdGUoJG1lZGlhLXF1ZXJ5KSwgNik7XG4gIH1cblxuICBAbWVkaWEgI3skbWVkaWEtdHlwZSArICRtZWRpYS1xdWVyeX0ge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBRdWljayBzb3J0XG4vLy9cbi8vLyBAYXV0aG9yIFNhbSBSaWNoYXJkc1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSB7TGlzdH0gJGxpc3QgLSBMaXN0IHRvIHNvcnRcbi8vLyBAcmV0dXJucyB7TGlzdH0gU29ydGVkIExpc3RcbkBmdW5jdGlvbiBfcXVpY2stc29ydCgkbGlzdCkge1xuICAkbGVzczogKCk7XG4gICRlcXVhbDogKCk7XG4gICRsYXJnZTogKCk7XG5cbiAgQGlmIGxlbmd0aCgkbGlzdCkgPiAxIHtcbiAgICAkc2VlZDogbGlzdC5udGgoJGxpc3QsIG1hdGguY2VpbChtYXRoLmRpdihsZW5ndGgoJGxpc3QpLCAyKSkpO1xuXG4gICAgQGVhY2ggJGl0ZW0gaW4gJGxpc3Qge1xuICAgICAgQGlmICgkaXRlbSA9PSAkc2VlZCkge1xuICAgICAgICAkZXF1YWw6IGxpc3QuYXBwZW5kKCRlcXVhbCwgJGl0ZW0pO1xuICAgICAgfSBAZWxzZSBpZiAoJGl0ZW0gPCAkc2VlZCkge1xuICAgICAgICAkbGVzczogbGlzdC5hcHBlbmQoJGxlc3MsICRpdGVtKTtcbiAgICAgIH0gQGVsc2UgaWYgKCRpdGVtID4gJHNlZWQpIHtcbiAgICAgICAgJGxhcmdlOiBsaXN0LmFwcGVuZCgkbGFyZ2UsICRpdGVtKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBAcmV0dXJuIGpvaW4oam9pbihfcXVpY2stc29ydCgkbGVzcyksICRlcXVhbCksIF9xdWljay1zb3J0KCRsYXJnZSkpO1xuICB9XG5cbiAgQHJldHVybiAkbGlzdDtcbn1cblxuLy8vIFNvcnQgYSBtYXAgYnkgdmFsdWVzICh3b3JrcyB3aXRoIG51bWJlcnMgb25seSlcbi8vL1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSB7TWFwfSAkbWFwIC0gTWFwIHRvIHNvcnRcbi8vLyBAcmV0dXJucyB7TWFwfSBNYXAgc29ydGVkIGJ5IHZhbHVlXG5AZnVuY3Rpb24gX21hcC1zb3J0LWJ5LXZhbHVlKCRtYXApIHtcbiAgJG1hcC1zb3J0ZWQ6ICgpO1xuICAkbWFwLWtleXM6IG1hcC5rZXlzKCRtYXApO1xuICAkbWFwLXZhbHVlczogbWFwLnZhbHVlcygkbWFwKTtcbiAgJG1hcC12YWx1ZXMtc29ydGVkOiBfcXVpY2stc29ydCgkbWFwLXZhbHVlcyk7XG5cbiAgLy8gUmVvcmRlciBrZXkvdmFsdWUgcGFpcnMgYmFzZWQgb24ga2V5IHZhbHVlc1xuICBAZWFjaCAkdmFsdWUgaW4gJG1hcC12YWx1ZXMtc29ydGVkIHtcbiAgICAkaW5kZXg6IGluZGV4KCRtYXAtdmFsdWVzLCAkdmFsdWUpO1xuICAgICRrZXk6IGxpc3QubnRoKCRtYXAta2V5cywgJGluZGV4KTtcbiAgICAkbWFwLXNvcnRlZDogbWFwLm1lcmdlKFxuICAgICAgJG1hcC1zb3J0ZWQsXG4gICAgICAoXG4gICAgICAgICRrZXk6ICR2YWx1ZSxcbiAgICAgIClcbiAgICApO1xuXG4gICAgLy8gVW5zZXQgdGhlIHZhbHVlIGluICRtYXAtdmFsdWVzIHRvIHByZXZlbnQgdGhlIGxvb3BcbiAgICAvLyBmcm9tIGZpbmRpbmcgdGhlIHNhbWUgaW5kZXggdHdpY2VcbiAgICAkbWFwLXZhbHVlczogbGlzdC5zZXQtbnRoKCRtYXAtdmFsdWVzLCAkaW5kZXgsIDApO1xuICB9XG5cbiAgQHJldHVybiAkbWFwLXNvcnRlZDtcbn1cblxuLy8vIEFkZCBhIGJyZWFrcG9pbnRcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbmFtZSAtIE5hbWUgb2YgdGhlIGJyZWFrcG9pbnRcbi8vLyBAcGFyYW0ge051bWJlcn0gJHdpZHRoIC0gV2lkdGggb2YgdGhlIGJyZWFrcG9pbnRcbi8vL1xuLy8vIEByZXF1aXJlcyB7VmFyaWFibGV9ICRicmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICBAaW5jbHVkZSBhZGQtYnJlYWtwb2ludCh0dnNjcmVlbiwgMTkyMHB4KTtcbi8vLyAgQGluY2x1ZGUgbXEodHZzY3JlZW4pIHt9XG5AbWl4aW4gYWRkLWJyZWFrcG9pbnQoJG5hbWUsICR3aWR0aCkge1xuICAkbmV3LWJyZWFrcG9pbnQ6IChcbiAgICAkbmFtZTogJHdpZHRoLFxuICApO1xuICAkYnJlYWtwb2ludHM6IG1hcC5tZXJnZSgkYnJlYWtwb2ludHMsICRuZXctYnJlYWtwb2ludCkgIWdsb2JhbDtcbiAgJGJyZWFrcG9pbnRzOiBfbWFwLXNvcnQtYnktdmFsdWUoJGJyZWFrcG9pbnRzKSAhZ2xvYmFsO1xufVxuXG4vLy8gU2hvdyB0aGUgYWN0aXZlIGJyZWFrcG9pbnQgaW4gdGhlIHRvcCByaWdodCBjb3JuZXIgb2YgdGhlIHZpZXdwb3J0XG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSNzZWVpbmctdGhlLWN1cnJlbnRseS1hY3RpdmUtYnJlYWtwb2ludFxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkc2hvdy1icmVha3BvaW50cyBbJHNob3ctYnJlYWtwb2ludHNdIC0gTGlzdCBvZiBicmVha3BvaW50cyB0byBzaG93IGluIHRoZSB0b3AgcmlnaHQgY29ybmVyXG4vLy8gQHBhcmFtIHtNYXB9ICRicmVha3BvaW50cyBbJGJyZWFrcG9pbnRzXSAtIEJyZWFrcG9pbnQgbmFtZXMgYW5kIHNpemVzXG4vLy9cbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkYnJlYWtwb2ludHNcbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkc2hvdy1icmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAvLyBTaG93IGJyZWFrcG9pbnRzIHVzaW5nIGdsb2JhbCBzZXR0aW5nc1xuLy8vICBAaW5jbHVkZSBzaG93LWJyZWFrcG9pbnRzO1xuLy8vXG4vLy8gIC8vIFNob3cgYnJlYWtwb2ludHMgdXNpbmcgY3VzdG9tIHNldHRpbmdzXG4vLy8gIEBpbmNsdWRlIHNob3ctYnJlYWtwb2ludHMoKEwsIFhMKSwgKFM6IDMwMHB4LCBMOiA4MDBweCwgWEw6IDEyMDBweCkpO1xuQG1peGluIHNob3ctYnJlYWtwb2ludHMoXG4gICRzaG93LWJyZWFrcG9pbnRzOiAkc2hvdy1icmVha3BvaW50cyxcbiAgJGJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHNcbikge1xuICBib2R5OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZjhlMztcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZiZWVkNTtcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNmYmVlZDU7XG4gICAgY29sb3I6ICNjMDk4NTM7XG4gICAgZm9udDogc21hbGwtY2FwdGlvbjtcbiAgICBwYWRkaW5nOiAzcHggNnB4O1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgei1pbmRleDogMTAwO1xuXG4gICAgLy8gTG9vcCB0aHJvdWdoIHRoZSBicmVha3BvaW50cyB0aGF0IHNob3VsZCBiZSBzaG93blxuICAgIEBlYWNoICRzaG93LWJyZWFrcG9pbnQgaW4gJHNob3ctYnJlYWtwb2ludHMge1xuICAgICAgJHdpZHRoOiBnZXQtYnJlYWtwb2ludC13aWR0aCgkc2hvdy1icmVha3BvaW50LCAkYnJlYWtwb2ludHMpO1xuICAgICAgQGluY2x1ZGUgbXEoJHNob3ctYnJlYWtwb2ludCwgJGJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHMpIHtcbiAgICAgICAgY29udGVudDogJyN7JHNob3ctYnJlYWtwb2ludH0g4omlICN7JHdpZHRofSAoI3tweDJlbSgkd2lkdGgpfSknO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AaWYgbGlzdC5sZW5ndGgoJHNob3ctYnJlYWtwb2ludHMpID4gMCB7XG4gIEBpbmNsdWRlIHNob3ctYnJlYWtwb2ludHM7XG59XG4iLCIvKiBub3JtYWxpemUuY3NzIHY4LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cclxuXHJcbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxyXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxyXG4gKiBhbmQgRmlyZWZveC5cclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cclxuICovXHJcblxyXG5hcnRpY2xlLFxyXG5hc2lkZSxcclxuZGV0YWlscyxcclxuZmlnY2FwdGlvbixcclxuZmlndXJlLFxyXG5mb290ZXIsXHJcbmhlYWRlcixcclxubWFpbixcclxubWVudSxcclxubmF2LFxyXG5zZWN0aW9uLFxyXG5zdW1tYXJ5IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLyoqXHJcbiAgKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxyXG4gICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxyXG4gICovXHJcblxyXG5hdWRpbyxcclxuY2FudmFzLFxyXG5wcm9ncmVzcyxcclxudmlkZW8ge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHJcbiAgLyogMSAqL1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxuXHJcbiAgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXHJcbiAgKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxyXG4gICovXHJcblxyXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgaGVpZ2h0OiAwO1xyXG59XHJcblxyXG4vKipcclxuICAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cclxuICAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cclxuICAqL1xyXG5cclxuW2hpZGRlbl0sXHJcbnRlbXBsYXRlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxyXG4gICovXHJcblxyXG5hYmJyW3RpdGxlXSB7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcclxufVxyXG5cclxuLyoqXHJcbiAgKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXHJcbiAgKi9cclxuXHJcbmIsXHJcbnN0cm9uZyB7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxufVxyXG5cclxuLyoqXHJcbiAgKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXHJcbiAgKi9cclxuXHJcbmRmbiB7XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG59XHJcblxyXG4vKipcclxuICAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXHJcbiAgKi9cclxuXHJcbm1hcmsge1xyXG4gIGJhY2tncm91bmQ6ICRncmF5LTIwMDtcclxuICBjb2xvcjogJGJsYWNrO1xyXG59XHJcblxyXG4vKipcclxuICAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICovXHJcblxyXG5zbWFsbCB7XHJcbiAgZm9udC1zaXplOiA4MCU7XHJcbn1cclxuXHJcbi8qKlxyXG4gICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICovXHJcblxyXG5zdWIsXHJcbnN1cCB7XHJcbiAgZm9udC1zaXplOiA3NSU7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuc3VwIHtcclxuICB0b3A6IC04cHg7XHJcbn1cclxuXHJcbnN1YiB7XHJcbiAgYm90dG9tOiAtNHB4O1xyXG59XHJcblxyXG4vKiBFbWJlZGRlZCBjb250ZW50XHJcbiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAgKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cclxuICAqL1xyXG5cclxuc3ZnOm5vdCg6cm9vdCkge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi8qIEZvcm1zXHJcbiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAgKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxyXG4gICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxyXG4gICovXHJcblxyXG4vKipcclxuICAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cclxuICAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxyXG4gICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cclxuICAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxyXG4gICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5vcHRncm91cCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgY29sb3I6IGluaGVyaXQ7XHJcblxyXG4gIC8qIDEgKi9cclxuICBmb250OiBpbmhlcml0O1xyXG5cclxuICAvKiAyICovXHJcbiAgbWFyZ2luOiAwO1xyXG5cclxuICAvKiAzICovXHJcbn1cclxuXHJcbi8qKlxyXG4gICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXHJcbiAgKi9cclxuXHJcbmJ1dHRvbiB7XHJcbiAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbn1cclxuXHJcbi8qKlxyXG4gICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxyXG4gICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cclxuICAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXHJcbiAgKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXHJcbiAgKi9cclxuXHJcbmJ1dHRvbixcclxuc2VsZWN0IHtcclxuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAgKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxyXG4gICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXHJcbiAgKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXHJcbiAgKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxyXG4gICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxyXG4gICovXHJcblxyXG5idXR0b24sXHJcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcclxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxyXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcclxuICAvKiAyICovXHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAvKiAzICovXHJcbn1cclxuXHJcbi8qKlxyXG4gICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cclxuICAqL1xyXG5cclxuYnV0dG9uW2Rpc2FibGVkXSxcclxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xyXG4gIGN1cnNvcjogZGVmYXVsdDtcclxufVxyXG5cclxuLyoqXHJcbiAgKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXHJcbiAgKi9cclxuXHJcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcclxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gIGJvcmRlcjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKipcclxuICAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cclxuICAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXHJcbiAgKlxyXG4gICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cclxuICAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXHJcbiAgKi9cclxuXHJcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcclxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cclxuICAvKiAxICovXHJcbiAgcGFkZGluZzogMDtcclxuXHJcbiAgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXHJcbiAgKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxyXG4gICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxyXG4gICovXHJcblxyXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXHJcbiAgKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXHJcbiAgKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXHJcbiAgKi9cclxuXHJcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXHJcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAgKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxyXG4gICovXHJcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXHJcbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cclxuICAqL1xyXG5cclxuZmllbGRzZXQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvcl9fYm9yZGVyLWZpZWxkc2V0O1xyXG4gIG1hcmdpbjogMCAycHg7XHJcbiAgcGFkZGluZzogNnB4IDEwcHggMTJweDtcclxufVxyXG5cclxuLyoqXHJcbiAgKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXHJcbiAgKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXHJcbiAgKi9cclxuXHJcbmxlZ2VuZCB7XHJcbiAgYm9yZGVyOiAwO1xyXG5cclxuICAvKiAxICovXHJcbiAgcGFkZGluZzogMDtcclxuXHJcbiAgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cclxuICAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxyXG4gICovXHJcblxyXG5vcHRncm91cCB7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxufVxyXG5cclxuLyogTm90ZTogVGhpcyBmaWxlIGlzIHVwZGF0ZWQgYnkgU2FnYXIsIFRvIHJlbW92ZSBkdWNwbGljYXRpb24gb2Ygc3R5bGVzLiAqL1xyXG5cclxuZmlndXJlIHtcclxuICBtYXJnaW46IDA7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcbiIsIi8qLS0tLS0tLS0tLS1cclxuXHRNZWRpYVxyXG4tLS0tLS0tLS0tLS0tKi9cclxuXHJcbi5wYWdlLWNvbnRlbnQgLndwLXNtaWxleSxcclxuLmVudHJ5LWNvbnRlbnQgLndwLXNtaWxleSxcclxuLmNvbW1lbnQtY29udGVudCAud3Atc21pbGV5IHtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxuICBtYXJnaW4tdG9wOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi8qIE1ha2Ugc3VyZSBlbWJlZHMgYW5kIGlmcmFtZXMgZml0IHRoZWlyIGNvbnRhaW5lcnMuICovXHJcbmVtYmVkLFxyXG5pZnJhbWUsXHJcbm9iamVjdCB7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uc2l0ZS1jb250ZW50IHtcclxuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9*/