/*!***************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/scss/editor.scss ***!
  \***************************************************************************************************************/
/*---------------------------------
		Colors Variables
-----------------------------------*/
/*---------------------------------
		Colors Variables
-----------------------------------*/
/*---------------------------------
		Opacity
-----------------------------------*/
/*---------------------------------
		Gradient
-----------------------------------*/
/*---------------------------------
		Element Colors
-----------------------------------*/
/*---------------------------------
		Border Colors
-----------------------------------*/
/*----------------
		Font
------------------*/
/*---------------------------------
		Body Text Font Sizes
-----------------------------------*/
/**
 * Add font scale with media query as per configuration on $body-text
 * Ex: @include body-text( h1 );
 * This will add font-size and line-height with different breakpoints.
 */
/* Entry meta */
.updated:not(.published) {
  display: none;
}

/* Pagination */
.page-numbers.current > span {
  background-color: #76e3c0;
  color: #fff;
}

html {
  box-sizing: border-box;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

/* stylelint-disable */
*,
*:before,
*:after {
  /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
  box-sizing: inherit;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

/* stylelint-enable */
body {
  margin: 0;
  font-family: "Lato", sans-serif;
  font-size: 16px;
  line-height: 1.43;
  background: #ffffff;
  color: #414042;
}
@media (min-width: 64em) {
  body {
    font-size: 18px;
    line-height: 1.43;
  }
}
body.mce-content-body {
  font-family: inherit;
  margin: 15px;
}

blockquote,
q,
blockquote.wp-block-quote {
  quotes: "" "";
  border-left: 4px solid #eeeeee;
  font-style: italic;
  margin: 0 0 30px 30px;
  padding-left: 16px;
  background: transparent;
  text-align: left;
  /* stylelint-disable */
  /* stylelint-enable */
}
blockquote p,
q p,
blockquote.wp-block-quote p {
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
}
blockquote cite,
blockquote .wp-block-quote__citation,
q cite,
q .wp-block-quote__citation,
blockquote.wp-block-quote cite,
blockquote.wp-block-quote .wp-block-quote__citation {
  display: block;
  font-size: 16px;
  font-weight: 700;
  margin-top: 12px;
  text-transform: uppercase;
}
blockquote p:last-of-type,
q p:last-of-type,
blockquote.wp-block-quote p:last-of-type {
  margin-bottom: 0;
}
blockquote.is-large, blockquote.is-style-large,
q.is-large,
q.is-style-large,
blockquote.wp-block-quote.is-large,
blockquote.wp-block-quote.is-style-large {
  margin: 0 auto;
}

/* Pull Quote
--------------------------------------------- */
.wp-block-pullquote {
  border: none;
  padding: 0;
  vertical-align: middle;
}
.wp-block-pullquote blockquote {
  border-left: 0;
  border-top: 8px solid #eeeeee;
  border-bottom: 8px solid #eeeeee;
  padding: 16px 0;
  text-align: center;
  max-width: 50%;
  margin: 0 auto;
}
.wp-block-pullquote.alignleft blockquote, .wp-block-pullquote.alignright blockquote {
  max-width: 100%;
}
.wp-block-pullquote img {
  height: auto;
  max-width: 100%;
  vertical-align: middle;
}

/* Image Support
--------------------------------------------- */
.wp-block-image.size-medium img, .wp-block-image.size-thumbnail img, .wp-block-image.is-resized img {
  width: auto;
}
.wp-block-image figcaption {
  text-align: left;
  padding: 10px 0;
}

figure {
  max-width: 100%;
}

a {
  cursor: pointer;
  color: #0192cc;
  text-decoration: none;
  transition: 0.3s;
}
a:focus {
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
a:hover,
a a:active {
  color: #355180;
  text-decoration: underline;
  outline: 0;
}

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
h1 {
  font-size: 31.5px;
  line-height: 1.27;
}

h2 {
  font-size: 31.5px;
  line-height: 1.27;
}

h3 {
  font-size: 24.5px;
  line-height: 1.64;
}

h4 {
  font-size: 17.5px;
  line-height: 1.142;
}

h5 {
  font-size: 14px;
  line-height: 1.43;
}

h6 {
  font-size: 11.9px;
  line-height: 1.681;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 10px 0;
  text-rendering: optimizelegibility;
}

/* Button
--------------------------------------------- */
.wp-block-button .wp-block-button__link {
  border-radius: 0;
  font-weight: 700;
  font-size: 16px;
  line-height: 18px;
  padding: 20px 24px;
}
.wp-block-button .wp-block-button__link:hover {
  background: #cccccc;
  text-decoration: none;
}

/*---------------------------
		Lists
---------------------------*/
ul,
ol {
  margin: 0 0 18px 0;
}
ul.no-bullet,
ul.no-bullet ul,
ul.no-bullet ol,
ol.no-bullet,
ol.no-bullet ul,
ol.no-bullet ol {
  margin: 0;
  padding: 0;
  list-style: none;
}

ul {
  padding: 0;
  margin: 0 0 10px 25px;
}
@media (min-width: 48em) {
  ul {
    margin: 0 0 5px 0;
  }
}

li > ul,
li > ol {
  margin-bottom: 0;
  margin-left: 18px;
}

dt {
  font-weight: 700;
}

dd {
  margin: 0 24px 24px;
}

p:empty {
  display: none;
}

li > ul,
li > ol {
  margin-bottom: 0;
}

/*------------------------------------*\
    #TABLE
\*------------------------------------*/
table {
  max-width: 100%;
  background-color: transparent;
  border-collapse: collapse;
  border-spacing: 0;
}
@media (min-width: 48em) {
  table {
    max-width: 350px;
  }
}

/*------------------------------------*\
    Form Fields
\*------------------------------------*/
input,
button,
select,
textarea {
  font-family: "Lato", sans-serif;
}

select,
textarea,
input[type=text],
input[type=password],
input[type=datetime],
input[type=datetime-local],
input[type=date],
input[type=month],
input[type=time],
input[type=week],
input[type=number],
input[type=email],
input[type=url],
input[type=search],
input[type=tel],
input[type=color],
.uneditable-input {
  display: inline-block;
  height: 20px;
  width: 206px;
  padding: 14px 6px; /* adjusting border-box difference on live site */
  height: 100%;
  line-height: 1.43;
  color: #555555;
  vertical-align: middle;
  border-radius: 4px;
  background-color: #ffffff;
  border: 1px solid #cccccc;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  transition: border linear 0.2s, box-shadow linear 0.2s;
}

textarea {
  height: auto;
  padding: 4px 6px;
  max-width: 100%;
  outline: none;
  overflow: auto;
}

select {
  box-shadow: none;
  transition: none;
  width: 220px;
  padding: 0 6px;
}

select,
input[type=file] {
  height: 30px;
  line-height: 2.15;
}

button {
  margin: 0;
}

label {
  display: block;
  margin-bottom: 5px;
}

label,
input,
button,
select,
textarea {
  font-size: 16px;
  line-height: 1.43;
  font-weight: 400;
}
@media (min-width: 64em) {
  label,
  input,
  button,
  select,
  textarea {
    font-size: 18px;
    line-height: 1.43;
  }
}

label,
select,
button,
input[type=button],
input[type=reset],
input[type=submit],
input[type=radio],
input[type=checkbox] {
  cursor: pointer;
}

input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-cancel-button {
  -webkit-appearance: none;
}

/*------------------------------------*\
    #OTHER
\*------------------------------------*/
pre {
  display: block;
  padding: 9.5px;
  margin: 0 0 10px;
  font-size: 13px;
  line-height: 1.54;
  word-break: break-all;
  word-wrap: break-word;
  white-space: pre-wrap;
  background-color: #e2eaee;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 4px;
  font-family: "Lato", sans-serif, monospace;
}

code {
  padding: 2px 4px;
  color: #d14;
  white-space: nowrap;
  background-color: #f7f7f9;
  border: 1px solid #e1e1e8;
  font-family: "Lato", sans-serif, monospace;
  font-size: 12px;
  border-radius: 3px;
}

/* Separator
--------------------------------------------- */
.wp-block-separator,
hr {
  width: 100%;
  margin: 20px 0;
  border: 0;
  border-top: 1px solid #eeeeee;
  border-bottom: 1px solid #ffffff;
  box-sizing: content-box;
}
.wp-block-separator:not(.is-style-dots),
hr:not(.is-style-dots) {
  background-color: #eff3f6;
  border: 0;
  height: 1px;
}
.wp-block-separator:not(.is-style-wide):not(.is-style-dots),
hr:not(.is-style-wide):not(.is-style-dots) {
  width: 100%;
  height: 4px;
  background: transparent;
}
.wp-block-separator:not(.is-style-wide):not(.is-style-dots)::before,
hr:not(.is-style-wide):not(.is-style-dots)::before {
  content: "";
  display: block;
  height: 4px;
  width: 40px;
  background: #eff3f6;
}
.wp-block-separator.is-style-dots::before,
hr.is-style-dots::before {
  color: #eff3f6;
  font-size: 18px;
  letter-spacing: 12px;
  padding-left: 12px;
}

a {
  color: #6c757d;
}

.box {
  position: relative;
}

.input {
  padding: 10px;
  width: 85px;
  height: 40px;
  background: none;
  border: 2px solid #ffffff;
  border-radius: 50px;
  box-sizing: border-box;
  outline: none;
  transition: 0.5s;
}

.box:hover input {
  color: #414042;
  width: 250px;
  background: #76e3c0;
  border-radius: 10px;
}

.box i {
  position: absolute;
  top: 50%;
  right: 15px;
  transform: translate(-50%, -50%);
  font-size: 26px;
  color: #ffd52d;
  transition: 0.2s;
}

.box:hover i {
  opacity: 0;
  z-index: -1;
}

.category-btn:nth-child(0) {
  background: rgba(64, 163, 80, 0.3);
}
.category-btn:nth-child(1) {
  background: rgba(111, 245, 186, 0.3);
}
.category-btn:nth-child(2) {
  background: rgba(170, 207, 89, 0.3);
}
.category-btn:nth-child(3) {
  background: rgba(241, 36, 108, 0.3);
}
.category-btn:nth-child(4) {
  background: rgba(204, 91, 15, 0.3);
}

.category-link {
  color: black;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/